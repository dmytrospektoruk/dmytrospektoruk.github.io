




/*
     FILE ARCHIVED ON 4:49:56 мар 26, 2016 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 3:30:00 ноя 27, 2016.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
"use strict";var THREE={REVISION:"66"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},function(){for(var e=0,t=["ms","moz","webkit","o"],i=0;i<t.length&&!self.requestAnimationFrame;++i)self.requestAnimationFrame=self[t[i]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[i]+"CancelAnimationFrame"]||self[t[i]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(t){var i=Date.now(),r=Math.max(0,16-(i-e)),n=self.setTimeout(function(){t(i+r)},r);return e=i+r,n}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(e){self.clearTimeout(e)})}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(e)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,i){return this.r=e,this.g=t,this.b=i,this},setHSL:function(e,t,i){if(0===t)this.r=this.g=this.b=i;else{var r=function(e,t,i){return 0>i&&(i+=1),i>1&&(i-=1),1/6>i?e+6*(t-e)*i:.5>i?t:2/3>i?e+6*(t-e)*(2/3-i):e};t=.5>=i?i*(1+t):i+t-i*t,i=2*i-t,this.r=r(i,t,e+1/3),this.g=r(i,t,e),this.b=r(i,t,e-1/3)}return this},setStyle:function(e){return/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)?(e=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e),this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this):/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)?(e=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e),this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this):/^\#([0-9a-f]{6})$/i.test(e)?(e=/^\#([0-9a-f]{6})$/i.exec(e),this.setHex(parseInt(e[1],16)),this):/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)?(e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e),this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this):/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,i=this.b;return this.r=e*e,this.g=t*t,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){e=e||{h:0,s:0,l:0};var t,i=this.r,r=this.g,n=this.b,o=Math.max(i,r,n),a=Math.min(i,r,n),s=(a+o)/2;if(a===o)a=t=0;else{var h=o-a,a=.5>=s?h/(o+a):h/(2-o-a);switch(o){case i:t=(r-n)/h+(n>r?6:0);break;case r:t=(n-i)/h+2;break;case n:t=(i-r)/h+4}t/=6}return e.h=t,e.s=a,e.l=s,e},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,i){var r=this.getHSL();return r.h+=e,r.s+=t,r.l+=i,this.setHSL(r.h,r.s,r.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){return this.r=e[0],this.g=e[1],this.b=e[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,i,r){this._x=e||0,this._y=t||0,this._z=i||0,this._w=void 0!==r?r:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(e){this._x=e,this._updateEuler()},get y(){return this._y},set y(e){this._y=e,this._updateEuler()},get z(){return this._z},set z(e){this._z=e,this._updateEuler()},get w(){return this._w},set w(e){this._w=e,this._updateEuler()},set:function(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._updateEuler(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._w=e._w,this._updateEuler(),this},setFromEuler:function(e,t){if(!1==e instanceof THREE.Euler)throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var i=Math.cos(e._x/2),r=Math.cos(e._y/2),n=Math.cos(e._z/2),o=Math.sin(e._x/2),a=Math.sin(e._y/2),s=Math.sin(e._z/2);return"XYZ"===e.order?(this._x=o*r*n+i*a*s,this._y=i*a*n-o*r*s,this._z=i*r*s+o*a*n,this._w=i*r*n-o*a*s):"YXZ"===e.order?(this._x=o*r*n+i*a*s,this._y=i*a*n-o*r*s,this._z=i*r*s-o*a*n,this._w=i*r*n+o*a*s):"ZXY"===e.order?(this._x=o*r*n-i*a*s,this._y=i*a*n+o*r*s,this._z=i*r*s+o*a*n,this._w=i*r*n-o*a*s):"ZYX"===e.order?(this._x=o*r*n-i*a*s,this._y=i*a*n+o*r*s,this._z=i*r*s-o*a*n,this._w=i*r*n+o*a*s):"YZX"===e.order?(this._x=o*r*n+i*a*s,this._y=i*a*n+o*r*s,this._z=i*r*s-o*a*n,this._w=i*r*n-o*a*s):"XZY"===e.order&&(this._x=o*r*n-i*a*s,this._y=i*a*n-o*r*s,this._z=i*r*s+o*a*n,this._w=i*r*n+o*a*s),!1!==t&&this._updateEuler(),this},setFromAxisAngle:function(e,t){var i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._updateEuler(),this},setFromRotationMatrix:function(e){var t=e.elements,i=t[0];e=t[4];var r=t[8],n=t[1],o=t[5],a=t[9],s=t[2],h=t[6],t=t[10],l=i+o+t;return l>0?(i=.5/Math.sqrt(l+1),this._w=.25/i,this._x=(h-a)*i,this._y=(r-s)*i,this._z=(n-e)*i):i>o&&i>t?(i=2*Math.sqrt(1+i-o-t),this._w=(h-a)/i,this._x=.25*i,this._y=(e+n)/i,this._z=(r+s)/i):o>t?(i=2*Math.sqrt(1+o-i-t),this._w=(r-s)/i,this._x=(e+n)/i,this._y=.25*i,this._z=(a+h)/i):(i=2*Math.sqrt(1+t-i-o),this._w=(n-e)/i,this._x=(r+s)/i,this._y=(a+h)/i,this._z=.25*i),this._updateEuler(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._updateEuler(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._z=this._y=this._x=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var i=e._x,r=e._y,n=e._z,o=e._w,a=t._x,s=t._y,h=t._z,l=t._w;return this._x=i*l+o*a+r*h-n*s,this._y=r*l+o*s+n*a-i*h,this._z=n*l+o*h+i*s-r*a,this._w=o*l-i*a-r*s-n*h,this._updateEuler(),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var i=this._x,r=this._y,n=this._z,o=this._w,a=o*e._w+i*e._x+r*e._y+n*e._z;if(0>a?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);return.001>Math.abs(h)?(this._w=.5*(o+this._w),this._x=.5*(i+this._x),this._y=.5*(r+this._y),this._z=.5*(n+this._z),this):(a=Math.sin((1-t)*s)/h,s=Math.sin(t*s)/h,this._w=o*a+this._w*s,this._x=i*a+this._x*s,this._y=r*a+this._y*s,this._z=n*a+this._z*s,this._updateEuler(),this)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],this._w=e[3],this._updateEuler(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(e,t,i,r){return i.copy(e).slerp(t,r)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){return 0!==e?(e=1/e,this.x*=e,this.y*=e):this.y=this.x=0,this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},clampScalar:function(){var e,t;return function(i,r){return void 0===e&&(e=new THREE.Vector2,t=new THREE.Vector2),e.set(i,i),t.set(r,r),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x;return e=this.y-e.y,t*t+e*e},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e){return this.x=e[0],this.y=e[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,i){this.x=e||0,this.y=t||0,this.z=i||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,i){return this.x=e,this.y=t,this.z=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(t){return!1==t instanceof THREE.Euler&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e;return function(t,i){return void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,i)),this}}(),applyMatrix3:function(e){var t=this.x,i=this.y,r=this.z;return e=e.elements,this.x=e[0]*t+e[3]*i+e[6]*r,this.y=e[1]*t+e[4]*i+e[7]*r,this.z=e[2]*t+e[5]*i+e[8]*r,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z;return e=e.elements,this.x=e[0]*t+e[4]*i+e[8]*r+e[12],this.y=e[1]*t+e[5]*i+e[9]*r+e[13],this.z=e[2]*t+e[6]*i+e[10]*r+e[14],this},applyProjection:function(e){var t=this.x,i=this.y,r=this.z;e=e.elements;var n=1/(e[3]*t+e[7]*i+e[11]*r+e[15]);return this.x=(e[0]*t+e[4]*i+e[8]*r+e[12])*n,this.y=(e[1]*t+e[5]*i+e[9]*r+e[13])*n,this.z=(e[2]*t+e[6]*i+e[10]*r+e[14])*n,this},applyQuaternion:function(e){var t=this.x,i=this.y,r=this.z,n=e.x,o=e.y,a=e.z;e=e.w;var s=e*t+o*r-a*i,h=e*i+a*t-n*r,l=e*r+n*i-o*t,t=-n*t-o*i-a*r;return this.x=s*e+t*-n+h*-a-l*-o,this.y=h*e+t*-o+l*-n-s*-a,this.z=l*e+t*-a+s*-o-h*-n,this},transformDirection:function(e){var t=this.x,i=this.y,r=this.z;return e=e.elements,this.x=e[0]*t+e[4]*i+e[8]*r,this.y=e[1]*t+e[5]*i+e[9]*r,this.z=e[2]*t+e[6]*i+e[10]*r,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return 0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e):this.z=this.y=this.x=0,this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},clampScalar:function(){var e,t;return function(i,r){return void 0===e&&(e=new THREE.Vector3,t=new THREE.Vector3),e.set(i,i,i),t.set(r,r,r),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var i=this.x,r=this.y,n=this.z;return this.x=r*e.z-n*e.y,this.y=n*e.x-i*e.z,this.z=i*e.y-r*e.x,this},crossVectors:function(e,t){var i=e.x,r=e.y,n=e.z,o=t.x,a=t.y,s=t.z;return this.x=r*s-n*a,this.y=n*o-i*s,this.z=i*a-r*o,this},projectOnVector:function(){var e,t;return function(i){return void 0===e&&(e=new THREE.Vector3),e.copy(i).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){return e=this.dot(e)/(this.length()*e.length()),Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y;return e=this.z-e.z,t*t+i*i+e*e},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(e){return console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code."),this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),i=this.set(e.elements[4],e.elements[5],e.elements[6]).length();return e=this.set(e.elements[8],e.elements[9],e.elements[10]).length(),this.x=t,this.y=i,this.z=e,this},setFromMatrixColumn:function(e,t){var i=4*e,r=t.elements;return this.x=r[i],this.y=r[i+1],this.z=r[i+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,n=this.w;return e=e.elements,this.x=e[0]*t+e[4]*i+e[8]*r+e[12]*n,this.y=e[1]*t+e[5]*i+e[9]*r+e[13]*n,this.z=e[2]*t+e[6]*i+e[10]*r+e[14]*n,this.w=e[3]*t+e[7]*i+e[11]*r+e[15]*n,this},divideScalar:function(e){return 0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.z=this.y=this.x=0,this.w=1),this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,i,r;e=e.elements;var n=e[0];r=e[4];var o=e[8],a=e[1],s=e[5],h=e[9];i=e[2],t=e[6];var l=e[10];return.01>Math.abs(r-a)&&.01>Math.abs(o-i)&&.01>Math.abs(h-t)?.1>Math.abs(r+a)&&.1>Math.abs(o+i)&&.1>Math.abs(h+t)&&.1>Math.abs(n+s+l-3)?(this.set(1,0,0,0),this):(e=Math.PI,n=(n+1)/2,s=(s+1)/2,l=(l+1)/2,r=(r+a)/4,o=(o+i)/4,h=(h+t)/4,n>s&&n>l?.01>n?(t=0,r=i=.707106781):(t=Math.sqrt(n),i=r/t,r=o/t):s>l?.01>s?(t=.707106781,i=0,r=.707106781):(i=Math.sqrt(s),t=r/i,r=h/i):.01>l?(i=t=.707106781,r=0):(r=Math.sqrt(l),t=o/r,i=h/r),this.set(t,i,r,e),this):(e=Math.sqrt((t-h)*(t-h)+(o-i)*(o-i)+(a-r)*(a-r)),.001>Math.abs(e)&&(e=1),this.x=(t-h)/e,this.y=(o-i)/e,this.z=(a-r)/e,this.w=Math.acos((n+s+l-1)/2),this)},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},clampScalar:function(){var e,t;return function(i,r){return void 0===e&&(e=new THREE.Vector4,t=new THREE.Vector4),e.set(i,i,i,i),t.set(r,r,r,r),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this.w=e[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(e,t,i,r){this._x=e||0,this._y=t||0,this._z=i||0,this._order=r||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" "),THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(e){this._x=e,this._updateQuaternion()},get y(){return this._y},set y(e){this._y=e,this._updateQuaternion()},get z(){return this._z},set z(e){this._z=e,this._updateQuaternion()},get order(){return this._order},set order(e){this._order=e,this._updateQuaternion()},set:function(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._order=r||this._order,this._updateQuaternion(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._updateQuaternion(),this},setFromRotationMatrix:function(e,t){function i(e){return Math.min(Math.max(e,-1),1)}var r=e.elements,n=r[0],o=r[4],a=r[8],s=r[1],h=r[5],l=r[9],c=r[2],u=r[6],r=r[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(i(a)),.99999>Math.abs(a)?(this._x=Math.atan2(-l,r),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===t?(this._x=Math.asin(-i(l)),.99999>Math.abs(l)?(this._y=Math.atan2(a,r),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,n),this._z=0)):"ZXY"===t?(this._x=Math.asin(i(u)),.99999>Math.abs(u)?(this._y=Math.atan2(-c,r),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(s,n))):"ZYX"===t?(this._y=Math.asin(-i(c)),.99999>Math.abs(c)?(this._x=Math.atan2(u,r),this._z=Math.atan2(s,n)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===t?(this._z=Math.asin(i(s)),.99999>Math.abs(s)?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(a,r))):"XZY"===t?(this._z=Math.asin(-i(o)),.99999>Math.abs(o)?(this._x=Math.atan2(u,h),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,r),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+t),this._order=t,this._updateQuaternion(),this},setFromQuaternion:function(e,t,i){function r(e){return Math.min(Math.max(e,-1),1)}var n=e.x*e.x,o=e.y*e.y,a=e.z*e.z,s=e.w*e.w;return t=t||this._order,"XYZ"===t?(this._x=Math.atan2(2*(e.x*e.w-e.y*e.z),s-n-o+a),this._y=Math.asin(r(2*(e.x*e.z+e.y*e.w))),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s+n-o-a)):"YXZ"===t?(this._x=Math.asin(r(2*(e.x*e.w-e.y*e.z))),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s-n-o+a),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s-n+o-a)):"ZXY"===t?(this._x=Math.asin(r(2*(e.x*e.w+e.y*e.z))),this._y=Math.atan2(2*(e.y*e.w-e.z*e.x),s-n-o+a),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s-n+o-a)):"ZYX"===t?(this._x=Math.atan2(2*(e.x*e.w+e.z*e.y),s-n-o+a),this._y=Math.asin(r(2*(e.y*e.w-e.x*e.z))),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s+n-o-a)):"YZX"===t?(this._x=Math.atan2(2*(e.x*e.w-e.z*e.y),s-n+o-a),this._y=Math.atan2(2*(e.y*e.w-e.x*e.z),s+n-o-a),this._z=Math.asin(r(2*(e.x*e.y+e.z*e.w)))):"XZY"===t?(this._x=Math.atan2(2*(e.x*e.w+e.y*e.z),s-n+o-a),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s+n-o-a),this._z=Math.asin(r(2*(e.z*e.w-e.x*e.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+t),this._order=t,!1!==i&&this._updateQuaternion(),this
},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._updateQuaternion(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var i=t||new THREE.Vector3;return this.delta(i).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r){e.subVectors(i,this.start),t.subVectors(this.end,this.start);var n=t.dot(t),n=t.dot(e)/n;return r&&(n=THREE.Math.clamp(n,0,1)),n}}(),closestPointToPoint:function(e,t,i){return e=this.closestPointToPointParameter(e,t),i=i||new THREE.Vector3,this.delta(i).multiplyScalar(e).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t),this.max.copy(t);for(var i=1,r=e.length;r>i;i++)t=e[i],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,i){var r=e.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e,t){return(t||new THREE.Vector2).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},addPoint:function(e){e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y),e.z<this.min.z?this.min.z=e.z:e.z>this.max.z&&(this.max.z=e.z)},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t),this.max.copy(t);for(var t=1,i=e.length;i>t;t++)this.addPoint(e[t])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,i){var r=e.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var i=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){if(void 0!==t.geometry&&void 0!==t.geometry.vertices)for(var r=t.geometry.vertices,n=0,o=r.length;o>n;n++)e.copy(r[n]),e.applyMatrix4(t.matrixWorld),i.expandByPoint(e)}),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e,t){return(t||new THREE.Vector3).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){return t=t||new THREE.Sphere,t.center=this.center(),t.radius=.5*this.size(e).length(),t}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(e,t,i,r,n,o,a,s,h){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,i||0,r||0,void 0!==n?n:1,o||0,a||0,s||0,void 0!==h?h:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,i,r,n,o,a,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=i,l[1]=r,l[4]=n,l[7]=o,l[2]=a,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var i=0,r=t.length;r>i;i+=3)e.x=t[i],e.y=t[i+1],e.z=t[i+2],e.applyMatrix3(this),t[i]=e.x,t[i+1]=e.y,t[i+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],o=e[4],a=e[5],s=e[6],h=e[7],e=e[8];return t*o*e-t*a*h-i*n*e+i*a*s+r*n*h-r*o*s},getInverse:function(e,t){var i=e.elements,r=this.elements;if(r[0]=i[10]*i[5]-i[6]*i[9],r[1]=-i[10]*i[1]+i[2]*i[9],r[2]=i[6]*i[1]-i[2]*i[5],r[3]=-i[10]*i[4]+i[6]*i[8],r[4]=i[10]*i[0]-i[2]*i[8],r[5]=-i[6]*i[0]+i[2]*i[4],r[6]=i[9]*i[4]-i[5]*i[8],r[7]=-i[9]*i[0]+i[1]*i[8],r[8]=i[5]*i[0]-i[1]*i[4],i=i[0]*r[0]+i[1]*r[3]+i[2]*r[6],0===i){if(t)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/i),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},THREE.Matrix4=function(e,t,i,r,n,o,a,s,h,l,c,u,p,f,d,E){var m=this.elements=new Float32Array(16);m[0]=void 0!==e?e:1,m[4]=t||0,m[8]=i||0,m[12]=r||0,m[1]=n||0,m[5]=void 0!==o?o:1,m[9]=a||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=u||0,m[3]=p||0,m[7]=f||0,m[11]=d||0,m[15]=void 0!==E?E:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,i,r,n,o,a,s,h,l,c,u,p,f,d,E){var m=this.elements;return m[0]=e,m[4]=t,m[8]=i,m[12]=r,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=p,m[7]=f,m[11]=d,m[15]=E,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements;return e=e.elements,t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var i=this.elements;t=t.elements;var r=1/e.set(t[0],t[1],t[2]).length(),n=1/e.set(t[4],t[5],t[6]).length(),o=1/e.set(t[8],t[9],t[10]).length();return i[0]=t[0]*r,i[1]=t[1]*r,i[2]=t[2]*r,i[4]=t[4]*n,i[5]=t[5]*n,i[6]=t[6]*n,i[8]=t[8]*o,i[9]=t[9]*o,i[10]=t[10]*o,this}}(),makeRotationFromEuler:function(e){!1==e instanceof THREE.Euler&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var t=this.elements,i=e.x,r=e.y,n=e.z,o=Math.cos(i),i=Math.sin(i),a=Math.cos(r),r=Math.sin(r),s=Math.cos(n),n=Math.sin(n);if("XYZ"===e.order){e=o*s;var h=o*n,l=i*s,c=i*n;t[0]=a*s,t[4]=-a*n,t[8]=r,t[1]=h+l*r,t[5]=e-c*r,t[9]=-i*a,t[2]=c-e*r,t[6]=l+h*r,t[10]=o*a}else"YXZ"===e.order?(e=a*s,h=a*n,l=r*s,c=r*n,t[0]=e+c*i,t[4]=l*i-h,t[8]=o*r,t[1]=o*n,t[5]=o*s,t[9]=-i,t[2]=h*i-l,t[6]=c+e*i,t[10]=o*a):"ZXY"===e.order?(e=a*s,h=a*n,l=r*s,c=r*n,t[0]=e-c*i,t[4]=-o*n,t[8]=l+h*i,t[1]=h+l*i,t[5]=o*s,t[9]=c-e*i,t[2]=-o*r,t[6]=i,t[10]=o*a):"ZYX"===e.order?(e=o*s,h=o*n,l=i*s,c=i*n,t[0]=a*s,t[4]=l*r-h,t[8]=e*r+c,t[1]=a*n,t[5]=c*r+e,t[9]=h*r-l,t[2]=-r,t[6]=i*a,t[10]=o*a):"YZX"===e.order?(e=o*a,h=o*r,l=i*a,c=i*r,t[0]=a*s,t[4]=c-e*n,t[8]=l*n+h,t[1]=n,t[5]=o*s,t[9]=-i*s,t[2]=-r*s,t[6]=h*n+l,t[10]=e-c*n):"XZY"===e.order&&(e=o*a,h=o*r,l=i*a,c=i*r,t[0]=a*s,t[4]=-n,t[8]=r*s,t[1]=e*n+c,t[5]=o*s,t[9]=h*n-l,t[2]=l*n-h,t[6]=i*s,t[10]=c*n+e);return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(e){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z,o=e.w,a=i+i,s=r+r,h=n+n;e=i*a;var l=i*s,i=i*h,c=r*s,r=r*h,n=n*h,a=o*a,s=o*s,o=o*h;return t[0]=1-(c+n),t[4]=l-o,t[8]=i+s,t[1]=l+o,t[5]=1-(e+n),t[9]=r-a,t[2]=i-s,t[6]=r+a,t[10]=1-(e+c),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(r,n,o){var a=this.elements;return i.subVectors(r,n).normalize(),0===i.length()&&(i.z=1),e.crossVectors(o,i).normalize(),0===e.length()&&(i.x+=1e-4,e.crossVectors(o,i).normalize()),t.crossVectors(i,e),a[0]=e.x,a[4]=t.x,a[8]=i.x,a[1]=e.y,a[5]=t.y,a[9]=i.y,a[2]=e.z,a[6]=t.z,a[10]=i.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var i=e.elements,r=t.elements,n=this.elements,o=i[0],a=i[4],s=i[8],h=i[12],l=i[1],c=i[5],u=i[9],p=i[13],f=i[2],d=i[6],E=i[10],m=i[14],g=i[3],T=i[7],v=i[11],i=i[15],y=r[0],R=r[4],x=r[8],H=r[12],_=r[1],b=r[5],w=r[9],M=r[13],S=r[2],A=r[6],C=r[10],L=r[14],P=r[3],D=r[7],F=r[11],r=r[15];return n[0]=o*y+a*_+s*S+h*P,n[4]=o*R+a*b+s*A+h*D,n[8]=o*x+a*w+s*C+h*F,n[12]=o*H+a*M+s*L+h*r,n[1]=l*y+c*_+u*S+p*P,n[5]=l*R+c*b+u*A+p*D,n[9]=l*x+c*w+u*C+p*F,n[13]=l*H+c*M+u*L+p*r,n[2]=f*y+d*_+E*S+m*P,n[6]=f*R+d*b+E*A+m*D,n[10]=f*x+d*w+E*C+m*F,n[14]=f*H+d*M+E*L+m*r,n[3]=g*y+T*_+v*S+i*P,n[7]=g*R+T*b+v*A+i*D,n[11]=g*x+T*w+v*C+i*F,n[15]=g*H+T*M+v*L+i*r,this},multiplyToArray:function(e,t,i){var r=this.elements;return this.multiplyMatrices(e,t),i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3],i[4]=r[4],i[5]=r[5],i[6]=r[6],i[7]=r[7],i[8]=r[8],i[9]=r[9],i[10]=r[10],i[11]=r[11],i[12]=r[12],i[13]=r[13],i[14]=r[14],i[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var i=0,r=t.length;r>i;i+=3)e.x=t[i],e.y=t[i+1],e.z=t[i+2],e.applyProjection(this),t[i]=e.x,t[i+1]=e.y,t[i+2]=e.z;return t}}(),rotateAxis:function(e){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],i=e[4],r=e[8],n=e[12],o=e[1],a=e[5],s=e[9],h=e[13],l=e[2],c=e[6],u=e[10],p=e[14];return e[3]*(+n*s*c-r*h*c-n*a*u+i*h*u+r*a*p-i*s*p)+e[7]*(+t*s*p-t*h*u+n*o*u-r*o*p+r*h*l-n*s*l)+e[11]*(+t*h*c-t*a*p-n*o*c+i*o*p+n*a*l-i*h*l)+e[15]*(-r*a*l-t*s*c+t*a*u+r*o*c-i*o*u+i*s*l)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var i=this.elements,r=e.elements,n=r[0],o=r[4],a=r[8],s=r[12],h=r[1],l=r[5],c=r[9],u=r[13],p=r[2],f=r[6],d=r[10],E=r[14],m=r[3],g=r[7],T=r[11],r=r[15];if(i[0]=c*E*g-u*d*g+u*f*T-l*E*T-c*f*r+l*d*r,i[4]=s*d*g-a*E*g-s*f*T+o*E*T+a*f*r-o*d*r,i[8]=a*u*g-s*c*g+s*l*T-o*u*T-a*l*r+o*c*r,i[12]=s*c*f-a*u*f-s*l*d+o*u*d+a*l*E-o*c*E,i[1]=u*d*m-c*E*m-u*p*T+h*E*T+c*p*r-h*d*r,i[5]=a*E*m-s*d*m+s*p*T-n*E*T-a*p*r+n*d*r,i[9]=s*c*m-a*u*m-s*h*T+n*u*T+a*h*r-n*c*r,i[13]=a*u*p-s*c*p+s*h*d-n*u*d-a*h*E+n*c*E,i[2]=l*E*m-u*f*m+u*p*g-h*E*g-l*p*r+h*f*r,i[6]=s*f*m-o*E*m-s*p*g+n*E*g+o*p*r-n*f*r,i[10]=o*u*m-s*l*m+s*h*g-n*u*g-o*h*r+n*l*r,i[14]=s*l*p-o*u*p-s*h*f+n*u*f+o*h*E-n*l*E,i[3]=c*f*m-l*d*m-c*p*g+h*d*g+l*p*T-h*f*T,i[7]=o*d*m-a*f*m+a*p*g-n*d*g-o*p*T+n*f*T,i[11]=a*l*m-o*c*m-a*h*g+n*c*g+o*h*T-n*l*T,i[15]=o*c*p-a*l*p+a*h*f-n*c*f-o*h*d+n*l*d,i=n*i[0]+h*i[4]+p*i[8]+m*i[12],0==i){if(t)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/i),this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,i=e.x,r=e.y;return e=e.z,t[0]*=i,t[4]*=r,t[8]*=e,t[1]*=i,t[5]*=r,t[9]*=e,t[2]*=i,t[6]*=r,t[10]*=e,t[3]*=i,t[7]*=r,t[11]*=e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var i=Math.cos(t),r=Math.sin(t),n=1-i,o=e.x,a=e.y,s=e.z,h=n*o,l=n*a;return this.set(h*o+i,h*a-r*s,h*s+r*a,0,h*a+r*s,l*a+i,l*s-r*o,0,h*s-r*a,l*s+r*o,n*s*s+i,0,0,0,0,1),this},makeScale:function(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},compose:function(e,t,i){return this.makeRotationFromQuaternion(t),this.scale(i),this.setPosition(e),this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(i,r,n){var o=this.elements,a=e.set(o[0],o[1],o[2]).length(),s=e.set(o[4],o[5],o[6]).length(),h=e.set(o[8],o[9],o[10]).length();0>this.determinant()&&(a=-a),i.x=o[12],i.y=o[13],i.z=o[14],t.elements.set(this.elements),i=1/a;var o=1/s,l=1/h;return t.elements[0]*=i,t.elements[1]*=i,t.elements[2]*=i,t.elements[4]*=o,t.elements[5]*=o,t.elements[6]*=o,t.elements[8]*=l,t.elements[9]*=l,t.elements[10]*=l,r.setFromRotationMatrix(t),n.x=a,n.y=s,n.z=h,this}}(),makeFrustum:function(e,t,i,r,n,o){var a=this.elements;return a[0]=2*n/(t-e),a[4]=0,a[8]=(t+e)/(t-e),a[12]=0,a[1]=0,a[5]=2*n/(r-i),a[9]=(r+i)/(r-i),a[13]=0,a[2]=0,a[6]=0,a[10]=-(o+n)/(o-n),a[14]=-2*o*n/(o-n),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,i,r){e=i*Math.tan(THREE.Math.degToRad(.5*e));var n=-e;return this.makeFrustum(n*t,e*t,n,e,i,r)},makeOrthographic:function(e,t,i,r,n,o){var a=this.elements,s=t-e,h=i-r,l=o-n;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-((t+e)/s),a[1]=0,a[5]=2/h,a[9]=0,a[13]=-((i+r)/h),a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-((o+n)/l),a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var i=t||new THREE.Vector3;i.subVectors(e,this.origin);var r=i.dot(this.direction);return 0>r?i.copy(this.origin):i.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var i=e.subVectors(t,this.origin).dot(this.direction);return 0>i?this.origin.distanceTo(t):(e.copy(this.direction).multiplyScalar(i).add(this.origin),e.distanceTo(t))}}(),distanceSqToSegment:function(e,t,i,r){var n=e.clone().add(t).multiplyScalar(.5),o=t.clone().sub(e).normalize(),a=.5*e.distanceTo(t),s=this.origin.clone().sub(n);e=-this.direction.dot(o),t=s.dot(this.direction);var h,l,c=-s.dot(o),u=s.lengthSq(),p=Math.abs(1-e*e);return p>=0?(s=e*c-t,h=e*t-c,l=a*p,s>=0?h>=-l?l>=h?(a=1/p,s*=a,h*=a,e=s*(s+e*h+2*t)+h*(e*s+h+2*c)+u):(h=a,s=Math.max(0,-(e*h+t)),e=-s*s+h*(h+2*c)+u):(h=-a,s=Math.max(0,-(e*h+t)),e=-s*s+h*(h+2*c)+u):-l>=h?(s=Math.max(0,-(-e*a+t)),h=s>0?-a:Math.min(Math.max(-a,-c),a),e=-s*s+h*(h+2*c)+u):l>=h?(s=0,h=Math.min(Math.max(-a,-c),a),e=h*(h+2*c)+u):(s=Math.max(0,-(e*a+t)),h=s>0?a:Math.min(Math.max(-a,-c),a),e=-s*s+h*(h+2*c)+u)):(h=e>0?-a:a,s=Math.max(0,-(e*h+t)),e=-s*s+h*(h+2*c)+u),i&&i.copy(this.direction.clone().multiplyScalar(s).add(this.origin)),r&&r.copy(o.clone().multiplyScalar(h).add(n)),e},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||0>e.normal.dot(this.direction)*t?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);return 0==t?0==e.distanceToPoint(this.origin)?0:null:(e=-(this.origin.dot(e.normal)+e.constant)/t,e>=0?e:null)},intersectPlane:function(e,t){var i=this.distanceToPlane(e);return null===i?null:this.at(i,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var i,r,n,o,a;r=1/this.direction.x,o=1/this.direction.y,a=1/this.direction.z;var s=this.origin;return r>=0?(i=(e.min.x-s.x)*r,r*=e.max.x-s.x):(i=(e.max.x-s.x)*r,r*=e.min.x-s.x),o>=0?(n=(e.min.y-s.y)*o,o*=e.max.y-s.y):(n=(e.max.y-s.y)*o,o*=e.min.y-s.y),i>o||n>r?null:((n>i||i!==i)&&(i=n),(r>o||r!==r)&&(r=o),a>=0?(n=(e.min.z-s.z)*a,a*=e.max.z-s.z):(n=(e.max.z-s.z)*a,a*=e.min.z-s.z),i>a||n>r?null:((n>i||i!==i)&&(i=n),(r>a||r!==r)&&(r=a),0>r?null:this.at(i>=0?i:r,t)))},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3,r=new THREE.Vector3;return function(n,o,a,s,h){if(t.subVectors(o,n),i.subVectors(a,n),r.crossVectors(t,i),o=this.direction.dot(r),o>0){if(s)return null;s=1}else{if(!(0>o))return null;s=-1,o=-o}return e.subVectors(this.origin,n),n=s*this.direction.dot(i.crossVectors(e,i)),0>n?null:(a=s*this.direction.dot(t.cross(e)),0>a||n+a>o?null:(n=-s*e.dot(r),0>n?null:this.at(n/o,h)))}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(t,i){var r=this.center;void 0!==i?r.copy(i):e.setFromPoints(t).center(r);for(var n=0,o=0,a=t.length;a>o;o++)n=Math.max(n,r.distanceToSquared(t[o]));return this.radius=Math.sqrt(n),this}}(),copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var i=this.center.distanceToSquared(e),r=t||new THREE.Vector3;return r.copy(e),i>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){return e=e||new THREE.Box3,e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,i,r,n,o){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,i,r,n,o){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(n),a[5].copy(o),this},copy:function(e){for(var t=this.planes,i=0;6>i;i++)t[i].copy(e.planes[i]);return this},setFromMatrix:function(e){var t=this.planes,i=e.elements;e=i[0];var r=i[1],n=i[2],o=i[3],a=i[4],s=i[5],h=i[6],l=i[7],c=i[8],u=i[9],p=i[10],f=i[11],d=i[12],E=i[13],m=i[14],i=i[15];return t[0].setComponents(o-e,l-a,f-c,i-d).normalize(),t[1].setComponents(o+e,l+a,f+c,i+d).normalize(),t[2].setComponents(o+r,l+s,f+u,i+E).normalize(),t[3].setComponents(o-r,l-s,f-u,i-E).normalize(),t[4].setComponents(o-n,l-h,f-p,i-m).normalize(),t[5].setComponents(o+n,l+h,f+p,i+m).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var i=t.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),e.copy(i.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){var t=this.planes,i=e.center;e=-e.radius;for(var r=0;6>r;r++)if(t[r].distanceToPoint(i)<e)return!1;return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i){for(var r=this.planes,n=0;6>n;n++){var o=r[n];e.x=0<o.normal.x?i.min.x:i.max.x,t.x=0<o.normal.x?i.max.x:i.min.x,e.y=0<o.normal.y?i.min.y:i.max.y,t.y=0<o.normal.y?i.max.y:i.min.y,e.z=0<o.normal.z?i.min.z:i.max.z,t.z=0<o.normal.z?i.max.z:i.min.z;var a=o.distanceToPoint(e),o=o.distanceToPoint(t);if(0>a&&0>o)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,i=0;6>i;i++)if(0>t[i].distanceToPoint(e))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r,n){return r=e.subVectors(n,r).cross(t.subVectors(i,r)).normalize(),this.setFromNormalAndCoplanarPoint(r,i),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var i=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(i)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start);return e=this.distanceToPoint(e.end),0>t&&e>0||0>e&&t>0},intersectLine:function(){var e=new THREE.Vector3;return function(t,i){var r=i||new THREE.Vector3,n=t.delta(e),o=this.normal.dot(n);return 0!=o?(o=-(t.start.dot(this.normal)+this.constant)/o,0>o||o>1?void 0:r.copy(n).multiplyScalar(o).add(t.start)):0==this.distanceToPoint(t.start)?r.copy(t.start):void 0}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Matrix3;return function(r,n){var o=n||i.getNormalMatrix(r),o=e.copy(this.normal).applyMatrix3(o),a=this.coplanarPoint(t);return a.applyMatrix4(r),this.setFromNormalAndCoplanarPoint(o,a),this}}(),translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={PI2:2*Math.PI,generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=Array(36),r=0;return function(){for(var n=0;36>n;n++)8==n||13==n||18==n||23==n?i[n]="-":14==n?i[n]="4":(2>=r&&(r=33554432+16777216*Math.random()|0),e=15&r,r>>=4,i[n]=t[19==n?3&e|8:e]);return i.join("")}}(),clamp:function(e,t,i){return t>e?t:e>i?i:e},clampBottom:function(e,t){return t>e?t:e},mapLinear:function(e,t,i,r,n){return r+(e-t)*(n-r)/(i-t)},smoothstep:function(e,t,i){return t>=e?0:e>=i?1:(e=(e-t)/(i-t),e*e*(3-2*e))},smootherstep:function(e,t,i){return t>=e?0:e>=i?1:(e=(e-t)/(i-t),e*e*e*(e*(6*e-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:e>0?1:0},degToRad:function(){var e=Math.PI/180;
return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return 0===(e&e-1)&&0!==e}},THREE.Spline=function(e){function t(e,t,i,r,n,o,a){return e=.5*(i-e),r=.5*(r-t),(2*(t-i)+e+r)*a+(-3*(t-i)-2*e-r)*o+e*n+t}this.points=e;var i,r,n,o,a,s,h,l,c,u=[],p={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return i=(this.points.length-1)*e,r=Math.floor(i),n=i-r,u[0]=0===r?r:r-1,u[1]=r,u[2]=r>this.points.length-2?this.points.length-1:r+1,u[3]=r>this.points.length-3?this.points.length-1:r+2,s=this.points[u[0]],h=this.points[u[1]],l=this.points[u[2]],c=this.points[u[3]],o=n*n,a=n*o,p.x=t(s.x,h.x,l.x,c.x,n,o,a),p.y=t(s.y,h.y,l.y,c.y,n,o,a),p.z=t(s.z,h.z,l.z,c.z,n,o,a),p},this.getControlPointsArray=function(){var e,t,i=this.points.length,r=[];for(e=0;i>e;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r},this.getLength=function(e){var t,i,r,n=t=t=0,o=new THREE.Vector3,a=new THREE.Vector3,s=[],h=0;for(s[0]=0,e||(e=100),i=this.points.length*e,o.copy(this.points[0]),e=1;i>e;e++)t=e/i,r=this.getPoint(t),a.copy(r),h+=a.distanceTo(o),o.copy(r),t*=this.points.length-1,t=Math.floor(t),t!=n&&(s[t]=h,n=t);return s[s.length]=h,{chunks:s,total:h}},this.reparametrizeByArcLength=function(e){var t,i,r,n,o,a,s=[],h=new THREE.Vector3,l=this.getLength();for(s.push(h.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(i=l.chunks[t]-l.chunks[t-1],a=Math.ceil(e*i/l.total),n=(t-1)/(this.points.length-1),o=t/(this.points.length-1),i=1;a-1>i;i++)r=n+1/a*i*(o-n),r=this.getPoint(r),s.push(h.copy(r).clone());s.push(h.copy(this.points[t]).clone())}this.points=s}},THREE.Triangle=function(e,t,i){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==i?i:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,i,r,n){return n=n||new THREE.Vector3,n.subVectors(r,i),e.subVectors(t,i),n.cross(e),t=n.lengthSq(),t>0?n.multiplyScalar(1/Math.sqrt(t)):n.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(r,n,o,a,s){e.subVectors(a,n),t.subVectors(o,n),i.subVectors(r,n),r=e.dot(e),n=e.dot(t),o=e.dot(i);var h=t.dot(t);a=t.dot(i);var l=r*h-n*n;return s=s||new THREE.Vector3,0==l?s.set(-2,-1,-1):(l=1/l,h=(h*o-n*a)*l,r=(r*a-n*o)*l,s.set(1-h-r,r,h))}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,i,r,n){return t=THREE.Triangle.barycoordFromPoint(t,i,r,n,e),0<=t.x&&0<=t.y&&1>=t.x+t.y}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this},setFromPointsAndIndices:function(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(e,t)},THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),e=.001*(t-this.oldTime);this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var i=this._listeners[e];if(void 0!==i){var r=i.indexOf(t);-1!==r&&i.splice(r,1)}}},dispatchEvent:function(){var e=[];return function(t){if(void 0!==this._listeners){var i=this._listeners[t.type];if(void 0!==i){t.target=this;for(var r=i.length,n=0;r>n;n++)e[n]=i[n];for(n=0;r>n;n++)e[n].call(this,t)}}}}()},function(e){e.Raycaster=function(t,i,r,n){this.ray=new e.Ray(t,i),this.near=r||0,this.far=n||1/0};var t=new e.Sphere,i=new e.Ray;new e.Plane,new e.Vector3;var r=new e.Vector3,n=new e.Matrix4,o=function(e,t){return e.distance-t.distance},a=new e.Vector3,s=new e.Vector3,h=new e.Vector3,l=function(o,c,u){if(o instanceof e.Sprite){r.setFromMatrixPosition(o.matrixWorld);var p=c.ray.distanceToPoint(r);if(p>o.scale.x)return u;u.push({distance:p,point:o.position,face:null,object:o})}else if(o instanceof e.LOD)r.setFromMatrixPosition(o.matrixWorld),p=c.ray.origin.distanceTo(r),l(o.getObjectForDistance(p),c,u);else if(o instanceof e.Mesh){var f=o.geometry;if(null===f.boundingSphere&&f.computeBoundingSphere(),t.copy(f.boundingSphere),t.applyMatrix4(o.matrixWorld),!1===c.ray.isIntersectionSphere(t))return u;if(n.getInverse(o.matrixWorld),i.copy(c.ray).applyMatrix4(n),null!==f.boundingBox&&!1===i.isIntersectionBox(f.boundingBox))return u;if(f instanceof e.BufferGeometry){var d=o.material;if(void 0===d)return u;var E,m,g=f.attributes,T=c.precision;if(void 0!==g.index)for(var v=f.offsets,y=g.index.array,R=g.position.array,x=0,H=v.length;H>x;++x)for(var g=v[x].start,_=v[x].index,f=g,b=g+v[x].count;b>f;f+=3){g=_+y[f],E=_+y[f+1],m=_+y[f+2],a.set(R[3*g],R[3*g+1],R[3*g+2]),s.set(R[3*E],R[3*E+1],R[3*E+2]),h.set(R[3*m],R[3*m+1],R[3*m+2]);var w=d.side===e.BackSide?i.intersectTriangle(h,s,a,!0):i.intersectTriangle(a,s,h,d.side!==e.DoubleSide);null!==w&&(w.applyMatrix4(o.matrixWorld),p=c.ray.origin.distanceTo(w),T>p||p<c.near||p>c.far||u.push({distance:p,point:w,indices:[g,E,m],face:null,faceIndex:null,object:o}))}else for(R=g.position.array,f=0,b=g.position.array.length;b>f;f+=3)g=f,E=f+1,m=f+2,a.set(R[3*g],R[3*g+1],R[3*g+2]),s.set(R[3*E],R[3*E+1],R[3*E+2]),h.set(R[3*m],R[3*m+1],R[3*m+2]),w=d.side===e.BackSide?i.intersectTriangle(h,s,a,!0):i.intersectTriangle(a,s,h,d.side!==e.DoubleSide),null!==w&&(w.applyMatrix4(o.matrixWorld),p=c.ray.origin.distanceTo(w),T>p||p<c.near||p>c.far||u.push({distance:p,point:w,indices:[g,E,m],face:null,faceIndex:null,object:o}))}else if(f instanceof e.Geometry)for(y=o.material instanceof e.MeshFaceMaterial,R=!0===y?o.material.materials:null,T=c.precision,v=f.vertices,x=0,H=f.faces.length;H>x;x++)if(_=f.faces[x],d=!0===y?R[_.materialIndex]:o.material,void 0!==d){if(g=v[_.a],E=v[_.b],m=v[_.c],!0===d.morphTargets){p=f.morphTargets,w=o.morphTargetInfluences,a.set(0,0,0),s.set(0,0,0),h.set(0,0,0);for(var b=0,M=p.length;M>b;b++){var S=w[b];if(0!==S){var A=p[b].vertices;a.x+=(A[_.a].x-g.x)*S,a.y+=(A[_.a].y-g.y)*S,a.z+=(A[_.a].z-g.z)*S,s.x+=(A[_.b].x-E.x)*S,s.y+=(A[_.b].y-E.y)*S,s.z+=(A[_.b].z-E.z)*S,h.x+=(A[_.c].x-m.x)*S,h.y+=(A[_.c].y-m.y)*S,h.z+=(A[_.c].z-m.z)*S}}a.add(g),s.add(E),h.add(m),g=a,E=s,m=h}w=d.side===e.BackSide?i.intersectTriangle(m,E,g,!0):i.intersectTriangle(g,E,m,d.side!==e.DoubleSide),null!==w&&(w.applyMatrix4(o.matrixWorld),p=c.ray.origin.distanceTo(w),T>p||p<c.near||p>c.far||u.push({distance:p,point:w,face:_,faceIndex:x,object:o}))}}else if(o instanceof e.Line){if(T=c.linePrecision,d=T*T,f=o.geometry,null===f.boundingSphere&&f.computeBoundingSphere(),t.copy(f.boundingSphere),t.applyMatrix4(o.matrixWorld),!1===c.ray.isIntersectionSphere(t))return u;if(n.getInverse(o.matrixWorld),i.copy(c.ray).applyMatrix4(n),f instanceof e.Geometry)for(v=f.vertices,T=v.length,g=new e.Vector3,E=new e.Vector3,m=o.type===e.LineStrip?1:2,f=0;T-1>f;f+=m)i.distanceSqToSegment(v[f],v[f+1],E,g)>d||(p=i.origin.distanceTo(E),p<c.near||p>c.far||u.push({distance:p,point:g.clone().applyMatrix4(o.matrixWorld),face:null,faceIndex:null,object:o}))}},c=function(e,t,i){e=e.getDescendants();for(var r=0,n=e.length;n>r;r++)l(e[r],t,i)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.linePrecision=1,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t)},e.Raycaster.prototype.intersectObject=function(e,t){var i=[];return!0===t&&c(e,this,i),l(e,this,i),i.sort(o),i},e.Raycaster.prototype.intersectObjects=function(e,t){for(var i=[],r=0,n=e.length;n>r;r++)l(e[r],this,i),!0===t&&c(e[r],this,i);return i.sort(o),i}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this._rotation=new THREE.Euler,this._quaternion=new THREE.Quaternion,this.scale=new THREE.Vector3(1,1,1),this._rotation._quaternion=this.quaternion,this._quaternion._euler=this.rotation,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.visible=this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,get rotation(){return this._rotation},set rotation(e){this._rotation=e,this._rotation._quaternion=this._quaternion,this._quaternion._euler=this._rotation,this._rotation._updateQuaternion()},get quaternion(){return this._quaternion},set quaternion(e){this._quaternion=e,this._quaternion._euler=this._rotation,this._rotation._quaternion=this._quaternion,this._quaternion._updateEuler()},get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(e){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order=e},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,i){return e.setFromAxisAngle(t,i),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,i){return e.copy(t),e.applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(i)),this}}(),translate:function(e,t){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(e===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){for(e.parent=void 0,e.dispatchEvent({type:"removed"}),this.children.splice(t,1),t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,i=this.children.length;i>t;t++)this.children[t].traverse(e)},getObjectById:function(e,t){for(var i=0,r=this.children.length;r>i;i++){var n=this.children[i];if(n.id===e||!0===t&&(n=n.getObjectById(e,t),void 0!==n))return n}},getObjectByName:function(e,t){for(var i=0,r=this.children.length;r>i;i++){var n=this.children[i];if(n.name===e||!0===t&&(n=n.getObjectByName(e,t),void 0!==n))return n}},getChildByName:function(e,t){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e,t)},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,i=this.children.length;i>t;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),(!0===this.matrixWorldNeedsUpdate||!0===e)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;i>t;t++)this.children[t].updateMatrixWorld(e)},clone:function(e,t){if(void 0===e&&(e=new THREE.Object3D),void 0===t&&(t=!0),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.quaternion.copy(this.quaternion),e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled,e.userData=JSON.parse(JSON.stringify(this.userData)),!0===t)for(var i=0;i<this.children.length;i++)e.add(this.children[i].clone());return e}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function e(){if(h===v){var e=new THREE.RenderableVertex;return T.push(e),v++,h++,e}return T[h++]}function t(){if(c===R){var e=new THREE.RenderableFace;return y.push(e),R++,c++,e}return y[c++]}function i(){if(p===H){var e=new THREE.RenderableLine;return x.push(e),H++,p++,e}return x[p++]}function r(e,t){return e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function n(e,t){var i=0,r=1,n=e.z+e.w,o=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return n>=0&&o>=0&&a>=0&&s>=0?!0:0>n&&0>o||0>a&&0>s?!1:(0>n?i=Math.max(i,n/(n-o)):0>o&&(r=Math.min(r,n/(n-o))),0>a?i=Math.max(i,a/(a-s)):0>s&&(r=Math.min(r,a/(a-s))),i>r?!1:(e.lerp(t,i),t.lerp(e,1-r),!0))}var o,a,s,h,l,c,u,p,f,d,E,m=[],g=0,T=[],v=0,y=[],R=0,x=[],H=0,_=[],b=0,w={objects:[],lights:[],elements:[]},M=new THREE.Vector3,S=new THREE.Vector3,A=new THREE.Vector3,C=new THREE.Vector3,L=new THREE.Vector4,P=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),D=new THREE.Box3,F=Array(3),U=new THREE.Matrix4,V=new THREE.Matrix4,z=new THREE.Matrix4,B=new THREE.Matrix3,N=new THREE.Frustum,O=new THREE.Vector4,I=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),V.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(V)},this.unprojectVector=function(){var e=new THREE.Matrix4;return function(t,i){return e.getInverse(i.projectionMatrix),V.multiplyMatrices(i.matrixWorld,e),t.applyProjection(V)}}(),this.pickingRay=function(e,t){e.z=-1;var i=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(i,t),i.sub(e).normalize(),new THREE.Raycaster(e,i)};var k=function(e){if(!1!==e.visible){if(e instanceof THREE.Light)w.lights.push(e);else if((e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Sprite)&&(!1===e.frustumCulled||!0===N.intersectsObject(e))){if(a===g){var t=new THREE.RenderableObject;m.push(t),g++,a++,o=t}else o=m[a++];o.id=e.id,o.object=e,null!==e.renderDepth?o.z=e.renderDepth:(C.setFromMatrixPosition(e.matrixWorld),C.applyProjection(V),o.z=C.z),w.objects.push(o)}for(var t=0,i=e.children.length;i>t;t++)k(e.children[t])}},G=new function(){var r=[],n=null,o=new THREE.Matrix3,a=function(e){var t=e.positionWorld,i=e.positionScreen;t.copy(e.position).applyMatrix4(E),i.copy(t).applyMatrix4(V),t=1/i.w,i.x*=t,i.y*=t,i.z*=t,e.visible=-1<=i.x&&1>=i.x&&-1<=i.y&&1>=i.y&&-1<=i.z&&1>=i.z},h=function(e,t,i){return F[0]=e.positionScreen,F[1]=t.positionScreen,F[2]=i.positionScreen,!0===e.visible||!0===t.visible||!0===i.visible||P.isIntersectionBox(D.setFromPoints(F))?0>(i.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(i.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x):!1};return{setObject:function(e){n=e,o.getNormalMatrix(n.matrixWorld),r.length=0},projectVertex:a,checkTriangleVisibility:h,pushVertex:function(t,i,r){s=e(),s.position.set(t,i,r),a(s)},pushNormal:function(e,t,i){r.push(e,t,i)},pushLine:function(e,t){var r=T[e],o=T[t];u=i(),u.id=n.id,u.v1.copy(r),u.v2.copy(o),u.z=(r.positionScreen.z+o.positionScreen.z)/2,u.material=n.material,w.elements.push(u)},pushTriangle:function(e,i,a){var s=T[e],c=T[i],u=T[a];if(!0===h(s,c,u)){for(l=t(),l.id=n.id,l.v1.copy(s),l.v2.copy(c),l.v3.copy(u),l.z=(s.positionScreen.z+c.positionScreen.z+u.positionScreen.z)/3,s=0;3>s;s++)c=3*arguments[s],u=l.vertexNormalsModel[s],u.set(r[c+0],r[c+1],r[c+2]),u.applyMatrix3(o).normalize();l.vertexNormalsLength=3,l.material=n.material,w.elements.push(l)}}}};this.projectScene=function(o,s,m,g){var v,y,R,x,H,C,P,D,F;for(d=p=c=0,w.elements.length=0,!0===o.autoUpdate&&o.updateMatrixWorld(),void 0===s.parent&&s.updateMatrixWorld(),U.copy(s.matrixWorldInverse.getInverse(s.matrixWorld)),V.multiplyMatrices(s.projectionMatrix,U),N.setFromMatrix(V),a=0,w.objects.length=0,w.lights.length=0,k(o),!0===m&&w.objects.sort(r),o=0,m=w.objects.length;m>o;o++)if(v=w.objects[o].object,y=v.geometry,G.setObject(v),E=v.matrixWorld,h=0,v instanceof THREE.Mesh){if(y instanceof THREE.BufferGeometry){if(C=y.attributes,v=y.offsets,void 0!==C.position){for(D=C.position.array,y=0,x=D.length;x>y;y+=3)G.pushVertex(D[y],D[y+1],D[y+2]);for(F=C.normal.array,y=0,x=F.length;x>y;y+=3)G.pushNormal(F[y],F[y+1],F[y+2]);if(void 0!==C.index)if(C=C.index.array,0<v.length)for(o=0;o<v.length;o++)for(x=v[o],D=x.index,y=x.start,x=x.start+x.count;x>y;y+=3)G.pushTriangle(C[y]+D,C[y+1]+D,C[y+2]+D);else for(y=0,x=C.length;x>y;y+=3)G.pushTriangle(C[y],C[y+1],C[y+2]);else for(y=0,x=D.length/3;x>y;y+=3)G.pushTriangle(y,y+1,y+2)}}else if(y instanceof THREE.Geometry){R=y.vertices,x=y.faces,C=y.faceVertexUvs,B.getNormalMatrix(E),D=v.material instanceof THREE.MeshFaceMaterial,F=!0===D?v.material:null;for(var W=0,j=R.length;j>W;W++){var X=R[W];G.pushVertex(X.x,X.y,X.z)}for(W=0,j=x.length;j>W;W++){R=x[W];var q=!0===D?F.materials[R.materialIndex]:v.material;if(void 0!==q){P=q.side;var X=T[R.a],Y=T[R.b],K=T[R.c];if(!0===q.morphTargets){H=y.morphTargets;var Z=v.morphTargetInfluences,Q=X.position,J=Y.position,$=K.position;M.set(0,0,0),S.set(0,0,0),A.set(0,0,0);for(var et=0,tt=H.length;tt>et;et++){var it=Z[et];if(0!==it){var rt=H[et].vertices;M.x+=(rt[R.a].x-Q.x)*it,M.y+=(rt[R.a].y-Q.y)*it,M.z+=(rt[R.a].z-Q.z)*it,S.x+=(rt[R.b].x-J.x)*it,S.y+=(rt[R.b].y-J.y)*it,S.z+=(rt[R.b].z-J.z)*it,A.x+=(rt[R.c].x-$.x)*it,A.y+=(rt[R.c].y-$.y)*it,A.z+=(rt[R.c].z-$.z)*it}}X.position.add(M),Y.position.add(S),K.position.add(A),G.projectVertex(X),G.projectVertex(Y),G.projectVertex(K)}if(Z=G.checkTriangleVisibility(X,Y,K),!(!1===Z&&P===THREE.FrontSide||!0===Z&&P===THREE.BackSide)){for(l=t(),l.id=v.id,l.v1.copy(X),l.v2.copy(Y),l.v3.copy(K),l.normalModel.copy(R.normal),!1!==Z||P!==THREE.BackSide&&P!==THREE.DoubleSide||l.normalModel.negate(),l.normalModel.applyMatrix3(B).normalize(),l.centroidModel.copy(R.centroid).applyMatrix4(E),H=R.vertexNormals,Q=0,J=Math.min(H.length,3);J>Q;Q++)$=l.vertexNormalsModel[Q],$.copy(H[Q]),!1!==Z||P!==THREE.BackSide&&P!==THREE.DoubleSide||$.negate(),$.applyMatrix3(B).normalize();for(l.vertexNormalsLength=H.length,H=0,Z=Math.min(C.length,3);Z>H;H++)if(P=C[H][W],void 0!==P)for(Q=0,J=P.length;J>Q;Q++)l.uvs[H][Q]=P[Q];l.color=R.color,l.material=q,l.z=(X.positionScreen.z+Y.positionScreen.z+K.positionScreen.z)/3,w.elements.push(l)}}}}}else if(v instanceof THREE.Line){if(y instanceof THREE.BufferGeometry){if(C=y.attributes,void 0!==C.position){for(D=C.position.array,y=0,x=D.length;x>y;y+=3)G.pushVertex(D[y],D[y+1],D[y+2]);if(void 0!==C.index)for(C=C.index.array,y=0,x=C.length;x>y;y+=2)G.pushLine(C[y],C[y+1]);else for(y=0,x=D.length/3-1;x>y;y++)G.pushLine(y,y+1)}}else if(y instanceof THREE.Geometry&&(z.multiplyMatrices(V,E),R=v.geometry.vertices,0!==R.length))for(X=e(),X.positionScreen.copy(R[0]).applyMatrix4(z),y=v.type===THREE.LinePieces?2:1,W=1,j=R.length;j>W;W++)X=e(),X.positionScreen.copy(R[W]).applyMatrix4(z),(W+1)%y>0||(Y=T[h-2],O.copy(X.positionScreen),I.copy(Y.positionScreen),!0===n(O,I)&&(O.multiplyScalar(1/O.w),I.multiplyScalar(1/I.w),u=i(),u.id=v.id,u.v1.positionScreen.copy(O),u.v2.positionScreen.copy(I),u.z=Math.max(O.z,I.z),u.material=v.material,v.material.vertexColors===THREE.VertexColors&&(u.vertexColors[0].copy(v.geometry.colors[W]),u.vertexColors[1].copy(v.geometry.colors[W-1])),w.elements.push(u)))}else v instanceof THREE.Sprite&&(L.set(E.elements[12],E.elements[13],E.elements[14],1),L.applyMatrix4(V),y=1/L.w,L.z*=y,-1<=L.z&&1>=L.z&&(d===b?(x=new THREE.RenderableSprite,_.push(x),b++,d++,f=x):f=_[d++],f.id=v.id,f.x=L.x*y,f.y=L.y*y,f.z=L.z,f.object=v,f.rotation=v.rotation,f.scale.x=v.scale.x*Math.abs(f.x-(L.x+s.projectionMatrix.elements[0])/(L.w+s.projectionMatrix.elements[12])),f.scale.y=v.scale.y*Math.abs(f.y-(L.y+s.projectionMatrix.elements[5])/(L.w+s.projectionMatrix.elements[13])),f.material=v.material,w.elements.push(f)));return!0===g&&w.elements.sort(r),w}},THREE.Face3=function(e,t,i,r,n,o){this.a=e,this.b=t,this.c=i,this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3,this.vertexNormals=r instanceof Array?r:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,i;for(t=0,i=this.vertexNormals.length;i>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,i=this.vertexColors.length;i>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,i=this.vertexTangents.length;i>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,i,r,n,o,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(e,t,i,n,o,a)},THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.offsets=[],this.boundingSphere=this.boundingBox=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,t,i,r){return this.attributes[e]={array:new t(i*r),itemSize:r},this.attributes[e]},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.multiplyVector3Array(t.array),t.needsUpdate=!0),t=this.attributes.normal,void 0!==t&&((new THREE.Matrix3).getNormalMatrix(e).multiplyVector3Array(t.array),t.needsUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t=this.boundingBox;3<=e.length&&(t.min.x=t.max.x=e[0],t.min.y=t.max.y=e[1],t.min.z=t.max.z=e[2]);for(var i=3,r=e.length;r>i;i+=3){var n=e[i],o=e[i+1],a=e[i+2];n<t.min.x?t.min.x=n:n>t.max.x&&(t.max.x=n),o<t.min.y?t.min.y=o:o>t.max.y&&(t.max.y=o),a<t.min.z?t.min.z=a:a>t.max.z&&(t.max.z=a)}}(void 0===e||0===e.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var i=this.attributes.position.array;if(i){e.makeEmpty();for(var r=this.boundingSphere.center,n=0,o=i.length;o>n;n+=3)t.set(i[n],i[n+1],i[n+2]),e.addPoint(t);e.center(r);for(var a=0,n=0,o=i.length;o>n;n+=3)t.set(i[n],i[n+1],i[n+2]),a=Math.max(a,r.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(a)}}}(),computeVertexNormals:function(){if(this.attributes.position){var e,t,i,r;if(e=this.attributes.position.array.length,void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e)};else for(e=0,t=this.attributes.normal.array.length;t>e;e++)this.attributes.normal.array[e]=0;var n,o,a,s,h,l,c=this.attributes.position.array,u=this.attributes.normal.array,p=new THREE.Vector3,f=new THREE.Vector3,d=new THREE.Vector3,E=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var g=this.attributes.index.array,T=this.offsets;for(i=0,r=T.length;r>i;++i){t=T[i].start,n=T[i].count;var v=T[i].index;for(e=t,t+=n;t>e;e+=3)n=v+g[e],o=v+g[e+1],a=v+g[e+2],s=c[3*n],h=c[3*n+1],l=c[3*n+2],p.set(s,h,l),s=c[3*o],h=c[3*o+1],l=c[3*o+2],f.set(s,h,l),s=c[3*a],h=c[3*a+1],l=c[3*a+2],d.set(s,h,l),E.subVectors(d,f),m.subVectors(p,f),E.cross(m),u[3*n]+=E.x,u[3*n+1]+=E.y,u[3*n+2]+=E.z,u[3*o]+=E.x,u[3*o+1]+=E.y,u[3*o+2]+=E.z,u[3*a]+=E.x,u[3*a+1]+=E.y,u[3*a+2]+=E.z}}else for(e=0,t=c.length;t>e;e+=9)s=c[e],h=c[e+1],l=c[e+2],p.set(s,h,l),s=c[e+3],h=c[e+4],l=c[e+5],f.set(s,h,l),s=c[e+6],h=c[e+7],l=c[e+8],d.set(s,h,l),E.subVectors(d,f),m.subVectors(p,f),E.cross(m),u[e]=E.x,u[e+1]=E.y,u[e+2]=E.z,u[e+3]=E.x,u[e+4]=E.y,u[e+5]=E.z,u[e+6]=E.x,u[e+7]=E.y,u[e+8]=E.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e,t,i,r=this.attributes.normal.array,n=0,o=r.length;o>n;n+=3)e=r[n],t=r[n+1],i=r[n+2],e=1/Math.sqrt(e*e+t*t+i*i),r[n]*=e,r[n+1]*=e,r[n+2]*=e},computeTangents:function(){function e(e,t,i){u=r[3*e],p=r[3*e+1],f=r[3*e+2],d=r[3*t],E=r[3*t+1],m=r[3*t+2],g=r[3*i],T=r[3*i+1],v=r[3*i+2],y=o[2*e],R=o[2*e+1],x=o[2*t],H=o[2*t+1],_=o[2*i],b=o[2*i+1],w=d-u,M=g-u,S=E-p,A=T-p,C=m-f,L=v-f,P=x-y,D=_-y,F=H-R,U=b-R,V=1/(P*U-D*F),k.set((U*w-F*M)*V,(U*S-F*A)*V,(U*C-F*L)*V),G.set((P*M-D*w)*V,(P*A-D*S)*V,(P*L-D*C)*V),h[e].add(k),h[t].add(k),h[i].add(k),l[e].add(G),l[t].add(G),l[i].add(G)}function t(e){Q.x=n[3*e],Q.y=n[3*e+1],Q.z=n[3*e+2],J.copy(Q),q=h[e],K.copy(q),K.sub(Q.multiplyScalar(Q.dot(q))).normalize(),Z.crossVectors(J,q),Y=Z.dot(l[e]),X=0>Y?-1:1,s[4*e]=K.x,s[4*e+1]=K.y,s[4*e+2]=K.z,s[4*e+3]=X}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var i=this.attributes.index.array,r=this.attributes.position.array,n=this.attributes.normal.array,o=this.attributes.uv.array,a=r.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*a)});for(var s=this.attributes.tangent.array,h=[],l=[],c=0;a>c;c++)h[c]=new THREE.Vector3,l[c]=new THREE.Vector3;var u,p,f,d,E,m,g,T,v,y,R,x,H,_,b,w,M,S,A,C,L,P,D,F,U,V,z,B,N,O,I,k=new THREE.Vector3,G=new THREE.Vector3,W=this.offsets,c=0;for(B=W.length;B>c;++c){z=W[c].start,N=W[c].count;var j=W[c].index,a=z;for(z+=N;z>a;a+=3)N=j+i[a],O=j+i[a+1],I=j+i[a+2],e(N,O,I)}var X,q,Y,K=new THREE.Vector3,Z=new THREE.Vector3,Q=new THREE.Vector3,J=new THREE.Vector3,c=0;for(B=W.length;B>c;++c)for(z=W[c].start,N=W[c].count,j=W[c].index,a=z,z+=N;z>a;a+=3)N=j+i[a],O=j+i[a+1],I=j+i[a+2],t(N),t(O),t(I)}},computeOffsets:function(e){var t=e;void 0===e&&(t=65535),Date.now(),e=this.attributes.index.array;for(var i=this.attributes.position.array,r=e.length/3,n=new Uint16Array(e.length),o=0,a=0,s=[{start:0,count:0,index:0}],h=s[0],l=0,c=0,u=new Int32Array(6),p=new Int32Array(i.length),f=new Int32Array(i.length),d=0;d<i.length;d++)p[d]=-1,f[d]=-1;for(i=0;r>i;i++){for(var E=c=0;3>E;E++)d=e[3*i+E],-1==p[d]?(u[2*E]=d,u[2*E+1]=-1,c++):p[d]<h.index?(u[2*E]=d,u[2*E+1]=-1,l++):(u[2*E]=d,u[2*E+1]=p[d]);if(a+c>h.index+t)for(h={start:o,count:0,index:a},s.push(h),c=0;6>c;c+=2)E=u[c+1],E>-1&&E<h.index&&(u[c+1]=-1);for(c=0;6>c;c+=2)d=u[c],E=u[c+1],-1===E&&(E=a++),p[d]=E,f[E]=d,n[o++]=E-h.index,h.count++}return this.reorderBuffers(n,f,a),this.offsets=s},reorderBuffers:function(e,t,i){var r,n={},o=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(r in this.attributes)if("index"!=r)for(var a=this.attributes[r].array,s=0,h=o.length;h>s;s++){var l=o[s];if(a instanceof l){n[r]=new l(this.attributes[r].itemSize*i);break}}for(o=0;i>o;o++)for(r in a=t[o],this.attributes)if("index"!=r)for(var s=this.attributes[r].array,h=this.attributes[r].itemSize,l=n[r],c=0;h>c;c++)l[o*h+c]=s[a*h+c];this.attributes.index.array=e;for(r in this.attributes)"index"!=r&&(this.attributes[r].array=n[r],this.attributes[r].numItems=this.attributes[r].itemSize*i)},clone:function(){var e,t=new THREE.BufferGeometry,i=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(e in this.attributes){for(var r=this.attributes[e],n=r.array,o={itemSize:r.itemSize,array:null},r=0,a=i.length;a>r;r++){var s=i[r];if(n instanceof s){o.array=new s(n);break}}t.attributes[e]=o}for(r=0,a=this.offsets.length;a>r;r++)i=this.offsets[r],t.offsets.push({start:i.start,index:i.index,count:i.count});return t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.dynamic=!0,this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1
},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),i=0,r=this.vertices.length;r>i;i++)this.vertices[i].applyMatrix4(e);for(i=0,r=this.faces.length;r>i;i++){var n=this.faces[i];n.normal.applyMatrix3(t).normalize();for(var o=0,a=n.vertexNormals.length;a>o;o++)n.vertexNormals[o].applyMatrix3(t).normalize();n.centroid.applyMatrix4(e)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var e,t,i;for(e=0,t=this.faces.length;t>e;e++)i=this.faces[e],i.centroid.set(0,0,0),i.centroid.add(this.vertices[i.a]),i.centroid.add(this.vertices[i.b]),i.centroid.add(this.vertices[i.c]),i.centroid.divideScalar(3)},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,i=0,r=this.faces.length;r>i;i++){var n=this.faces[i],o=this.vertices[n.a],a=this.vertices[n.b];e.subVectors(this.vertices[n.c],a),t.subVectors(o,a),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e){var t,i,r;for(r=Array(this.vertices.length),t=0,i=this.vertices.length;i>t;t++)r[t]=new THREE.Vector3;if(e){var n,o,a,s=new THREE.Vector3,h=new THREE.Vector3;for(new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,e=0,t=this.faces.length;t>e;e++)i=this.faces[e],n=this.vertices[i.a],o=this.vertices[i.b],a=this.vertices[i.c],s.subVectors(a,o),h.subVectors(n,o),s.cross(h),r[i.a].add(s),r[i.b].add(s),r[i.c].add(s)}else for(e=0,t=this.faces.length;t>e;e++)i=this.faces[e],r[i.a].add(i.normal),r[i.b].add(i.normal),r[i.c].add(i.normal);for(t=0,i=this.vertices.length;i>t;t++)r[t].normalize();for(e=0,t=this.faces.length;t>e;e++)i=this.faces[e],i.vertexNormals[0]=r[i.a].clone(),i.vertexNormals[1]=r[i.b].clone(),i.vertexNormals[2]=r[i.c].clone()},computeMorphNormals:function(){var e,t,i,r,n;for(i=0,r=this.faces.length;r>i;i++)for(n=this.faces[i],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;t>e;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var o=new THREE.Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;t>e;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[],n=this.morphNormals[e].faceNormals;var a,s,h=this.morphNormals[e].vertexNormals;for(i=0,r=this.faces.length;r>i;i++)a=new THREE.Vector3,s={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(a),h.push(s)}for(h=this.morphNormals[e],o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals(),i=0,r=this.faces.length;r>i;i++)n=this.faces[i],a=h.faceNormals[i],s=h.vertexNormals[i],a.copy(n.normal),s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])}for(i=0,r=this.faces.length;r>i;i++)n=this.faces[i],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){var e,t,i,r,n,o,a,s,h,l,c,u,p,f,d,E,m,g=[],T=[];i=new THREE.Vector3;var v=new THREE.Vector3,y=new THREE.Vector3,R=new THREE.Vector3,x=new THREE.Vector3;for(e=0,t=this.vertices.length;t>e;e++)g[e]=new THREE.Vector3,T[e]=new THREE.Vector3;for(e=0,t=this.faces.length;t>e;e++)n=this.faces[e],o=this.faceVertexUvs[0][e],r=n.a,m=n.b,n=n.c,a=this.vertices[r],s=this.vertices[m],h=this.vertices[n],l=o[0],c=o[1],u=o[2],o=s.x-a.x,p=h.x-a.x,f=s.y-a.y,d=h.y-a.y,s=s.z-a.z,a=h.z-a.z,h=c.x-l.x,E=u.x-l.x,c=c.y-l.y,l=u.y-l.y,u=1/(h*l-E*c),i.set((l*o-c*p)*u,(l*f-c*d)*u,(l*s-c*a)*u),v.set((h*p-E*o)*u,(h*d-E*f)*u,(h*a-E*s)*u),g[r].add(i),g[m].add(i),g[n].add(i),T[r].add(v),T[m].add(v),T[n].add(v);for(v=["a","b","c","d"],e=0,t=this.faces.length;t>e;e++)for(n=this.faces[e],i=0;i<Math.min(n.vertexNormals.length,3);i++)x.copy(n.vertexNormals[i]),r=n[v[i]],m=g[r],y.copy(m),y.sub(x.multiplyScalar(x.dot(m))).normalize(),R.crossVectors(n.vertexNormals[i],m),r=R.dot(T[r]),r=0>r?-1:1,n.vertexTangents[i]=new THREE.Vector4(y.x,y.y,y.z,r);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,i=0,r=t.length;r>i;i++)i>0&&(e+=t[i].distanceTo(t[i-1])),this.lineDistances[i]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var e,t,i,r={},n=[],o=[],a=Math.pow(10,4);for(t=0,i=this.vertices.length;i>t;t++)e=this.vertices[t],e=Math.round(e.x*a)+"_"+Math.round(e.y*a)+"_"+Math.round(e.z*a),void 0===r[e]?(r[e]=t,n.push(this.vertices[t]),o[t]=n.length-1):o[t]=o[r[e]];for(r=[],t=0,i=this.faces.length;i>t;t++)for(a=this.faces[t],a.a=o[a.a],a.b=o[a.b],a.c=o[a.c],a=[a.a,a.b,a.c],e=0;3>e;e++)if(a[e]==a[(e+1)%3]){r.push(t);break}for(t=r.length-1;t>=0;t--)for(a=r[t],this.faces.splice(a,1),o=0,i=this.faceVertexUvs.length;i>o;o++)this.faceVertexUvs[o].splice(a,1);return t=this.vertices.length-n.length,this.vertices=n,t},makeGroups:function(){var e=0;return function(t){var i,r,n,o,a={},s=this.morphTargets.length,h=this.morphNormals.length;for(this.geometryGroups={},i=0,r=this.faces.length;r>i;i++)n=this.faces[i],n=t?n.materialIndex:0,n in a||(a[n]={hash:n,counter:0}),o=a[n].hash+"_"+a[n].counter,o in this.geometryGroups||(this.geometryGroups[o]={faces3:[],materialIndex:n,vertices:0,numMorphTargets:s,numMorphNormals:h}),65535<this.geometryGroups[o].vertices+3&&(a[n].counter+=1,o=a[n].hash+"_"+a[n].counter,o in this.geometryGroups||(this.geometryGroups[o]={faces3:[],materialIndex:n,vertices:0,numMorphTargets:s,numMorphNormals:h})),this.geometryGroups[o].faces3.push(i),this.geometryGroups[o].vertices+=3;this.geometryGroupsList=[];for(var l in this.geometryGroups)this.geometryGroups[l].id=e++,this.geometryGroupsList.push(this.geometryGroups[l])}}(),clone:function(){for(var e=new THREE.Geometry,t=this.vertices,i=0,r=t.length;r>i;i++)e.vertices.push(t[i].clone());for(t=this.faces,i=0,r=t.length;r>i;i++)e.faces.push(t[i].clone());for(t=this.faceVertexUvs[0],i=0,r=t.length;r>i;i++){for(var n=t[i],o=[],a=0,s=n.length;s>a;a++)o.push(new THREE.Vector2(n[a].x,n[a].y));e.faceVertexUvs[0].push(o)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Geometry2=function(e){THREE.BufferGeometry.call(this),this.vertices=this.addAttribute("position",Float32Array,e,3).array,this.normals=this.addAttribute("normal",Float32Array,e,3).array,this.uvs=this.addAttribute("uv",Float32Array,e,2).array,this.boundingSphere=this.boundingBox=null},THREE.Geometry2.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(e){return void 0===e&&(e=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,e),e.matrixWorldInverse.copy(this.matrixWorldInverse),e.projectionMatrix.copy(this.projectionMatrix),e},THREE.OrthographicCamera=function(e,t,i,r,n,o){THREE.Camera.call(this),this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,e),e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e},THREE.PerspectiveCamera=function(e,t,i,r){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==i?i:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,i,r,n,o){this.fullWidth=e,this.fullHeight=t,this.x=i,this.y=r,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,i=-t,r=e*i,e=Math.abs(e*t-r),i=Math.abs(t-i);this.projectionMatrix.makeFrustum(r+this.x*e/this.fullWidth,r+(this.x+this.width)*e/this.fullWidth,t-(this.y+this.height)*i/this.fullHeight,t-this.y*i/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,e),e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(e){return void 0===e&&(e=new THREE.Light),THREE.Object3D.prototype.clone.call(this,e),e.color.copy(this.color),e},THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,e),e},THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.height=this.width=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e},THREE.HemisphereLight=function(e,t,i){THREE.Light.call(this,e),this.position.set(0,100,0),this.groundColor=new THREE.Color(t),this.intensity=void 0!==i?i:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,e),e.groundColor.copy(this.groundColor),e.intensity=this.intensity,e},THREE.PointLight=function(e,t,i){THREE.Light.call(this,e),this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,e),e.intensity=this.intensity,e.distance=this.distance,e},THREE.SpotLight=function(e,t,i,r,n){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0,this.angle=void 0!==r?r:Math.PI/3,this.exponent=void 0!==n?n:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.distance=this.distance,e.angle=this.angle,e.exponent=this.exponent,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e},THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ",t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1e3).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){return e=e.split("/"),1===e.length?"./":(e.pop(),e.join("/")+"/")},initMaterials:function(e,t){for(var i=[],r=0;r<e.length;++r)i[r]=THREE.Loader.prototype.createMaterial(e[r],t);return i},needsTangents:function(e){for(var t=0,i=e.length;i>t;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){function i(e){return e=Math.log(e)/Math.LN2,Math.floor(e)==e}function r(e){return e=Math.log(e)/Math.LN2,Math.pow(2,Math.round(e))}function n(e,t){var n=new Image;n.onload=function(){if(i(this.width)&&i(this.height))e.image=this;else{var t=r(this.width),n=r(this.height);e.image.width=t,e.image.height=n,e.image.getContext("2d").drawImage(this,0,0,t,n)}e.needsUpdate=!0},void 0!==s.crossOrigin&&(n.crossOrigin=s.crossOrigin),n.src=t}function o(e,i,r,o,a,s,h){var l=/\.dds$/i.test(r),c=t+r;if(l){var u=THREE.ImageUtils.loadCompressedTexture(c);e[i]=u}else u=document.createElement("canvas"),e[i]=new THREE.Texture(u);e[i].sourceFile=r,o&&(e[i].repeat.set(o[0],o[1]),1!==o[0]&&(e[i].wrapS=THREE.RepeatWrapping),1!==o[1]&&(e[i].wrapT=THREE.RepeatWrapping)),a&&e[i].offset.set(a[0],a[1]),s&&(r={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==r[s[0]]&&(e[i].wrapS=r[s[0]]),void 0!==r[s[1]]&&(e[i].wrapT=r[s[1]])),h&&(e[i].anisotropy=h),l||n(e[i],c)}function a(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var s=this,h="MeshLambertMaterial",l={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var c=e.shading.toLowerCase();"phong"===c?h="MeshPhongMaterial":"basic"===c&&(h="MeshBasicMaterial")}return void 0!==e.blending&&void 0!==THREE[e.blending]&&(l.blending=THREE[e.blending]),(void 0!==e.transparent||1>e.opacity)&&(l.transparent=e.transparent),void 0!==e.depthTest&&(l.depthTest=e.depthTest),void 0!==e.depthWrite&&(l.depthWrite=e.depthWrite),void 0!==e.visible&&(l.visible=e.visible),void 0!==e.flipSided&&(l.side=THREE.BackSide),void 0!==e.doubleSided&&(l.side=THREE.DoubleSide),void 0!==e.wireframe&&(l.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?l.vertexColors=THREE.FaceColors:e.vertexColors&&(l.vertexColors=THREE.VertexColors)),e.colorDiffuse?l.color=a(e.colorDiffuse):e.DbgColor&&(l.color=e.DbgColor),e.colorSpecular&&(l.specular=a(e.colorSpecular)),e.colorAmbient&&(l.ambient=a(e.colorAmbient)),e.transparency&&(l.opacity=e.transparency),e.specularCoef&&(l.shininess=e.specularCoef),e.mapDiffuse&&t&&o(l,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&o(l,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&o(l,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&o(l,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&o(l,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(l.bumpScale=e.mapBumpScale),e.mapNormal?(h=THREE.ShaderLib.normalmap,c=THREE.UniformsUtils.clone(h.uniforms),c.tNormal.value=l.normalMap,e.mapNormalFactor&&c.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),l.map&&(c.tDiffuse.value=l.map,c.enableDiffuse.value=!0),l.specularMap&&(c.tSpecular.value=l.specularMap,c.enableSpecular.value=!0),l.lightMap&&(c.tAO.value=l.lightMap,c.enableAO.value=!0),c.diffuse.value.setHex(l.color),c.specular.value.setHex(l.specular),c.ambient.value.setHex(l.ambient),c.shininess.value=l.shininess,void 0!==l.opacity&&(c.opacity.value=l.opacity),h=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:c,lights:!0,fog:!0}),l.transparent&&(h.transparent=!0)):h=new THREE[h](l),void 0!==e.DbgName&&(h.name=e.DbgName),h}},THREE.XHRLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,i,r){var n=this,o=new XMLHttpRequest;void 0!==t&&o.addEventListener("load",function(i){t(i.target.responseText),n.manager.itemEnd(e)},!1),void 0!==i&&o.addEventListener("progress",function(e){i(e)},!1),void 0!==r&&o.addEventListener("error",function(e){r(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),o.open("GET",e,!0),o.send(null),n.manager.itemStart(e)},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.ImageLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,i,r){var n=this,o=document.createElement("img");return void 0!==t&&o.addEventListener("load",function(){n.manager.itemEnd(e),t(this)},!1),void 0!==i&&o.addEventListener("progress",function(e){i(e)},!1),void 0!==r&&o.addEventListener("error",function(e){r(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),o.src=e,n.manager.itemStart(e),o},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,i){i=i&&"string"==typeof i?i:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,i)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,i,r,n){var o=new XMLHttpRequest,a=0;o.onreadystatechange=function(){if(o.readyState===o.DONE)if(200===o.status||0===o.status){if(o.responseText){var s=JSON.parse(o.responseText);if("scene"===s.metadata.type)return console.error('THREE.JSONLoader: "'+t+'" seems to be a Scene. Use THREE.SceneLoader instead.'),void 0;s=e.parse(s,r),i(s.geometry,s.materials)}else console.error('THREE.JSONLoader: "'+t+'" seems to be unreachable or the file is empty.');e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+t+'" ('+o.status+")");else o.readyState===o.LOADING?n&&(0===a&&(a=o.getResponseHeader("Content-Length")),n({total:a,loaded:o.responseText.length})):o.readyState===o.HEADERS_RECEIVED&&void 0!==n&&(a=o.getResponseHeader("Content-Length"))},o.open("GET",t,!0),o.withCredentials=this.withCredentials,o.send(null)},THREE.JSONLoader.prototype.parse=function(e,t){var i=new THREE.Geometry,r=void 0!==e.scale?1/e.scale:1;return function(t){var r,n,o,a,s,h,l,c,u,p,f,d,E,m=e.faces;h=e.vertices;var g=e.normals,T=e.colors,v=0;if(void 0!==e.uvs){for(r=0;r<e.uvs.length;r++)e.uvs[r].length&&v++;for(r=0;v>r;r++)i.faceVertexUvs[r]=[]}for(a=0,s=h.length;s>a;)r=new THREE.Vector3,r.x=h[a++]*t,r.y=h[a++]*t,r.z=h[a++]*t,i.vertices.push(r);for(a=0,s=m.length;s>a;)if(t=m[a++],u=1&t,o=2&t,r=8&t,l=16&t,p=32&t,h=64&t,t&=128,u){if(u=new THREE.Face3,u.a=m[a],u.b=m[a+1],u.c=m[a+3],f=new THREE.Face3,f.a=m[a+1],f.b=m[a+2],f.c=m[a+3],a+=4,o&&(o=m[a++],u.materialIndex=o,f.materialIndex=o),o=i.faces.length,r)for(r=0;v>r;r++)for(d=e.uvs[r],i.faceVertexUvs[r][o]=[],i.faceVertexUvs[r][o+1]=[],n=0;4>n;n++)c=m[a++],E=d[2*c],c=d[2*c+1],E=new THREE.Vector2(E,c),2!==n&&i.faceVertexUvs[r][o].push(E),0!==n&&i.faceVertexUvs[r][o+1].push(E);if(l&&(l=3*m[a++],u.normal.set(g[l++],g[l++],g[l]),f.normal.copy(u.normal)),p)for(r=0;4>r;r++)l=3*m[a++],p=new THREE.Vector3(g[l++],g[l++],g[l]),2!==r&&u.vertexNormals.push(p),0!==r&&f.vertexNormals.push(p);if(h&&(h=m[a++],h=T[h],u.color.setHex(h),f.color.setHex(h)),t)for(r=0;4>r;r++)h=m[a++],h=T[h],2!==r&&u.vertexColors.push(new THREE.Color(h)),0!==r&&f.vertexColors.push(new THREE.Color(h));i.faces.push(u),i.faces.push(f)}else{if(u=new THREE.Face3,u.a=m[a++],u.b=m[a++],u.c=m[a++],o&&(o=m[a++],u.materialIndex=o),o=i.faces.length,r)for(r=0;v>r;r++)for(d=e.uvs[r],i.faceVertexUvs[r][o]=[],n=0;3>n;n++)c=m[a++],E=d[2*c],c=d[2*c+1],E=new THREE.Vector2(E,c),i.faceVertexUvs[r][o].push(E);if(l&&(l=3*m[a++],u.normal.set(g[l++],g[l++],g[l])),p)for(r=0;3>r;r++)l=3*m[a++],p=new THREE.Vector3(g[l++],g[l++],g[l]),u.vertexNormals.push(p);if(h&&(h=m[a++],u.color.setHex(T[h])),t)for(r=0;3>r;r++)h=m[a++],u.vertexColors.push(new THREE.Color(T[h]));i.faces.push(u)}}(r),function(){if(e.skinWeights)for(var t=0,r=e.skinWeights.length;r>t;t+=2)i.skinWeights.push(new THREE.Vector4(e.skinWeights[t],e.skinWeights[t+1],0,0));if(e.skinIndices)for(t=0,r=e.skinIndices.length;r>t;t+=2)i.skinIndices.push(new THREE.Vector4(e.skinIndices[t],e.skinIndices[t+1],0,0));i.bones=e.bones,i.bones&&0<i.bones.length&&(i.skinWeights.length!==i.skinIndices.length||i.skinIndices.length!==i.vertices.length)&&console.warn("When skinning, number of vertices ("+i.vertices.length+"), skinIndices ("+i.skinIndices.length+"), and skinWeights ("+i.skinWeights.length+") should match."),i.animation=e.animation,i.animations=e.animations}(),function(t){if(void 0!==e.morphTargets){var r,n,o,a,s,h;for(r=0,n=e.morphTargets.length;n>r;r++)for(i.morphTargets[r]={},i.morphTargets[r].name=e.morphTargets[r].name,i.morphTargets[r].vertices=[],s=i.morphTargets[r].vertices,h=e.morphTargets[r].vertices,o=0,a=h.length;a>o;o+=3){var l=new THREE.Vector3;l.x=h[o]*t,l.y=h[o+1]*t,l.z=h[o+2]*t,s.push(l)}}if(void 0!==e.morphColors)for(r=0,n=e.morphColors.length;n>r;r++)for(i.morphColors[r]={},i.morphColors[r].name=e.morphColors[r].name,i.morphColors[r].colors=[],a=i.morphColors[r].colors,s=e.morphColors[r].colors,t=0,o=s.length;o>t;t+=3)h=new THREE.Color(16755200),h.setRGB(s[t],s[t+1],s[t+2]),a.push(h)}(r),i.computeCentroids(),i.computeFaceNormals(),i.computeBoundingSphere(),void 0===e.materials?{geometry:i}:(r=this.initMaterials(e.materials,t),this.needsTangents(r)&&i.computeTangents(),{geometry:i,materials:r})},THREE.LoadingManager=function(e,t,i){var r=this,n=0,o=0;this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(){o++},this.itemEnd=function(e){n++,void 0!==r.onProgress&&r.onProgress(e,n,o),n===o&&void 0!==r.onLoad&&r.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,i){var r=this;i=new THREE.XHRLoader,i.setCrossOrigin(this.crossOrigin),i.load(e,function(e){t(r.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE.BufferGeometry,i=e.attributes,r=e.offsets;e=e.boundingSphere;for(var n in i){var o=i[n];t.attributes[n]={itemSize:o.itemSize,array:new self[o.type](o.array)}}return void 0!==r&&(t.offsets=JSON.parse(JSON.stringify(r))),void 0!==e&&(t.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==e.center?e.center:[0,0,0]),e.radius)),t}},THREE.Geometry2Loader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.Geometry2Loader.prototype={constructor:THREE.Geometry2Loader,load:function(e,t,i){var r=this;i=new THREE.XHRLoader,i.setCrossOrigin(this.crossOrigin),i.load(e,function(e){t(r.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t,i=new THREE.Geometry2(e.vertices.length/3),r=["vertices","normals","uvs"],n=e.boundingSphere;for(t in r){var o=r[t];i[o].set(e[o])}return void 0!==n&&(i.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==n.center?n.center:[0,0,0]),n.radius)),i}},THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,i){var r=this;i=new THREE.XHRLoader,i.setCrossOrigin(this.crossOrigin),i.load(e,function(e){t(r.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];if(void 0!==e.color&&t.color.setHex(e.color),void 0!==e.ambient&&t.ambient.setHex(e.ambient),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.side&&(t.side=e.side),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.materials)for(var i=0,r=e.materials.length;r>i;i++)t.materials.push(this.parse(e.materials[i]));return t}},THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,i){var r=this;i=new THREE.XHRLoader(r.manager),i.setCrossOrigin(this.crossOrigin),i.load(e,function(e){t(r.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=this.parseGeometries(e.geometries),i=this.parseMaterials(e.materials);return this.parseObject(e.object,t,i)},parseGeometries:function(e){var t={};if(void 0!==e)for(var i=new THREE.JSONLoader,r=new THREE.Geometry2Loader,n=new THREE.BufferGeometryLoader,o=0,a=e.length;a>o;o++){var s,h=e[o];switch(h.type){case"PlaneGeometry":s=new THREE.PlaneGeometry(h.width,h.height,h.widthSegments,h.heightSegments);break;case"BoxGeometry":case"CubeGeometry":s=new THREE.BoxGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case"CircleGeometry":s=new THREE.CircleGeometry(h.radius,h.segments);break;case"CylinderGeometry":s=new THREE.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded);break;case"SphereGeometry":s=new THREE.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case"IcosahedronGeometry":s=new THREE.IcosahedronGeometry(h.radius,h.detail);break;case"TorusGeometry":s=new THREE.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case"TorusKnotGeometry":s=new THREE.TorusKnotGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);break;case"BufferGeometry":s=n.parse(h.data);break;case"Geometry2":s=r.parse(h.data);break;case"Geometry":s=i.parse(h.data).geometry}s.uuid=h.uuid,void 0!==h.name&&(s.name=h.name),t[h.uuid]=s}return t},parseMaterials:function(e){var t={};if(void 0!==e)for(var i=new THREE.MaterialLoader,r=0,n=e.length;n>r;r++){var o=e[r],a=i.parse(o);a.uuid=o.uuid,void 0!==o.name&&(a.name=o.name),t[o.uuid]=a}return t},parseObject:function(){var e=new THREE.Matrix4;return function(t,i,r){var n;switch(t.type){case"Scene":n=new THREE.Scene;break;case"PerspectiveCamera":n=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":n=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":n=new THREE.AmbientLight(t.color);break;case"DirectionalLight":n=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":n=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":n=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":n=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":n=i[t.geometry];var o=r[t.material];void 0===n&&console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry),void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+t.material),n=new THREE.Mesh(n,o);break;case"Sprite":o=r[t.material],void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+t.material),n=new THREE.Sprite(o);break;default:n=new THREE.Object3D}if(n.uuid=t.uuid,void 0!==t.name&&(n.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(n.position,n.quaternion,n.scale)):(void 0!==t.position&&n.position.fromArray(t.position),void 0!==t.rotation&&n.rotation.fromArray(t.rotation),void 0!==t.scale&&n.scale.fromArray(t.scale)),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.children)for(var a in t.children)n.add(this.parseObject(t.children[a],i,r));return n}}()},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlers={},this.hierarchyHandlers={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(e,t,i){var r=this;i=new THREE.XHRLoader(r.manager),i.setCrossOrigin(this.crossOrigin),i.load(e,function(i){r.parse(JSON.parse(i),t,e)})},setCrossOrigin:function(e){this.crossOrigin=e},addGeometryHandler:function(e,t){this.geometryHandlers[e]={loaderClass:t}},addHierarchyHandler:function(e,t){this.hierarchyHandlers[e]={loaderClass:t}},parse:function(e,t,i){function r(e,t){return"relativeToHTML"==t?e:b+e}function n(){o(x.scene,M.objects)}function o(e,t){var i,n,a,s,l,c;for(c in t){var u=x.objects[c],E=t[c];if(void 0===u){if(E.type&&E.type in _.hierarchyHandlers){if(void 0===E.loading){i={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};var m,T={};for(m in E)m in i||(T[m]=E[m]);f=x.materials[E.material],E.loading=!0,i=_.hierarchyHandlers[E.type].loaderObject,i.options?i.load(r(E.url,M.urlBaseType),h(c,e,f,E)):i.load(r(E.url,M.urlBaseType),h(c,e,f,E),T)}}else if(void 0!==E.geometry){if(p=x.geometries[E.geometry]){if(u=!1,f=x.materials[E.material],u=f instanceof THREE.ShaderMaterial,n=E.position,a=E.rotation,s=E.scale,i=E.matrix,l=E.quaternion,E.material||(f=new THREE.MeshFaceMaterial(x.face_materials[E.geometry])),f instanceof THREE.MeshFaceMaterial&&0===f.materials.length&&(f=new THREE.MeshFaceMaterial(x.face_materials[E.geometry])),f instanceof THREE.MeshFaceMaterial)for(T=0;T<f.materials.length;T++)u=u||f.materials[T]instanceof THREE.ShaderMaterial;u&&p.computeTangents(),E.skin?u=new THREE.SkinnedMesh(p,f):E.morph?(u=new THREE.MorphAnimMesh(p,f),void 0!==E.duration&&(u.duration=E.duration),void 0!==E.time&&(u.time=E.time),void 0!==E.mirroredLoop&&(u.mirroredLoop=E.mirroredLoop),f.morphNormals&&p.computeMorphNormals()):u=new THREE.Mesh(p,f),u.name=c,i?(u.matrixAutoUpdate=!1,u.matrix.set(i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7],i[8],i[9],i[10],i[11],i[12],i[13],i[14],i[15])):(u.position.fromArray(n),l?u.quaternion.fromArray(l):u.rotation.fromArray(a),u.scale.fromArray(s)),u.visible=E.visible,u.castShadow=E.castShadow,u.receiveShadow=E.receiveShadow,e.add(u),x.objects[c]=u
}}else if("AmbientLight"===E.type||"PointLight"===E.type||"DirectionalLight"===E.type||"SpotLight"===E.type||"HemisphereLight"===E.type||"AreaLight"===E.type){switch(T=E.color,i=E.intensity,n=E.distance,a=E.position,s=E.rotation,E.type){case"AmbientLight":g=new THREE.AmbientLight(T);break;case"PointLight":g=new THREE.PointLight(T,i,n),g.position.fromArray(a);break;case"DirectionalLight":g=new THREE.DirectionalLight(T,i),g.position.fromArray(E.direction);break;case"SpotLight":g=new THREE.SpotLight(T,i,n,1),g.angle=E.angle,g.position.fromArray(a),g.target.set(a[0],a[1]-n,a[2]),g.target.applyEuler(new THREE.Euler(s[0],s[1],s[2],"XYZ"));break;case"HemisphereLight":g=new THREE.DirectionalLight(T,i,n),g.target.set(a[0],a[1]-n,a[2]),g.target.applyEuler(new THREE.Euler(s[0],s[1],s[2],"XYZ"));break;case"AreaLight":g=new THREE.AreaLight(T,i),g.position.fromArray(a),g.width=E.size,g.height=E.size_y}e.add(g),g.name=c,x.lights[c]=g,x.objects[c]=g}else"PerspectiveCamera"===E.type||"OrthographicCamera"===E.type?(n=E.position,a=E.rotation,l=E.quaternion,"PerspectiveCamera"===E.type?d=new THREE.PerspectiveCamera(E.fov,E.aspect,E.near,E.far):"OrthographicCamera"===E.type&&(d=new THREE.OrthographicCamera(E.left,E.right,E.top,E.bottom,E.near,E.far)),d.name=c,d.position.fromArray(n),void 0!==l?d.quaternion.fromArray(l):void 0!==a&&d.rotation.fromArray(a),e.add(d),x.cameras[c]=d,x.objects[c]=d):(n=E.position,a=E.rotation,s=E.scale,l=E.quaternion,u=new THREE.Object3D,u.name=c,u.position.fromArray(n),l?u.quaternion.fromArray(l):u.rotation.fromArray(a),u.scale.fromArray(s),u.visible=void 0!==E.visible?E.visible:!1,e.add(u),x.objects[c]=u,x.empties[c]=u);if(u){if(void 0!==E.userData)for(var v in E.userData)u.userData[v]=E.userData[v];if(void 0!==E.groups)for(T=0;T<E.groups.length;T++)i=E.groups[T],void 0===x.groups[i]&&(x.groups[i]=[]),x.groups[i].push(c)}}void 0!==u&&void 0!==E.children&&o(u,E.children)}}function a(e,t,i,r,o){var a=o.rotation,s=o.quaternion,h=o.scale;e.position.fromArray(o.position),s?e.quaternion.fromArray(s):e.rotation.fromArray(a),e.scale.fromArray(h),r&&e.traverse(function(e){e.material=r});var l=void 0!==o.visible?o.visible:!0;e.traverse(function(e){e.visible=l}),i.add(e),e.name=t,x.objects[t]=e,n()}function s(e){return function(t,i){t.name=e,x.geometries[e]=t,x.face_materials[e]=i,n(),T-=1,_.onLoadComplete(),c()}}function h(e,t,i,r){return function(n){a(n.content?n.content:n.dae?n.scene:n,e,t,i,r),T-=1,_.onLoadComplete(),c()}}function l(e){return function(t,i){t.name=e,x.geometries[e]=t,x.face_materials[e]=i}}function c(){if(_.callbackProgress({totalModels:y,totalTextures:R,loadedModels:y-T,loadedTextures:R-v},x),_.onLoadProgress(),0===T&&0===v){for(var e=0;e<w.length;e++){var i=w[e],r=x.objects[i.targetName];r?i.object.target=r:(i.object.target=new THREE.Object3D,x.scene.add(i.object.target)),i.object.target.userData.targetInverse=i.object}t(x)}}function u(e,t){if(t(e),void 0!==e.children)for(var i in e.children)u(e.children[i],t)}var p,f,d,E,m,g,T,v,y,R,x,H,_=this,b=THREE.Loader.prototype.extractUrlBase(i),w=[],M=e;for(H in this.geometryHandlers)e=this.geometryHandlers[H].loaderClass,this.geometryHandlers[H].loaderObject=new e;for(H in this.hierarchyHandlers)e=this.hierarchyHandlers[H].loaderClass,this.hierarchyHandlers[H].loaderObject=new e;v=T=0,x={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},M.transform&&(H=M.transform.position,e=M.transform.rotation,i=M.transform.scale,H&&x.scene.position.fromArray(H),e&&x.scene.rotation.fromArray(e),i&&x.scene.scale.fromArray(i),H||e||i)&&(x.scene.updateMatrix(),x.scene.updateMatrixWorld()),H=function(e){return function(){v-=e,c(),_.onLoadComplete()}};for(var S in M.fogs)e=M.fogs[S],"linear"===e.type?E=new THREE.Fog(0,e.near,e.far):"exp2"===e.type&&(E=new THREE.FogExp2(0,e.density)),e=e.color,E.color.setRGB(e[0],e[1],e[2]),x.fogs[S]=E;for(var A in M.geometries)E=M.geometries[A],E.type in this.geometryHandlers&&(T+=1,_.onLoadStart());for(var C in M.objects)u(M.objects[C],function(e){e.type&&e.type in _.hierarchyHandlers&&(T+=1,_.onLoadStart())});y=T;for(A in M.geometries)if(E=M.geometries[A],"cube"===E.type)p=new THREE.BoxGeometry(E.width,E.height,E.depth,E.widthSegments,E.heightSegments,E.depthSegments),p.name=A,x.geometries[A]=p;else if("plane"===E.type)p=new THREE.PlaneGeometry(E.width,E.height,E.widthSegments,E.heightSegments),p.name=A,x.geometries[A]=p;else if("sphere"===E.type)p=new THREE.SphereGeometry(E.radius,E.widthSegments,E.heightSegments),p.name=A,x.geometries[A]=p;else if("cylinder"===E.type)p=new THREE.CylinderGeometry(E.topRad,E.botRad,E.height,E.radSegs,E.heightSegs),p.name=A,x.geometries[A]=p;else if("torus"===E.type)p=new THREE.TorusGeometry(E.radius,E.tube,E.segmentsR,E.segmentsT),p.name=A,x.geometries[A]=p;else if("icosahedron"===E.type)p=new THREE.IcosahedronGeometry(E.radius,E.subdivisions),p.name=A,x.geometries[A]=p;else if(E.type in this.geometryHandlers){C={};for(m in E)"type"!==m&&"url"!==m&&(C[m]=E[m]);this.geometryHandlers[E.type].loaderObject.load(r(E.url,M.urlBaseType),s(A),C)}else"embedded"===E.type&&(C=M.embeds[E.id],C.metadata=M.metadata,C&&(C=this.geometryHandlers.ascii.loaderObject.parse(C,""),l(A)(C.geometry,C.materials)));for(var L in M.textures)if(A=M.textures[L],A.url instanceof Array)for(v+=A.url.length,m=0;m<A.url.length;m++)_.onLoadStart();else v+=1,_.onLoadStart();R=v;for(L in M.textures){if(A=M.textures[L],void 0!==A.mapping&&void 0!==THREE[A.mapping]&&(A.mapping=new THREE[A.mapping]),A.url instanceof Array){for(C=A.url.length,E=[],m=0;C>m;m++)E[m]=r(A.url[m],M.urlBaseType);m=(m=/\.dds$/i.test(E[0]))?THREE.ImageUtils.loadCompressedTextureCube(E,A.mapping,H(C)):THREE.ImageUtils.loadTextureCube(E,A.mapping,H(C))}else m=/\.dds$/i.test(A.url),C=r(A.url,M.urlBaseType),E=H(1),m=m?THREE.ImageUtils.loadCompressedTexture(C,A.mapping,E):THREE.ImageUtils.loadTexture(C,A.mapping,E),void 0!==THREE[A.minFilter]&&(m.minFilter=THREE[A.minFilter]),void 0!==THREE[A.magFilter]&&(m.magFilter=THREE[A.magFilter]),A.anisotropy&&(m.anisotropy=A.anisotropy),A.repeat&&(m.repeat.set(A.repeat[0],A.repeat[1]),1!==A.repeat[0]&&(m.wrapS=THREE.RepeatWrapping),1!==A.repeat[1]&&(m.wrapT=THREE.RepeatWrapping)),A.offset&&m.offset.set(A.offset[0],A.offset[1]),A.wrap&&(C={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==C[A.wrap[0]]&&(m.wrapS=C[A.wrap[0]]),void 0!==C[A.wrap[1]]&&(m.wrapT=C[A.wrap[1]]));x.textures[L]=m}var P,D;for(P in M.materials){L=M.materials[P];for(D in L.parameters)"envMap"===D||"map"===D||"lightMap"===D||"bumpMap"===D?L.parameters[D]=x.textures[L.parameters[D]]:"shading"===D?L.parameters[D]="flat"===L.parameters[D]?THREE.FlatShading:THREE.SmoothShading:"side"===D?L.parameters[D]="double"==L.parameters[D]?THREE.DoubleSide:"back"==L.parameters[D]?THREE.BackSide:THREE.FrontSide:"blending"===D?L.parameters[D]=L.parameters[D]in THREE?THREE[L.parameters[D]]:THREE.NormalBlending:"combine"===D?L.parameters[D]=L.parameters[D]in THREE?THREE[L.parameters[D]]:THREE.MultiplyOperation:"vertexColors"===D?"face"==L.parameters[D]?L.parameters[D]=THREE.FaceColors:L.parameters[D]&&(L.parameters[D]=THREE.VertexColors):"wrapRGB"===D&&(H=L.parameters[D],L.parameters[D]=new THREE.Vector3(H[0],H[1],H[2]));void 0!==L.parameters.opacity&&1>L.parameters.opacity&&(L.parameters.transparent=!0),L.parameters.normalMap?(H=THREE.ShaderLib.normalmap,A=THREE.UniformsUtils.clone(H.uniforms),m=L.parameters.color,C=L.parameters.specular,E=L.parameters.ambient,S=L.parameters.shininess,A.tNormal.value=x.textures[L.parameters.normalMap],L.parameters.normalScale&&A.uNormalScale.value.set(L.parameters.normalScale[0],L.parameters.normalScale[1]),L.parameters.map&&(A.tDiffuse.value=L.parameters.map,A.enableDiffuse.value=!0),L.parameters.envMap&&(A.tCube.value=L.parameters.envMap,A.enableReflection.value=!0,A.reflectivity.value=L.parameters.reflectivity),L.parameters.lightMap&&(A.tAO.value=L.parameters.lightMap,A.enableAO.value=!0),L.parameters.specularMap&&(A.tSpecular.value=x.textures[L.parameters.specularMap],A.enableSpecular.value=!0),L.parameters.displacementMap&&(A.tDisplacement.value=x.textures[L.parameters.displacementMap],A.enableDisplacement.value=!0,A.uDisplacementBias.value=L.parameters.displacementBias,A.uDisplacementScale.value=L.parameters.displacementScale),A.diffuse.value.setHex(m),A.specular.value.setHex(C),A.ambient.value.setHex(E),A.shininess.value=S,L.parameters.opacity&&(A.opacity.value=L.parameters.opacity),f=new THREE.ShaderMaterial({fragmentShader:H.fragmentShader,vertexShader:H.vertexShader,uniforms:A,lights:!0,fog:!0})):f=new THREE[L.type](L.parameters),f.name=P,x.materials[P]=f}for(P in M.materials)if(L=M.materials[P],L.parameters.materials){for(D=[],m=0;m<L.parameters.materials.length;m++)D.push(x.materials[L.parameters.materials[m]]);x.materials[P].materials=D}n(),x.cameras&&M.defaults.camera&&(x.currentCamera=x.cameras[M.defaults.camera]),x.fogs&&M.defaults.fog&&(x.scene.fog=x.fogs[M.defaults.fog]),_.callbackSync(x),c()}},THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,i){i=new THREE.ImageLoader(this.manager),i.setCrossOrigin(this.crossOrigin),i.load(e,function(e){e=new THREE.Texture(e),e.needsUpdate=!0,void 0!==t&&t(e)})},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthWrite=this.depthTest=!0,this.polygonOffset=!1,this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.needsUpdate=this.visible=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(void 0!==e)for(var t in e){var i=e[t];if(void 0===i)console.warn("THREE.Material: '"+t+"' parameter is undefined.");else if(t in this){var r=this[t];r instanceof THREE.Color?r.set(i):r instanceof THREE.Vector3&&i instanceof THREE.Vector3?r.copy(i):this[t]="overdraw"==t?Number(i):i}}},clone:function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.wrapAround=this.metal=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.bumpMap=this.lightMap=this.map=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.envMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var e=new THREE.MeshFaceMaterial,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e},THREE.ParticleSystemMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleSystemMaterial.prototype.clone=function(){var e=new THREE.ParticleSystemMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial,THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.vertexShader=this.fragmentShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName="position",this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(e)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.rotation=this.rotation,e.fog=this.fog,e},THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(e)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial,THREE.Texture=function(e,t,i,r,n,o,a,s,h){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==i?i:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){!0===e&&this.update(),this._needsUpdate=e},clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,i,r,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,r,n,c),this.image={width:t,height:i},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,i,r,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,r,n,c),this.image={data:e,width:t,height:i}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.ParticleSystemMaterial({color:16777215*Math.random()}),this.frustumCulled=this.sortParticles=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,i){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==i?i:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var i,r=this.children.length;for(i=0;r>i;i++)this.children[i].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,i){THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0!==i?i:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var r,n,o;if(this.geometry&&void 0!==this.geometry.bones){for(e=0;e<this.geometry.bones.length;e++)i=this.geometry.bones[e],r=i.pos,n=i.rotq,o=i.scl,t=this.addBone(),t.name=i.name,t.position.set(r[0],r[1],r[2]),t.quaternion.set(n[0],n[1],n[2],n[3]),void 0!==o?t.scale.set(o[0],o[1],o[2]):t.scale.set(1,1,1);for(e=0;e<this.bones.length;e++)i=this.geometry.bones[e],t=this.bones[e],-1===i.parent?this.add(t):this.bones[i.parent].add(t);e=this.bones.length,this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=e=e>256?64:e>64?32:e>16?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*e),this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var e=new THREE.Matrix4;return function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1),t=0;for(var i=this.children.length;i>t;t++){var r=this.children[t];r instanceof THREE.Bone?r.update(this.identityMatrix,!1):r.updateMatrixWorld(!0)}if(void 0==this.boneInverses)for(this.boneInverses=[],t=0,i=this.bones.length;i>t;t++)r=new THREE.Matrix4,r.getInverse(this.bones[t].skinMatrix),this.boneInverses.push(r);for(t=0,i=this.bones.length;i>t;t++)e.multiplyMatrices(this.bones[t].skinMatrix,this.boneInverses[t]),e.flattenToArrayOffset(this.boneMatrices,16*t);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0),this.normalizeSkinWeights()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],i=1/t.lengthManhattan();1/0!==i?t.multiplyScalar(i):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,i=e.animations,r=/([a-z]+)(\d+)/,n=0,o=e.morphTargets.length;o>n;n++){var a=e.morphTargets[n].name.match(r);if(a&&1<a.length){a=a[1],i[a]||(i[a]={start:1/0,end:-1/0});var s=i[a];n<s.start&&(s.start=n),n>s.end&&(s.end=n),t||(t=a)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,i){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:i}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var i=this.geometry.animations[e];i?(this.setFrameRange(i.start,i.end),this.duration=(i.end-i.start)/t*1e3,this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||0>this.time)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)):(this.time%=this.duration,0>this.time&&(this.time+=this.duration)),e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1),e!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e),t=this.time%t/t,this.directionBackwards&&(t=1-t),this.morphTargetInfluences[this.currentKeyframe]=t,this.morphTargetInfluences[this.lastKeyframe]=1-t},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var i=0;i<this.objects.length&&!(t<this.objects[i].distance);i++);this.objects.splice(i,0,{distance:t,object:e}),this.add(e)},THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,i=this.objects.length;i>t&&!(e<this.objects[t].distance);t++);return this.objects[t-1].object},THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i){if(1<this.objects.length){e.setFromMatrixPosition(i.matrixWorld),t.setFromMatrixPosition(this.matrixWorld),i=e.distanceTo(t),this.objects[0].object.visible=!0;for(var r=1,n=this.objects.length;n>r&&i>=this.objects[r].distance;r++)this.objects[r-1].object.visible=!1,this.objects[r].object.visible=!0;for(;n>r;r++)this.objects[r].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(e){void 0===e&&(e=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,e);for(var t=0,i=this.objects.length;i>t;t++){var r=this.objects[t].object.clone();r.visible=0===t,e.addLevel(r,this.objects[t].distance)}return e},THREE.Sprite=function(){var e=new THREE.Geometry2(3);return e.vertices.set([-.5,-.5,0,.5,-.5,0,.5,.5,0]),function(t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.SpriteMaterial
}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)){this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(this.dispatchEvent({type:"objectAdded",object:e}),e.dispatchEvent({type:"addedToScene",scene:this}),t=0;t<e.children.length;t++)this.__addObject(e.children[t])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);if(-1!==t&&this.__lights.splice(t,1),e.shadowCascadeArray)for(t=0;t<e.shadowCascadeArray.length;t++)this.__removeObject(e.shadowCascadeArray[t])}else e instanceof THREE.Camera||(this.__objectsRemoved.push(e),t=this.__objectsAdded.indexOf(e),-1!==t&&this.__objectsAdded.splice(t,1));for(this.dispatchEvent({type:"objectRemoved",object:e}),e.dispatchEvent({type:"removedFromScene",scene:this}),t=0;t<e.children.length;t++)this.__removeObject(e.children[t])},THREE.Scene.prototype.clone=function(e){return void 0===e&&(e=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,e),null!==this.fog&&(e.fog=this.fog.clone()),null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone()),e.autoUpdate=this.autoUpdate,e.matrixAutoUpdate=this.matrixAutoUpdate,e},THREE.Fog=function(e,t,i){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==i?i:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function t(e,t,i){for(var r=0,n=R.length;n>r;r++){var o=R[r];if(yt.copy(o.color),o instanceof THREE.DirectionalLight){var a=St.setFromMatrixPosition(o.matrixWorld).normalize(),s=t.dot(a);0>=s||(s*=o.intensity,i.add(yt.multiplyScalar(s)))}else o instanceof THREE.PointLight&&(a=St.setFromMatrixPosition(o.matrixWorld),s=t.dot(St.subVectors(a,e).normalize()),0>=s||(s*=0==o.distance?1:1-Math.min(e.distanceTo(a)/o.distance,1),0!=s&&(s*=o.intensity,i.add(yt.multiplyScalar(s)))))}}function i(e,t,i,r){p(t),f(i),d(r),E(e.getStyle()),D.stroke(),_t.expandByScalar(2*t)}function r(e){m(e.getStyle()),D.fill()}function n(e){o(e.target)}function o(e){var t=e.wrapS===THREE.RepeatWrapping,i=e.wrapT===THREE.RepeatWrapping,r=e.image,n=document.createElement("canvas");n.width=r.width,n.height=r.height;var o=n.getContext("2d");o.setTransform(1,0,0,-1,0,r.height),o.drawImage(r,0,0),Rt[e.id]=D.createPattern(n,!0===t&&!0===i?"repeat":!0===t&&!1===i?"repeat-x":!1===t&&!0===i?"repeat-y":"no-repeat")}function a(e,t,i,r,a,s,h,l,c,u,p,f,d){if(!(d instanceof THREE.DataTexture)){!1===d.hasEventListener("update",n)&&(void 0!==d.image&&0<d.image.width&&o(d),d.addEventListener("update",n));var E=Rt[d.id];if(void 0!==E){m(E);var E=d.offset.x/d.repeat.x,g=d.offset.y/d.repeat.y,T=d.image.width*d.repeat.x;d=d.image.height*d.repeat.y,h=(h+E)*T,l=(l+g)*d,i-=e,r-=t,a-=e,s-=t,c=(c+E)*T-h,u=(u+g)*d-l,p=(p+E)*T-h,f=(f+g)*d-l,d=c*f-p*u,0!==d&&(E=1/d,d=(f*i-u*a)*E,u=(f*r-u*s)*E,i=(c*a-p*i)*E,r=(c*s-p*r)*E,e=e-d*h-i*l,t=t-u*h-r*l,D.save(),D.transform(d,u,i,r,e,t),D.fill(),D.restore())}else m("rgba(0,0,0,1)"),D.fill()}}function s(e,t,i,r,n,o,a,s,h,l,c,u,p){var f,d;f=p.width-1,d=p.height-1,a*=f,s*=d,i-=e,r-=t,n-=e,o-=t,h=h*f-a,l=l*d-s,c=c*f-a,u=u*d-s,d=1/(h*u-c*l),f=(u*i-l*n)*d,l=(u*r-l*o)*d,i=(h*n-c*i)*d,r=(h*o-c*r)*d,e=e-f*a-i*s,t=t-l*a-r*s,D.save(),D.transform(f,l,i,r,e,t),D.clip(),D.drawImage(p,0,0),D.restore()}function h(e,t,i,r){return ct[0]=255*e.r|0,ct[1]=255*e.g|0,ct[2]=255*e.b|0,ct[4]=255*t.r|0,ct[5]=255*t.g|0,ct[6]=255*t.b|0,ct[8]=255*i.r|0,ct[9]=255*i.g|0,ct[10]=255*i.b|0,ct[12]=255*r.r|0,ct[13]=255*r.g|0,ct[14]=255*r.b|0,ht.putImageData(lt,0,0),pt.drawImage(st,0,0),ut}function l(e,t,i){var r=t.x-e.x,n=t.y-e.y,o=r*r+n*n;0!==o&&(i/=Math.sqrt(o),r*=i,n*=i,t.x+=r,t.y+=n,e.x-=r,e.y-=n)}function c(e){V!==e&&(V=D.globalAlpha=e)}function u(e){z!==e&&(e===THREE.NormalBlending?D.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?D.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(D.globalCompositeOperation="darker"),z=e)}function p(e){O!==e&&(O=D.lineWidth=e)}function f(e){I!==e&&(I=D.lineCap=e)}function d(e){k!==e&&(k=D.lineJoin=e)}function E(e){B!==e&&(B=D.strokeStyle=e)}function m(e){N!==e&&(N=D.fillStyle=e)}function g(e,t){(G!==e||W!==t)&&(D.setLineDash([e,t]),G=e,W=t)}console.log("THREE.CanvasRenderer",THREE.REVISION);var T=THREE.Math.smoothstep;e=e||{};var v,y,R,x,H,_,b,w=this,M=new THREE.Projector,S=void 0!==e.canvas?e.canvas:document.createElement("canvas"),A=S.width,C=S.height,L=Math.floor(A/2),P=Math.floor(C/2),D=S.getContext("2d",{alpha:!0===e.alpha}),F=new THREE.Color(0),U=0,V=1,z=0,B=null,N=null,O=null,I=null,k=null,G=null,W=0;new THREE.RenderableVertex,new THREE.RenderableVertex;var j,X,q,Y,K,Z,Q,J,$,et,tt,it,rt,nt,ot,at,st,ht,lt,ct,ut,pt,ft=new THREE.Color,dt=new THREE.Color,Et=new THREE.Color,mt=new THREE.Color,gt=new THREE.Color,Tt=new THREE.Color,vt=new THREE.Color,yt=new THREE.Color,Rt={},xt=new THREE.Box2,Ht=new THREE.Box2,_t=new THREE.Box2,bt=new THREE.Color,wt=new THREE.Color,Mt=new THREE.Color,St=new THREE.Vector3,At=new THREE.Vector3,Ct=new THREE.Matrix3,Lt=16;st=document.createElement("canvas"),st.width=st.height=2,ht=st.getContext("2d"),ht.fillStyle="rgba(0,0,0,1)",ht.fillRect(0,0,2,2),lt=ht.getImageData(0,0,2,2),ct=lt.data,ut=document.createElement("canvas"),ut.width=ut.height=Lt,pt=ut.getContext("2d"),pt.translate(-Lt/2,-Lt/2),pt.scale(Lt,Lt),Lt--,void 0===D.setLineDash&&(D.setLineDash=void 0!==D.mozDash?function(e){D.mozDash=null!==e[0]?e:null}:function(){}),this.domElement=S,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t,i){A=e*this.devicePixelRatio,C=t*this.devicePixelRatio,L=Math.floor(A/2),P=Math.floor(C/2),S.width=A,S.height=C,1!==this.devicePixelRatio&&!1!==i&&(S.style.width=e+"px",S.style.height=t+"px"),xt.min.set(-L,-P),xt.max.set(L,P),Ht.min.set(-L,-P),Ht.max.set(L,P),V=1,z=0,k=I=O=N=B=null},this.setClearColor=function(e,t){F.set(e),U=void 0!==t?t:1,Ht.min.set(-L,-P),Ht.max.set(L,P)},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){D.setTransform(1,0,0,-1,L,P),!1===Ht.empty()&&(Ht.intersect(xt),Ht.expandByScalar(2),1>U&&D.clearRect(0|Ht.min.x,0|Ht.min.y,Ht.max.x-Ht.min.x|0,Ht.max.y-Ht.min.y|0),U>0&&(u(THREE.NormalBlending),c(1),m("rgba("+Math.floor(255*F.r)+","+Math.floor(255*F.g)+","+Math.floor(255*F.b)+","+U+")"),D.fillRect(0|Ht.min.x,0|Ht.min.y,Ht.max.x-Ht.min.x|0,Ht.max.y-Ht.min.y|0)),Ht.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(e,S){if(!1==S instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear(),D.setTransform(1,0,0,-1,L,P),w.info.render.vertices=0,w.info.render.faces=0,v=M.projectScene(e,S,this.sortObjects,this.sortElements),y=v.elements,R=v.lights,x=S,Ct.getNormalMatrix(S.matrixWorldInverse),bt.setRGB(0,0,0),wt.setRGB(0,0,0),Mt.setRGB(0,0,0);for(var A=0,C=R.length;C>A;A++){var F=R[A],U=F.color;F instanceof THREE.AmbientLight?bt.add(U):F instanceof THREE.DirectionalLight?wt.add(U):F instanceof THREE.PointLight&&Mt.add(U)}for(A=0,C=y.length;C>A;A++){var V=y[A],z=V.material;if(void 0!==z&&!1!==z.visible){if(_t.makeEmpty(),V instanceof THREE.RenderableSprite){H=V,H.x*=L,H.y*=P,F=H,U=z,c(U.opacity),u(U.blending);var B=V.scale.x*L,V=V.scale.y*P,z=.5*Math.sqrt(B*B+V*V);if(_t.min.set(F.x-z,F.y-z),_t.max.set(F.x+z,F.y+z),U instanceof THREE.SpriteMaterial||U instanceof THREE.ParticleSystemMaterial){var N=U.map;if(null!==N){!1===N.hasEventListener("update",n)&&(void 0!==N.image&&0<N.image.width&&o(N),N.addEventListener("update",n)),z=Rt[N.id],void 0!==z?m(z):m("rgba( 0, 0, 0, 1 )");var O=N.image,z=O.width*N.offset.x,I=O.height*N.offset.y,k=O.width*N.repeat.x,N=O.height*N.repeat.y,O=B/k,G=V/N;D.save(),D.translate(F.x,F.y),0!==U.rotation&&D.rotate(U.rotation),D.translate(-B/2,-V/2),D.scale(O,G),D.translate(-z,-I),D.fillRect(z,I,k,N)}else m(U.color.getStyle()),D.save(),D.translate(F.x,F.y),0!==U.rotation&&D.rotate(U.rotation),D.scale(B,-V),D.fillRect(-.5,-.5,1,1);D.restore()}else U instanceof THREE.SpriteCanvasMaterial&&(E(U.color.getStyle()),m(U.color.getStyle()),D.save(),D.translate(F.x,F.y),0!==U.rotation&&D.rotate(U.rotation),D.scale(B,V),U.program(D),D.restore())}else if(V instanceof THREE.RenderableLine){if(H=V.v1,_=V.v2,H.positionScreen.x*=L,H.positionScreen.y*=P,_.positionScreen.x*=L,_.positionScreen.y*=P,_t.setFromPoints([H.positionScreen,_.positionScreen]),!0===xt.isIntersectionBox(_t))if(F=H,U=_,B=V,V=z,c(V.opacity),u(V.blending),D.beginPath(),D.moveTo(F.positionScreen.x,F.positionScreen.y),D.lineTo(U.positionScreen.x,U.positionScreen.y),V instanceof THREE.LineBasicMaterial){if(p(V.linewidth),f(V.linecap),d(V.linejoin),V.vertexColors!==THREE.VertexColors)E(V.color.getStyle());else if(z=B.vertexColors[0].getStyle(),B=B.vertexColors[1].getStyle(),z===B)E(z);else{try{var W=D.createLinearGradient(F.positionScreen.x,F.positionScreen.y,U.positionScreen.x,U.positionScreen.y);W.addColorStop(0,z),W.addColorStop(1,B)}catch(st){W=z}E(W)}D.stroke(),_t.expandByScalar(2*V.linewidth)}else V instanceof THREE.LineDashedMaterial&&(p(V.linewidth),f(V.linecap),d(V.linejoin),E(V.color.getStyle()),g(V.dashSize,V.gapSize),D.stroke(),_t.expandByScalar(2*V.linewidth),g(null,null))}else if(V instanceof THREE.RenderableFace){if(H=V.v1,_=V.v2,b=V.v3,-1>H.positionScreen.z||1<H.positionScreen.z)continue;if(-1>_.positionScreen.z||1<_.positionScreen.z)continue;if(-1>b.positionScreen.z||1<b.positionScreen.z)continue;if(H.positionScreen.x*=L,H.positionScreen.y*=P,_.positionScreen.x*=L,_.positionScreen.y*=P,b.positionScreen.x*=L,b.positionScreen.y*=P,0<z.overdraw&&(l(H.positionScreen,_.positionScreen,z.overdraw),l(_.positionScreen,b.positionScreen,z.overdraw),l(b.positionScreen,H.positionScreen,z.overdraw)),_t.setFromPoints([H.positionScreen,_.positionScreen,b.positionScreen]),!0===xt.isIntersectionBox(_t)){F=H,U=_,B=b,w.info.render.vertices+=3,w.info.render.faces++,c(z.opacity),u(z.blending),j=F.positionScreen.x,X=F.positionScreen.y,q=U.positionScreen.x,Y=U.positionScreen.y,K=B.positionScreen.x,Z=B.positionScreen.y;var I=j,k=X,N=q,O=Y,G=K,ht=Z;D.beginPath(),D.moveTo(I,k),D.lineTo(N,O),D.lineTo(G,ht),D.closePath(),(z instanceof THREE.MeshLambertMaterial||z instanceof THREE.MeshPhongMaterial)&&null===z.map?(Tt.copy(z.color),vt.copy(z.emissive),z.vertexColors===THREE.FaceColors&&Tt.multiply(V.color),!1===z.wireframe&&z.shading===THREE.SmoothShading&&3===V.vertexNormalsLength?(dt.copy(bt),Et.copy(bt),mt.copy(bt),t(V.v1.positionWorld,V.vertexNormalsModel[0],dt),t(V.v2.positionWorld,V.vertexNormalsModel[1],Et),t(V.v3.positionWorld,V.vertexNormalsModel[2],mt),dt.multiply(Tt).add(vt),Et.multiply(Tt).add(vt),mt.multiply(Tt).add(vt),gt.addColors(Et,mt).multiplyScalar(.5),$=h(dt,Et,mt,gt),s(j,X,q,Y,K,Z,0,0,1,0,0,1,$)):(ft.copy(bt),t(V.centroidModel,V.normalModel,ft),ft.multiply(Tt).add(vt),!0===z.wireframe?i(ft,z.wireframeLinewidth,z.wireframeLinecap,z.wireframeLinejoin):r(ft))):z instanceof THREE.MeshBasicMaterial||z instanceof THREE.MeshLambertMaterial||z instanceof THREE.MeshPhongMaterial?null!==z.map?z.map.mapping instanceof THREE.UVMapping&&(et=V.uvs[0],a(j,X,q,Y,K,Z,et[0].x,et[0].y,et[1].x,et[1].y,et[2].x,et[2].y,z.map)):null!==z.envMap?z.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(At.copy(V.vertexNormalsModel[0]).applyMatrix3(Ct),tt=.5*At.x+.5,it=.5*At.y+.5,At.copy(V.vertexNormalsModel[1]).applyMatrix3(Ct),rt=.5*At.x+.5,nt=.5*At.y+.5,At.copy(V.vertexNormalsModel[2]).applyMatrix3(Ct),ot=.5*At.x+.5,at=.5*At.y+.5,a(j,X,q,Y,K,Z,tt,it,rt,nt,ot,at,z.envMap)):(ft.copy(z.color),z.vertexColors===THREE.FaceColors&&ft.multiply(V.color),!0===z.wireframe?i(ft,z.wireframeLinewidth,z.wireframeLinecap,z.wireframeLinejoin):r(ft)):z instanceof THREE.MeshDepthMaterial?(Q=x.near,J=x.far,dt.r=dt.g=dt.b=1-T(F.positionScreen.z*F.positionScreen.w,Q,J),Et.r=Et.g=Et.b=1-T(U.positionScreen.z*U.positionScreen.w,Q,J),mt.r=mt.g=mt.b=1-T(B.positionScreen.z*B.positionScreen.w,Q,J),gt.addColors(Et,mt).multiplyScalar(.5),$=h(dt,Et,mt,gt),s(j,X,q,Y,K,Z,0,0,1,0,0,1,$)):z instanceof THREE.MeshNormalMaterial&&(z.shading===THREE.FlatShading?(At.copy(V.normalModel).applyMatrix3(Ct),ft.setRGB(At.x,At.y,At.z).multiplyScalar(.5).addScalar(.5),!0===z.wireframe?i(ft,z.wireframeLinewidth,z.wireframeLinecap,z.wireframeLinejoin):r(ft)):z.shading===THREE.SmoothShading&&(At.copy(V.vertexNormalsModel[0]).applyMatrix3(Ct),dt.setRGB(At.x,At.y,At.z).multiplyScalar(.5).addScalar(.5),At.copy(V.vertexNormalsModel[1]).applyMatrix3(Ct),Et.setRGB(At.x,At.y,At.z).multiplyScalar(.5).addScalar(.5),At.copy(V.vertexNormalsModel[2]).applyMatrix3(Ct),mt.setRGB(At.x,At.y,At.z).multiplyScalar(.5).addScalar(.5),gt.addColors(Et,mt).multiplyScalar(.5),$=h(dt,Et,mt,gt),s(j,X,q,Y,K,Z,0,0,1,0,0,1,$)))}}Ht.union(_t)}}D.setTransform(1,0,0,1,0,0)}}},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nuniform int boneTextureWidth;\nuniform int boneTextureHeight;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, float( boneTextureWidth ) );\nfloat y = floor( j / float( boneTextureWidth ) );\nfloat dx = 1.0 / float( boneTextureWidth );\nfloat dy = 1.0 / float( boneTextureHeight );\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\nmat4 boneMatZ = getBoneMatrix( skinIndex.z );\nmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned      += boneMatY * skinVertex * skinWeight.y;\nskinned      += boneMatZ * skinVertex * skinWeight.z;\nskinned      += boneMatW * skinVertex * skinWeight.w;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix 	+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nvec3 shadowZ = vec3( shadowCoord.z );\nshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\nshadowKernel[0] *= vec3(0.25);\nshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\nshadowKernel[1] *= vec3(0.25);\nshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\nshadowKernel[2] *= vec3(0.25);\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(e){var t,i,r,n={};
for(t=0;t<e.length;t++)for(i in r=this.clone(e[t]))n[i]=r[i];return n},clone:function(e){var t,i,r,n={};for(t in e)for(i in n[t]={},e[t])r=e[t][i],n[t][i]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r;return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), opacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(e){function t(e,t){var i=e.vertices.length,r=t.material;if(r.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var n in r.attributes){var o=r.attributes[n];if(!o.__webglInitialized||o.createUniqueBuffers){o.__webglInitialized=!0;var a=1;"v2"===o.type?a=2:"v3"===o.type?a=3:"v4"===o.type?a=4:"c"===o.type&&(a=3),o.size=a,o.array=new Float32Array(i*a),o.buffer=G.createBuffer(),o.buffer.belongsToAttribute=n,o.needsUpdate=!0}e.__webglCustomAttributesList.push(o)}}}function i(e,t){var i=t.geometry,a=e.faces3,s=3*a.length,h=1*a.length,l=3*a.length,a=r(t,e),c=o(a),u=n(a),p=a.vertexColors?a.vertexColors:!1;if(e.__vertexArray=new Float32Array(3*s),u&&(e.__normalArray=new Float32Array(3*s)),i.hasTangents&&(e.__tangentArray=new Float32Array(4*s)),p&&(e.__colorArray=new Float32Array(3*s)),c&&(0<i.faceVertexUvs.length&&(e.__uvArray=new Float32Array(2*s)),1<i.faceVertexUvs.length&&(e.__uv2Array=new Float32Array(2*s))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*s),e.__skinWeightArray=new Float32Array(4*s)),e.__faceArray=new Uint16Array(3*h),e.__lineArray=new Uint16Array(2*l),e.numMorphTargets)for(e.__morphTargetsArrays=[],i=0,c=e.numMorphTargets;c>i;i++)e.__morphTargetsArrays.push(new Float32Array(3*s));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],i=0,c=e.numMorphNormals;c>i;i++)e.__morphNormalsArrays.push(new Float32Array(3*s));if(e.__webglFaceCount=3*h,e.__webglLineCount=2*l,a.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var f in a.attributes){var d,h=a.attributes[f],l={};for(d in h)l[d]=h[d];(!l.__webglInitialized||l.createUniqueBuffers)&&(l.__webglInitialized=!0,i=1,"v2"===l.type?i=2:"v3"===l.type?i=3:"v4"===l.type?i=4:"c"===l.type&&(i=3),l.size=i,l.array=new Float32Array(s*i),l.buffer=G.createBuffer(),l.buffer.belongsToAttribute=f,h.needsUpdate=!0,l.__original=h),e.__webglCustomAttributesList.push(l)}}e.__inittedArrays=!0}function r(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function n(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function o(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial?!0:!1}function a(e,t,i,r){var n,o,a,h;for(o in t)a=t[o],n=i[o],a>=0&&(n?(h=n.itemSize,G.bindBuffer(G.ARRAY_BUFFER,n.buffer),s(a),G.vertexAttribPointer(a,h,G.FLOAT,!1,0,r*h*4)):e.defaultAttributeValues&&(2===e.defaultAttributeValues[o].length?G.vertexAttrib2fv(a,e.defaultAttributeValues[o]):3===e.defaultAttributeValues[o].length&&G.vertexAttrib3fv(a,e.defaultAttributeValues[o])))}function s(e){0===Rt[e]&&(G.enableVertexAttribArray(e),Rt[e]=1)}function h(){for(var e in Rt)1===Rt[e]&&(G.disableVertexAttribArray(e),Rt[e]=0)}function l(e,t){return e.z!==t.z?t.z-e.z:e.id-t.id}function c(e,t){return t[0]-e[0]}function u(e,t,i){if(e.length)for(var r=0,n=e.length;n>r;r++)tt=Q=null,$=et=nt=rt=ct=lt=ot=-1,Mt=!0,e[r].render(t,i,vt,yt),tt=Q=null,$=et=nt=rt=ct=lt=ot=-1,Mt=!0}function p(e,t,i,r,n,o,a,s){var h,l,c,u;t?(l=e.length-1,u=t=-1):(l=0,t=e.length,u=1);for(var p=l;p!==t;p+=u)if(h=e[p],h.render){if(l=h.object,c=h.buffer,s)h=s;else{if(h=h[i],!h)continue;a&&Y.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),Y.setDepthTest(h.depthTest),Y.setDepthWrite(h.depthWrite),w(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}Y.setMaterialFaces(h),c instanceof THREE.BufferGeometry?Y.renderBufferDirect(r,n,o,h,c,l):Y.renderBuffer(r,n,o,h,c,l)}}function f(e,t,i,r,n,o,a){for(var s,h,l=0,c=e.length;c>l;l++)if(s=e[l],h=s.object,h.visible){if(a)s=a;else{if(s=s[t],!s)continue;o&&Y.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),Y.setDepthTest(s.depthTest),Y.setDepthWrite(s.depthWrite),w(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}Y.renderImmediateObject(i,r,n,s,h)}}function d(e,r){var n,o,a;if(void 0===e.__webglInit&&(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,void 0!==e.geometry&&void 0===e.geometry.__webglInit&&(e.geometry.__webglInit=!0,e.geometry.addEventListener("dispose",It)),o=e.geometry,void 0!==o))if(o instanceof THREE.BufferGeometry){var s,h;for(a in o.attributes)h="index"===a?G.ELEMENT_ARRAY_BUFFER:G.ARRAY_BUFFER,s=o.attributes[a],s.buffer=G.createBuffer(),G.bindBuffer(h,s.buffer),G.bufferData(h,s.array,G.STATIC_DRAW)}else if(e instanceof THREE.Mesh){for(n in a=e.material,void 0===o.geometryGroups&&o.makeGroups(a instanceof THREE.MeshFaceMaterial),o.geometryGroups)if(a=o.geometryGroups[n],!a.__webglVertexBuffer){s=a,s.__webglVertexBuffer=G.createBuffer(),s.__webglNormalBuffer=G.createBuffer(),s.__webglTangentBuffer=G.createBuffer(),s.__webglColorBuffer=G.createBuffer(),s.__webglUVBuffer=G.createBuffer(),s.__webglUV2Buffer=G.createBuffer(),s.__webglSkinIndicesBuffer=G.createBuffer(),s.__webglSkinWeightsBuffer=G.createBuffer(),s.__webglFaceBuffer=G.createBuffer(),s.__webglLineBuffer=G.createBuffer();var l=h=void 0;if(s.numMorphTargets)for(s.__webglMorphTargetsBuffers=[],h=0,l=s.numMorphTargets;l>h;h++)s.__webglMorphTargetsBuffers.push(G.createBuffer());if(s.numMorphNormals)for(s.__webglMorphNormalsBuffers=[],h=0,l=s.numMorphNormals;l>h;h++)s.__webglMorphNormalsBuffers.push(G.createBuffer());Y.info.memory.geometries++,i(a,e),o.verticesNeedUpdate=!0,o.morphTargetsNeedUpdate=!0,o.elementsNeedUpdate=!0,o.uvsNeedUpdate=!0,o.normalsNeedUpdate=!0,o.tangentsNeedUpdate=!0,o.colorsNeedUpdate=!0}}else e instanceof THREE.Line?o.__webglVertexBuffer||(a=o,a.__webglVertexBuffer=G.createBuffer(),a.__webglColorBuffer=G.createBuffer(),a.__webglLineDistanceBuffer=G.createBuffer(),Y.info.memory.geometries++,a=o,s=a.vertices.length,a.__vertexArray=new Float32Array(3*s),a.__colorArray=new Float32Array(3*s),a.__lineDistanceArray=new Float32Array(1*s),a.__webglLineCount=s,t(a,e),o.verticesNeedUpdate=!0,o.colorsNeedUpdate=!0,o.lineDistancesNeedUpdate=!0):e instanceof THREE.ParticleSystem&&!o.__webglVertexBuffer&&(a=o,a.__webglVertexBuffer=G.createBuffer(),a.__webglColorBuffer=G.createBuffer(),Y.info.memory.geometries++,a=o,s=a.vertices.length,a.__vertexArray=new Float32Array(3*s),a.__colorArray=new Float32Array(3*s),a.__sortArray=[],a.__webglParticleCount=s,t(a,e),o.verticesNeedUpdate=!0,o.colorsNeedUpdate=!0);
if(void 0===e.__webglActive){if(e instanceof THREE.Mesh){if(o=e.geometry,o instanceof THREE.BufferGeometry)E(r.__webglObjects,o,e);else if(o instanceof THREE.Geometry)for(n in o.geometryGroups)a=o.geometryGroups[n],E(r.__webglObjects,a,e)}else e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(o=e.geometry,E(r.__webglObjects,o,e)):e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback?r.__webglObjectsImmediate.push({id:null,object:e,opaque:null,transparent:null,z:0}):e instanceof THREE.Sprite?r.__webglSprites.push(e):e instanceof THREE.LensFlare&&r.__webglFlares.push(e);e.__webglActive=!0}}function E(e,t,i){e.push({id:null,buffer:t,object:i,opaque:null,transparent:null,z:0})}function m(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function g(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function T(e,t){e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Line?v(t.__webglObjects,e):e instanceof THREE.Sprite?y(t.__webglSprites,e):e instanceof THREE.LensFlare?y(t.__webglFlares,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&v(t.__webglObjectsImmediate,e),delete e.__webglActive}function v(e,t){for(var i=e.length-1;i>=0;i--)e[i].object===t&&e.splice(i,1)}function y(e,t){for(var i=e.length-1;i>=0;i--)e[i]===t&&e.splice(i,1)}function R(e,t,i,r,n){it=0,r.needsUpdate&&(r.program&&Xt(r),Y.initMaterial(r,t,i,n),r.needsUpdate=!1),r.morphTargets&&!n.__webglMorphTargetInfluences&&(n.__webglMorphTargetInfluences=new Float32Array(Y.maxMorphTargets));var o=!1,a=r.program,s=a.uniforms,h=r.uniforms;if(a!==Q&&(G.useProgram(a),Q=a,o=!0),r.id!==$&&($=r.id,o=!0),(o||e!==tt)&&(G.uniformMatrix4fv(s.projectionMatrix,!1,e.projectionMatrix.elements),e!==tt&&(tt=e)),r.skinning)if(Ft&&n.useVertexTexture){if(null!==s.boneTexture){var l=x();G.uniform1i(s.boneTexture,l),Y.setTexture(n.boneTexture,l)}null!==s.boneTextureWidth&&G.uniform1i(s.boneTextureWidth,n.boneTextureWidth),null!==s.boneTextureHeight&&G.uniform1i(s.boneTextureHeight,n.boneTextureHeight)}else null!==s.boneGlobalMatrices&&G.uniformMatrix4fv(s.boneGlobalMatrices,!1,n.boneMatrices);if(o){if(i&&r.fog&&(h.fogColor.value=i.color,i instanceof THREE.Fog?(h.fogNear.value=i.near,h.fogFar.value=i.far):i instanceof THREE.FogExp2&&(h.fogDensity.value=i.density)),r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights){if(Mt){var c,u,p,f,d=l=0,E=0,m=St,g=m.directional.colors,T=m.directional.positions,v=m.point.colors,y=m.point.positions,R=m.point.distances,b=m.spot.colors,w=m.spot.positions,M=m.spot.distances,S=m.spot.directions,C=m.spot.anglesCos,L=m.spot.exponents,F=m.hemi.skyColors,U=m.hemi.groundColors,V=m.hemi.positions,z=0,B=0,N=0,O=0,I=0,k=0,W=0,j=0,X=c=0;for(i=f=X=0,o=t.length;o>i;i++)c=t[i],c.onlyShadow||(u=c.color,p=c.intensity,f=c.distance,c instanceof THREE.AmbientLight?c.visible&&(Y.gammaInput?(l+=u.r*u.r,d+=u.g*u.g,E+=u.b*u.b):(l+=u.r,d+=u.g,E+=u.b)):c instanceof THREE.DirectionalLight?(I+=1,c.visible&&(wt.setFromMatrixPosition(c.matrixWorld),bt.setFromMatrixPosition(c.target.matrixWorld),wt.sub(bt),wt.normalize(),0!==wt.x||0!==wt.y||0!==wt.z)&&(c=3*z,T[c]=wt.x,T[c+1]=wt.y,T[c+2]=wt.z,Y.gammaInput?H(g,c,u,p*p):_(g,c,u,p),z+=1)):c instanceof THREE.PointLight?(k+=1,c.visible&&(X=3*B,Y.gammaInput?H(v,X,u,p*p):_(v,X,u,p),bt.setFromMatrixPosition(c.matrixWorld),y[X]=bt.x,y[X+1]=bt.y,y[X+2]=bt.z,R[B]=f,B+=1)):c instanceof THREE.SpotLight?(W+=1,c.visible&&(X=3*N,Y.gammaInput?H(b,X,u,p*p):_(b,X,u,p),bt.setFromMatrixPosition(c.matrixWorld),w[X]=bt.x,w[X+1]=bt.y,w[X+2]=bt.z,M[N]=f,wt.copy(bt),bt.setFromMatrixPosition(c.target.matrixWorld),wt.sub(bt),wt.normalize(),S[X]=wt.x,S[X+1]=wt.y,S[X+2]=wt.z,C[N]=Math.cos(c.angle),L[N]=c.exponent,N+=1)):c instanceof THREE.HemisphereLight&&(j+=1,c.visible&&(wt.setFromMatrixPosition(c.matrixWorld),wt.normalize(),0!==wt.x||0!==wt.y||0!==wt.z))&&(f=3*O,V[f]=wt.x,V[f+1]=wt.y,V[f+2]=wt.z,u=c.color,c=c.groundColor,Y.gammaInput?(p*=p,H(F,f,u,p),H(U,f,c,p)):(_(F,f,u,p),_(U,f,c,p)),O+=1));for(i=3*z,o=Math.max(g.length,3*I);o>i;i++)g[i]=0;for(i=3*B,o=Math.max(v.length,3*k);o>i;i++)v[i]=0;for(i=3*N,o=Math.max(b.length,3*W);o>i;i++)b[i]=0;for(i=3*O,o=Math.max(F.length,3*j);o>i;i++)F[i]=0;for(i=3*O,o=Math.max(U.length,3*j);o>i;i++)U[i]=0;m.directional.length=z,m.point.length=B,m.spot.length=N,m.hemi.length=O,m.ambient[0]=l,m.ambient[1]=d,m.ambient[2]=E,Mt=!1}i=St,h.ambientLightColor.value=i.ambient,h.directionalLightColor.value=i.directional.colors,h.directionalLightDirection.value=i.directional.positions,h.pointLightColor.value=i.point.colors,h.pointLightPosition.value=i.point.positions,h.pointLightDistance.value=i.point.distances,h.spotLightColor.value=i.spot.colors,h.spotLightPosition.value=i.spot.positions,h.spotLightDistance.value=i.spot.distances,h.spotLightDirection.value=i.spot.directions,h.spotLightAngleCos.value=i.spot.anglesCos,h.spotLightExponent.value=i.spot.exponents,h.hemisphereLightSkyColor.value=i.hemi.skyColors,h.hemisphereLightGroundColor.value=i.hemi.groundColors,h.hemisphereLightDirection.value=i.hemi.positions}if(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial){h.opacity.value=r.opacity,Y.gammaInput?h.diffuse.value.copyGammaToLinear(r.color):h.diffuse.value=r.color,h.map.value=r.map,h.lightMap.value=r.lightMap,h.specularMap.value=r.specularMap,r.bumpMap&&(h.bumpMap.value=r.bumpMap,h.bumpScale.value=r.bumpScale),r.normalMap&&(h.normalMap.value=r.normalMap,h.normalScale.value.copy(r.normalScale));var q;r.map?q=r.map:r.specularMap?q=r.specularMap:r.normalMap?q=r.normalMap:r.bumpMap&&(q=r.bumpMap),void 0!==q&&(i=q.offset,q=q.repeat,h.offsetRepeat.value.set(i.x,i.y,q.x,q.y)),h.envMap.value=r.envMap,h.flipEnvMap.value=r.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,h.reflectivity.value=r.reflectivity,h.refractionRatio.value=r.refractionRatio,h.combine.value=r.combine,h.useRefract.value=r.envMap&&r.envMap.mapping instanceof THREE.CubeRefractionMapping}if(r instanceof THREE.LineBasicMaterial?(h.diffuse.value=r.color,h.opacity.value=r.opacity):r instanceof THREE.LineDashedMaterial?(h.diffuse.value=r.color,h.opacity.value=r.opacity,h.dashSize.value=r.dashSize,h.totalSize.value=r.dashSize+r.gapSize,h.scale.value=r.scale):r instanceof THREE.ParticleSystemMaterial?(h.psColor.value=r.color,h.opacity.value=r.opacity,h.size.value=r.size,h.scale.value=D.height/2,h.map.value=r.map):r instanceof THREE.MeshPhongMaterial?(h.shininess.value=r.shininess,Y.gammaInput?(h.ambient.value.copyGammaToLinear(r.ambient),h.emissive.value.copyGammaToLinear(r.emissive),h.specular.value.copyGammaToLinear(r.specular)):(h.ambient.value=r.ambient,h.emissive.value=r.emissive,h.specular.value=r.specular),r.wrapAround&&h.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshLambertMaterial?(Y.gammaInput?(h.ambient.value.copyGammaToLinear(r.ambient),h.emissive.value.copyGammaToLinear(r.emissive)):(h.ambient.value=r.ambient,h.emissive.value=r.emissive),r.wrapAround&&h.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshDepthMaterial?(h.mNear.value=e.near,h.mFar.value=e.far,h.opacity.value=r.opacity):r instanceof THREE.MeshNormalMaterial&&(h.opacity.value=r.opacity),n.receiveShadow&&!r._shadowPass&&h.shadowMatrix)for(i=q=0,o=t.length;o>i;i++)l=t[i],l.castShadow&&(l instanceof THREE.SpotLight||l instanceof THREE.DirectionalLight&&!l.shadowCascade)&&(h.shadowMap.value[q]=l.shadowMap,h.shadowMapSize.value[q]=l.shadowMapSize,h.shadowMatrix.value[q]=l.shadowMatrix,h.shadowDarkness.value[q]=l.shadowDarkness,h.shadowBias.value[q]=l.shadowBias,q++);for(t=r.uniformsList,h=0,q=t.length;q>h;h++)if(o=a.uniforms[t[h][1]])if(i=t[h][0],d=i.type,l=i.value,"i"===d)G.uniform1i(o,l);else if("f"===d)G.uniform1f(o,l);else if("v2"===d)G.uniform2f(o,l.x,l.y);else if("v3"===d)G.uniform3f(o,l.x,l.y,l.z);else if("v4"===d)G.uniform4f(o,l.x,l.y,l.z,l.w);else if("c"===d)G.uniform3f(o,l.r,l.g,l.b);else if("iv1"===d)G.uniform1iv(o,l);else if("iv"===d)G.uniform3iv(o,l);else if("fv1"===d)G.uniform1fv(o,l);else if("fv"===d)G.uniform3fv(o,l);else if("v2v"===d){for(void 0===i._array&&(i._array=new Float32Array(2*l.length)),d=0,E=l.length;E>d;d++)m=2*d,i._array[m]=l[d].x,i._array[m+1]=l[d].y;G.uniform2fv(o,i._array)}else if("v3v"===d){for(void 0===i._array&&(i._array=new Float32Array(3*l.length)),d=0,E=l.length;E>d;d++)m=3*d,i._array[m]=l[d].x,i._array[m+1]=l[d].y,i._array[m+2]=l[d].z;G.uniform3fv(o,i._array)}else if("v4v"===d){for(void 0===i._array&&(i._array=new Float32Array(4*l.length)),d=0,E=l.length;E>d;d++)m=4*d,i._array[m]=l[d].x,i._array[m+1]=l[d].y,i._array[m+2]=l[d].z,i._array[m+3]=l[d].w;G.uniform4fv(o,i._array)}else if("m4"===d)void 0===i._array&&(i._array=new Float32Array(16)),l.flattenToArray(i._array),G.uniformMatrix4fv(o,!1,i._array);else if("m4v"===d){for(void 0===i._array&&(i._array=new Float32Array(16*l.length)),d=0,E=l.length;E>d;d++)l[d].flattenToArrayOffset(i._array,16*d);G.uniformMatrix4fv(o,!1,i._array)}else if("t"===d){if(m=l,l=x(),G.uniform1i(o,l),m)if(m.image instanceof Array&&6===m.image.length){if(i=m,o=l,6===i.image.length)if(i.needsUpdate){for(i.image.__webglTextureCube||(i.addEventListener("dispose",kt),i.image.__webglTextureCube=G.createTexture(),Y.info.memory.textures++),G.activeTexture(G.TEXTURE0+o),G.bindTexture(G.TEXTURE_CUBE_MAP,i.image.__webglTextureCube),G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,i.flipY),o=i instanceof THREE.CompressedTexture,l=[],d=0;6>d;d++)Y.autoScaleCubemaps&&!o?(E=l,m=d,g=i.image[d],v=Lt,g.width<=v&&g.height<=v||(y=Math.max(g.width,g.height),T=Math.floor(g.width*v/y),v=Math.floor(g.height*v/y),y=document.createElement("canvas"),y.width=T,y.height=v,y.getContext("2d").drawImage(g,0,0,g.width,g.height,0,0,T,v),g=y),E[m]=g):l[d]=i.image[d];for(d=l[0],E=THREE.Math.isPowerOfTwo(d.width)&&THREE.Math.isPowerOfTwo(d.height),m=P(i.format),g=P(i.type),A(G.TEXTURE_CUBE_MAP,i,E),d=0;6>d;d++)if(o)for(v=l[d].mipmaps,y=0,R=v.length;R>y;y++)T=v[y],i.format!==THREE.RGBAFormat?G.compressedTexImage2D(G.TEXTURE_CUBE_MAP_POSITIVE_X+d,y,m,T.width,T.height,0,T.data):G.texImage2D(G.TEXTURE_CUBE_MAP_POSITIVE_X+d,y,m,T.width,T.height,0,m,g,T.data);else G.texImage2D(G.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,m,m,g,l[d]);i.generateMipmaps&&E&&G.generateMipmap(G.TEXTURE_CUBE_MAP),i.needsUpdate=!1,i.onUpdate&&i.onUpdate()}else G.activeTexture(G.TEXTURE0+o),G.bindTexture(G.TEXTURE_CUBE_MAP,i.image.__webglTextureCube)}else m instanceof THREE.WebGLRenderTargetCube?(i=m,G.activeTexture(G.TEXTURE0+l),G.bindTexture(G.TEXTURE_CUBE_MAP,i.__webglTexture)):Y.setTexture(m,l)}else if("tv"===d){for(void 0===i._array&&(i._array=[]),d=0,E=i.value.length;E>d;d++)i._array[d]=x();for(G.uniform1iv(o,i._array),d=0,E=i.value.length;E>d;d++)m=i.value[d],l=i._array[d],m&&Y.setTexture(m,l)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+d);(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap)&&null!==s.cameraPosition&&(bt.setFromMatrixPosition(e.matrixWorld),G.uniform3f(s.cameraPosition,bt.x,bt.y,bt.z)),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&null!==s.viewMatrix&&G.uniformMatrix4fv(s.viewMatrix,!1,e.matrixWorldInverse.elements)}return G.uniformMatrix4fv(s.modelViewMatrix,!1,n._modelViewMatrix.elements),s.normalMatrix&&G.uniformMatrix3fv(s.normalMatrix,!1,n._normalMatrix.elements),null!==s.modelMatrix&&G.uniformMatrix4fv(s.modelMatrix,!1,n.matrixWorld.elements),a}function x(){var e=it;return e>=At&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+At),it+=1,e}function H(e,t,i,r){e[t]=i.r*i.r*r,e[t+1]=i.g*i.g*r,e[t+2]=i.b*i.b*r}function _(e,t,i,r){e[t]=i.r*r,e[t+1]=i.g*r,e[t+2]=i.b*r}function b(e){e!==dt&&(G.lineWidth(e),dt=e)}function w(e,t,i){ut!==e&&(e?G.enable(G.POLYGON_OFFSET_FILL):G.disable(G.POLYGON_OFFSET_FILL),ut=e),!e||pt===t&&ft===i||(G.polygonOffset(t,i),pt=t,ft=i)}function M(e){e=e.split("\n");for(var t=0,i=e.length;i>t;t++)e[t]=t+1+": "+e[t];return e.join("\n")}function S(e,t){var i;return"fragment"===e?i=G.createShader(G.FRAGMENT_SHADER):"vertex"===e&&(i=G.createShader(G.VERTEX_SHADER)),G.shaderSource(i,t),G.compileShader(i),G.getShaderParameter(i,G.COMPILE_STATUS)?i:(console.error(G.getShaderInfoLog(i)),console.error(M(t)),null)}function A(e,t,i){i?(G.texParameteri(e,G.TEXTURE_WRAP_S,P(t.wrapS)),G.texParameteri(e,G.TEXTURE_WRAP_T,P(t.wrapT)),G.texParameteri(e,G.TEXTURE_MAG_FILTER,P(t.magFilter)),G.texParameteri(e,G.TEXTURE_MIN_FILTER,P(t.minFilter))):(G.texParameteri(e,G.TEXTURE_WRAP_S,G.CLAMP_TO_EDGE),G.texParameteri(e,G.TEXTURE_WRAP_T,G.CLAMP_TO_EDGE),G.texParameteri(e,G.TEXTURE_MAG_FILTER,L(t.magFilter)),G.texParameteri(e,G.TEXTURE_MIN_FILTER,L(t.minFilter))),X&&t.type!==THREE.FloatType&&(1<t.anisotropy||t.__oldAnisotropy)&&(G.texParameterf(e,X.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Pt)),t.__oldAnisotropy=t.anisotropy)}function C(e,t){G.bindRenderbuffer(G.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(G.renderbufferStorage(G.RENDERBUFFER,G.DEPTH_COMPONENT16,t.width,t.height),G.framebufferRenderbuffer(G.FRAMEBUFFER,G.DEPTH_ATTACHMENT,G.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(G.renderbufferStorage(G.RENDERBUFFER,G.DEPTH_STENCIL,t.width,t.height),G.framebufferRenderbuffer(G.FRAMEBUFFER,G.DEPTH_STENCIL_ATTACHMENT,G.RENDERBUFFER,e)):G.renderbufferStorage(G.RENDERBUFFER,G.RGBA4,t.width,t.height)}function L(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?G.NEAREST:G.LINEAR}function P(e){if(e===THREE.RepeatWrapping)return G.REPEAT;if(e===THREE.ClampToEdgeWrapping)return G.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return G.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return G.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return G.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return G.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return G.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return G.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return G.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return G.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return G.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return G.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return G.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return G.BYTE;if(e===THREE.ShortType)return G.SHORT;if(e===THREE.UnsignedShortType)return G.UNSIGNED_SHORT;if(e===THREE.IntType)return G.INT;if(e===THREE.UnsignedIntType)return G.UNSIGNED_INT;if(e===THREE.FloatType)return G.FLOAT;if(e===THREE.AlphaFormat)return G.ALPHA;if(e===THREE.RGBFormat)return G.RGB;if(e===THREE.RGBAFormat)return G.RGBA;if(e===THREE.LuminanceFormat)return G.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return G.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return G.FUNC_ADD;if(e===THREE.SubtractEquation)return G.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return G.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return G.ZERO;if(e===THREE.OneFactor)return G.ONE;if(e===THREE.SrcColorFactor)return G.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return G.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return G.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return G.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return G.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return G.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return G.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return G.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return G.SRC_ALPHA_SATURATE;if(void 0!==q){if(e===THREE.RGB_S3TC_DXT1_Format)return q.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return q.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return q.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return q.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION),e=e||{};var D=void 0!==e.canvas?e.canvas:document.createElement("canvas"),F=void 0!==e.context?e.context:null,U=void 0!==e.precision?e.precision:"highp",V=void 0!==e.alpha?e.alpha:!1,z=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,B=void 0!==e.antialias?e.antialias:!1,N=void 0!==e.stencil?e.stencil:!0,O=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,I=new THREE.Color(0),k=0;this.domElement=D,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var G,W,j,X,q,Y=this,K=[],Z=0,Q=null,J=null,$=-1,et=null,tt=null,it=0,rt=-1,nt=-1,ot=-1,at=-1,st=-1,ht=-1,lt=-1,ct=-1,ut=null,pt=null,ft=null,dt=null,Et=0,mt=0,gt=D.width,Tt=D.height,vt=0,yt=0,Rt=new Uint8Array(16),xt=new THREE.Frustum,Ht=new THREE.Matrix4,_t=new THREE.Matrix4,bt=new THREE.Vector3,wt=new THREE.Vector3,Mt=!0,St={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};!function(){try{var e={alpha:V,premultipliedAlpha:z,antialias:B,stencil:N,preserveDrawingBuffer:O};if(G=F||D.getContext("webgl",e)||D.getContext("experimental-webgl",e),null===G)throw"Error creating WebGL context."}catch(t){console.error(t)}W=G.getExtension("OES_texture_float"),G.getExtension("OES_texture_float_linear"),j=G.getExtension("OES_standard_derivatives"),X=G.getExtension("EXT_texture_filter_anisotropic")||G.getExtension("MOZ_EXT_texture_filter_anisotropic")||G.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),q=G.getExtension("WEBGL_compressed_texture_s3tc")||G.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||G.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),W||console.log("THREE.WebGLRenderer: Float textures not supported."),j||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),X||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),q||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),void 0===G.getShaderPrecisionFormat&&(G.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}(),G.clearColor(0,0,0,1),G.clearDepth(1),G.clearStencil(0),G.enable(G.DEPTH_TEST),G.depthFunc(G.LEQUAL),G.frontFace(G.CCW),G.cullFace(G.BACK),G.enable(G.CULL_FACE),G.enable(G.BLEND),G.blendEquation(G.FUNC_ADD),G.blendFunc(G.SRC_ALPHA,G.ONE_MINUS_SRC_ALPHA),G.viewport(Et,mt,gt,Tt),G.clearColor(I.r,I.g,I.b,k),this.context=G;var At=G.getParameter(G.MAX_TEXTURE_IMAGE_UNITS),Ct=G.getParameter(G.MAX_VERTEX_TEXTURE_IMAGE_UNITS);G.getParameter(G.MAX_TEXTURE_SIZE);var Lt=G.getParameter(G.MAX_CUBE_MAP_TEXTURE_SIZE),Pt=X?G.getParameter(X.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Dt=Ct>0,Ft=Dt&&W;q&&G.getParameter(G.COMPRESSED_TEXTURE_FORMATS);var Ut=G.getShaderPrecisionFormat(G.VERTEX_SHADER,G.HIGH_FLOAT),Vt=G.getShaderPrecisionFormat(G.VERTEX_SHADER,G.MEDIUM_FLOAT);G.getShaderPrecisionFormat(G.VERTEX_SHADER,G.LOW_FLOAT);var zt=G.getShaderPrecisionFormat(G.FRAGMENT_SHADER,G.HIGH_FLOAT),Bt=G.getShaderPrecisionFormat(G.FRAGMENT_SHADER,G.MEDIUM_FLOAT);G.getShaderPrecisionFormat(G.FRAGMENT_SHADER,G.LOW_FLOAT),G.getShaderPrecisionFormat(G.VERTEX_SHADER,G.HIGH_INT),G.getShaderPrecisionFormat(G.VERTEX_SHADER,G.MEDIUM_INT),G.getShaderPrecisionFormat(G.VERTEX_SHADER,G.LOW_INT),G.getShaderPrecisionFormat(G.FRAGMENT_SHADER,G.HIGH_INT),G.getShaderPrecisionFormat(G.FRAGMENT_SHADER,G.MEDIUM_INT),G.getShaderPrecisionFormat(G.FRAGMENT_SHADER,G.LOW_INT);var Nt=0<Ut.precision&&0<zt.precision,Ot=0<Vt.precision&&0<Bt.precision;"highp"!==U||Nt||(Ot?(U="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(U="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==U||Ot||(U="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return G},this.supportsVertexTextures=function(){return Dt},this.supportsFloatTextures=function(){return W},this.supportsStandardDerivatives=function(){return j},this.supportsCompressedTextureS3TC=function(){return q},this.getMaxAnisotropy=function(){return Pt},this.getPrecision=function(){return U},this.setSize=function(e,t,i){D.width=e*this.devicePixelRatio,D.height=t*this.devicePixelRatio,1!==this.devicePixelRatio&&!1!==i&&(D.style.width=e+"px",D.style.height=t+"px"),this.setViewport(0,0,e,t)},this.setViewport=function(e,t,i,r){Et=e*this.devicePixelRatio,mt=t*this.devicePixelRatio,gt=i*this.devicePixelRatio,Tt=r*this.devicePixelRatio,G.viewport(Et,mt,gt,Tt)},this.setScissor=function(e,t,i,r){G.scissor(e*this.devicePixelRatio,t*this.devicePixelRatio,i*this.devicePixelRatio,r*this.devicePixelRatio)},this.enableScissorTest=function(e){e?G.enable(G.SCISSOR_TEST):G.disable(G.SCISSOR_TEST)},this.setClearColor=function(e,t){I.set(e),k=void 0!==t?t:1,G.clearColor(I.r,I.g,I.b,k)},this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getClearColor=function(){return I},this.getClearAlpha=function(){return k},this.clear=function(e,t,i){var r=0;(void 0===e||e)&&(r|=G.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=G.DEPTH_BUFFER_BIT),(void 0===i||i)&&(r|=G.STENCIL_BUFFER_BIT),G.clear(r)},this.clearColor=function(){G.clear(G.COLOR_BUFFER_BIT)},this.clearDepth=function(){G.clear(G.DEPTH_BUFFER_BIT)},this.clearStencil=function(){G.clear(G.STENCIL_BUFFER_BIT)},this.clearTarget=function(e,t,i,r){this.setRenderTarget(e),this.clear(t,i,r)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){Q=null,$=et=ct=lt=ot=-1,Mt=!0,nt=rt=-1,this.shadowMapPlugin.update(e,t)};var It=function(e){if(e=e.target,e.removeEventListener("dispose",It),e.__webglInit=void 0,e instanceof THREE.BufferGeometry){var t,i=e.attributes;for(t in i)void 0!==i[t].buffer&&G.deleteBuffer(i[t].buffer);Y.info.memory.geometries--}else if(void 0!==e.geometryGroups)for(i in e.geometryGroups){if(t=e.geometryGroups[i],void 0!==t.numMorphTargets)for(var r=0,n=t.numMorphTargets;n>r;r++)G.deleteBuffer(t.__webglMorphTargetsBuffers[r]);if(void 0!==t.numMorphNormals)for(r=0,n=t.numMorphNormals;n>r;r++)G.deleteBuffer(t.__webglMorphNormalsBuffers[r]);jt(t)}else jt(e)},kt=function(e){e=e.target,e.removeEventListener("dispose",kt),e.image&&e.image.__webglTextureCube?G.deleteTexture(e.image.__webglTextureCube):e.__webglInit&&(e.__webglInit=!1,G.deleteTexture(e.__webglTexture)),Y.info.memory.textures--},Gt=function(e){if(e=e.target,e.removeEventListener("dispose",Gt),e&&e.__webglTexture)if(G.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)G.deleteFramebuffer(e.__webglFramebuffer[t]),G.deleteRenderbuffer(e.__webglRenderbuffer[t]);else G.deleteFramebuffer(e.__webglFramebuffer),G.deleteRenderbuffer(e.__webglRenderbuffer);Y.info.memory.textures--},Wt=function(e){e=e.target,e.removeEventListener("dispose",Wt),Xt(e)},jt=function(e){if(void 0!==e.__webglVertexBuffer&&G.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&G.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&G.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&G.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&G.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&G.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&G.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&G.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&G.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&G.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&G.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)G.deleteBuffer(e.__webglCustomAttributesList[t].buffer);Y.info.memory.geometries--},Xt=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var i,r,n=!1;for(e=0,i=K.length;i>e;e++)if(r=K[e],r.program===t){r.usedTimes--,0===r.usedTimes&&(n=!0);break}if(!0===n){for(n=[],e=0,i=K.length;i>e;e++)r=K[e],r.program!==t&&n.push(r);K=n,G.deleteProgram(t),Y.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,i){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=G.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=G.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=G.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=G.createBuffer()),e.hasPositions&&(G.bindBuffer(G.ARRAY_BUFFER,e.__webglVertexBuffer),G.bufferData(G.ARRAY_BUFFER,e.positionArray,G.DYNAMIC_DRAW),G.enableVertexAttribArray(t.attributes.position),G.vertexAttribPointer(t.attributes.position,3,G.FLOAT,!1,0,0)),e.hasNormals){if(G.bindBuffer(G.ARRAY_BUFFER,e.__webglNormalBuffer),i.shading===THREE.FlatShading){var r,n,o,a,s,h,l,c,u,p,f,d=3*e.count;for(f=0;d>f;f+=9)p=e.normalArray,r=p[f],n=p[f+1],o=p[f+2],a=p[f+3],h=p[f+4],c=p[f+5],s=p[f+6],l=p[f+7],u=p[f+8],r=(r+a+s)/3,n=(n+h+l)/3,o=(o+c+u)/3,p[f]=r,p[f+1]=n,p[f+2]=o,p[f+3]=r,p[f+4]=n,p[f+5]=o,p[f+6]=r,p[f+7]=n,p[f+8]=o}G.bufferData(G.ARRAY_BUFFER,e.normalArray,G.DYNAMIC_DRAW),G.enableVertexAttribArray(t.attributes.normal),G.vertexAttribPointer(t.attributes.normal,3,G.FLOAT,!1,0,0)}e.hasUvs&&i.map&&(G.bindBuffer(G.ARRAY_BUFFER,e.__webglUvBuffer),G.bufferData(G.ARRAY_BUFFER,e.uvArray,G.DYNAMIC_DRAW),G.enableVertexAttribArray(t.attributes.uv),G.vertexAttribPointer(t.attributes.uv,2,G.FLOAT,!1,0,0)),e.hasColors&&i.vertexColors!==THREE.NoColors&&(G.bindBuffer(G.ARRAY_BUFFER,e.__webglColorBuffer),G.bufferData(G.ARRAY_BUFFER,e.colorArray,G.DYNAMIC_DRAW),G.enableVertexAttribArray(t.attributes.color),G.vertexAttribPointer(t.attributes.color,3,G.FLOAT,!1,0,0)),G.drawArrays(G.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,r,n,o){if(!1!==r.visible){var l,c,u,p;if(l=R(e,t,i,r,o),e=l.attributes,t=n.attributes,i=!1,l=16777215*n.id+2*l.id+(r.wireframe?1:0),l!==et&&(et=l,i=!0),i&&h(),o instanceof THREE.Mesh)if(o=t.index){n=n.offsets,1<n.length&&(i=!0);for(var f=0,d=n.length;d>f;f++){var E=n[f].index;if(i){for(c in e)u=e[c],l=t[c],u>=0&&(l?(p=l.itemSize,G.bindBuffer(G.ARRAY_BUFFER,l.buffer),s(u),G.vertexAttribPointer(u,p,G.FLOAT,!1,0,E*p*4)):r.defaultAttributeValues&&(2===r.defaultAttributeValues[c].length?G.vertexAttrib2fv(u,r.defaultAttributeValues[c]):3===r.defaultAttributeValues[c].length&&G.vertexAttrib3fv(u,r.defaultAttributeValues[c])));G.bindBuffer(G.ELEMENT_ARRAY_BUFFER,o.buffer)}G.drawElements(G.TRIANGLES,n[f].count,G.UNSIGNED_SHORT,2*n[f].start),Y.info.render.calls++,Y.info.render.vertices+=n[f].count,Y.info.render.faces+=n[f].count/3}}else{if(i)for(c in e)"index"!==c&&(u=e[c],l=t[c],u>=0&&(l?(p=l.itemSize,G.bindBuffer(G.ARRAY_BUFFER,l.buffer),s(u),G.vertexAttribPointer(u,p,G.FLOAT,!1,0,0)):r.defaultAttributeValues&&r.defaultAttributeValues[c]&&(2===r.defaultAttributeValues[c].length?G.vertexAttrib2fv(u,r.defaultAttributeValues[c]):3===r.defaultAttributeValues[c].length&&G.vertexAttrib3fv(u,r.defaultAttributeValues[c]))));r=n.attributes.position,G.drawArrays(G.TRIANGLES,0,r.array.length/3),Y.info.render.calls++,Y.info.render.vertices+=r.array.length/3,Y.info.render.faces+=r.array.length/3/3}else if(o instanceof THREE.ParticleSystem){if(i)for(c in e)u=e[c],l=t[c],u>=0&&(l?(p=l.itemSize,G.bindBuffer(G.ARRAY_BUFFER,l.buffer),s(u),G.vertexAttribPointer(u,p,G.FLOAT,!1,0,0)):r.defaultAttributeValues&&r.defaultAttributeValues[c]&&(2===r.defaultAttributeValues[c].length?G.vertexAttrib2fv(u,r.defaultAttributeValues[c]):3===r.defaultAttributeValues[c].length&&G.vertexAttrib3fv(u,r.defaultAttributeValues[c])));r=t.position,G.drawArrays(G.POINTS,0,r.array.length/3),Y.info.render.calls++,Y.info.render.points+=r.array.length/3}else if(o instanceof THREE.Line)if(c=o.type===THREE.LineStrip?G.LINE_STRIP:G.LINES,b(r.linewidth),o=t.index)for(n=n.offsets,1<n.length&&(i=!0),f=0,d=n.length;d>f;f++)E=n[f].index,i&&(a(r,e,t,E),G.bindBuffer(G.ELEMENT_ARRAY_BUFFER,o.buffer)),G.drawElements(G.LINES,n[f].count,G.UNSIGNED_SHORT,2*n[f].start),Y.info.render.calls++,Y.info.render.vertices+=n[f].count;else i&&a(r,e,t,0),r=t.position,G.drawArrays(c,0,r.array.length/3),Y.info.render.calls++,Y.info.render.points+=r.array.length}},this.renderBuffer=function(e,t,i,r,n,o){if(!1!==r.visible){var a,l;if(i=R(e,t,i,r,o),e=i.attributes,t=!1,i=16777215*n.id+2*i.id+(r.wireframe?1:0),i!==et&&(et=i,t=!0),t&&h(),!r.morphTargets&&0<=e.position)t&&(G.bindBuffer(G.ARRAY_BUFFER,n.__webglVertexBuffer),s(e.position),G.vertexAttribPointer(e.position,3,G.FLOAT,!1,0,0));else if(o.morphTargetBase){if(i=r.program.attributes,-1!==o.morphTargetBase&&0<=i.position?(G.bindBuffer(G.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[o.morphTargetBase]),s(i.position),G.vertexAttribPointer(i.position,3,G.FLOAT,!1,0,0)):0<=i.position&&(G.bindBuffer(G.ARRAY_BUFFER,n.__webglVertexBuffer),s(i.position),G.vertexAttribPointer(i.position,3,G.FLOAT,!1,0,0)),o.morphTargetForcedOrder.length){var u=0;for(l=o.morphTargetForcedOrder,a=o.morphTargetInfluences;u<r.numSupportedMorphTargets&&u<l.length;)0<=i["morphTarget"+u]&&(G.bindBuffer(G.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[l[u]]),s(i["morphTarget"+u]),G.vertexAttribPointer(i["morphTarget"+u],3,G.FLOAT,!1,0,0)),0<=i["morphNormal"+u]&&r.morphNormals&&(G.bindBuffer(G.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[l[u]]),s(i["morphNormal"+u]),G.vertexAttribPointer(i["morphNormal"+u],3,G.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[u]=a[l[u]],u++}else{l=[],a=o.morphTargetInfluences;var p,f=a.length;for(p=0;f>p;p++)u=a[p],u>0&&l.push([u,p]);for(l.length>r.numSupportedMorphTargets?(l.sort(c),l.length=r.numSupportedMorphTargets):l.length>r.numSupportedMorphNormals?l.sort(c):0===l.length&&l.push([0,0]),u=0;u<r.numSupportedMorphTargets;)l[u]?(p=l[u][1],0<=i["morphTarget"+u]&&(G.bindBuffer(G.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[p]),s(i["morphTarget"+u]),G.vertexAttribPointer(i["morphTarget"+u],3,G.FLOAT,!1,0,0)),0<=i["morphNormal"+u]&&r.morphNormals&&(G.bindBuffer(G.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[p]),s(i["morphNormal"+u]),G.vertexAttribPointer(i["morphNormal"+u],3,G.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[u]=a[p]):o.__webglMorphTargetInfluences[u]=0,u++}null!==r.program.uniforms.morphTargetInfluences&&G.uniform1fv(r.program.uniforms.morphTargetInfluences,o.__webglMorphTargetInfluences)}if(t){if(n.__webglCustomAttributesList)for(a=0,l=n.__webglCustomAttributesList.length;l>a;a++)i=n.__webglCustomAttributesList[a],0<=e[i.buffer.belongsToAttribute]&&(G.bindBuffer(G.ARRAY_BUFFER,i.buffer),s(e[i.buffer.belongsToAttribute]),G.vertexAttribPointer(e[i.buffer.belongsToAttribute],i.size,G.FLOAT,!1,0,0));0<=e.color&&(0<o.geometry.colors.length||0<o.geometry.faces.length?(G.bindBuffer(G.ARRAY_BUFFER,n.__webglColorBuffer),s(e.color),G.vertexAttribPointer(e.color,3,G.FLOAT,!1,0,0)):r.defaultAttributeValues&&G.vertexAttrib3fv(e.color,r.defaultAttributeValues.color)),0<=e.normal&&(G.bindBuffer(G.ARRAY_BUFFER,n.__webglNormalBuffer),s(e.normal),G.vertexAttribPointer(e.normal,3,G.FLOAT,!1,0,0)),0<=e.tangent&&(G.bindBuffer(G.ARRAY_BUFFER,n.__webglTangentBuffer),s(e.tangent),G.vertexAttribPointer(e.tangent,4,G.FLOAT,!1,0,0)),0<=e.uv&&(o.geometry.faceVertexUvs[0]?(G.bindBuffer(G.ARRAY_BUFFER,n.__webglUVBuffer),s(e.uv),G.vertexAttribPointer(e.uv,2,G.FLOAT,!1,0,0)):r.defaultAttributeValues&&G.vertexAttrib2fv(e.uv,r.defaultAttributeValues.uv)),0<=e.uv2&&(o.geometry.faceVertexUvs[1]?(G.bindBuffer(G.ARRAY_BUFFER,n.__webglUV2Buffer),s(e.uv2),G.vertexAttribPointer(e.uv2,2,G.FLOAT,!1,0,0)):r.defaultAttributeValues&&G.vertexAttrib2fv(e.uv2,r.defaultAttributeValues.uv2)),r.skinning&&0<=e.skinIndex&&0<=e.skinWeight&&(G.bindBuffer(G.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),s(e.skinIndex),G.vertexAttribPointer(e.skinIndex,4,G.FLOAT,!1,0,0),G.bindBuffer(G.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),s(e.skinWeight),G.vertexAttribPointer(e.skinWeight,4,G.FLOAT,!1,0,0)),0<=e.lineDistance&&(G.bindBuffer(G.ARRAY_BUFFER,n.__webglLineDistanceBuffer),s(e.lineDistance),G.vertexAttribPointer(e.lineDistance,1,G.FLOAT,!1,0,0))
}o instanceof THREE.Mesh?(r.wireframe?(b(r.wireframeLinewidth),t&&G.bindBuffer(G.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),G.drawElements(G.LINES,n.__webglLineCount,G.UNSIGNED_SHORT,0)):(t&&G.bindBuffer(G.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),G.drawElements(G.TRIANGLES,n.__webglFaceCount,G.UNSIGNED_SHORT,0)),Y.info.render.calls++,Y.info.render.vertices+=n.__webglFaceCount,Y.info.render.faces+=n.__webglFaceCount/3):o instanceof THREE.Line?(o=o.type===THREE.LineStrip?G.LINE_STRIP:G.LINES,b(r.linewidth),G.drawArrays(o,0,n.__webglLineCount),Y.info.render.calls++):o instanceof THREE.ParticleSystem&&(G.drawArrays(G.POINTS,0,n.__webglParticleCount),Y.info.render.calls++,Y.info.render.points+=n.__webglParticleCount)}},this.render=function(e,t,i,r){if(!1==t instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var n,o,a,s,h=e.__lights,c=e.fog;for($=-1,Mt=!0,!0===e.autoUpdate&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),Ht.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),xt.setFromMatrix(Ht),this.autoUpdateObjects&&this.initWebGLObjects(e),u(this.renderPluginsPre,e,t),Y.info.render.calls=0,Y.info.render.vertices=0,Y.info.render.faces=0,Y.info.render.points=0,this.setRenderTarget(i),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),s=e.__webglObjects,r=0,n=s.length;n>r;r++)if(o=s[r],a=o.object,o.id=r,o.render=!1,a.visible&&(!(a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem)||!a.frustumCulled||xt.intersectsObject(a))){var d=a;d._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,d.matrixWorld),d._normalMatrix.getNormalMatrix(d._modelViewMatrix);var d=o,E=d.object,m=d.buffer,g=E.geometry,E=E.material;E instanceof THREE.MeshFaceMaterial?(E=E.materials[g instanceof THREE.BufferGeometry?0:m.materialIndex],E.transparent?(d.transparent=E,d.opaque=null):(d.opaque=E,d.transparent=null)):E&&(E.transparent?(d.transparent=E,d.opaque=null):(d.opaque=E,d.transparent=null)),o.render=!0,!0===this.sortObjects&&(null!==a.renderDepth?o.z=a.renderDepth:(bt.setFromMatrixPosition(a.matrixWorld),bt.applyProjection(Ht),o.z=bt.z))}for(this.sortObjects&&s.sort(l),s=e.__webglObjectsImmediate,r=0,n=s.length;n>r;r++)o=s[r],a=o.object,a.visible&&(a._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,a.matrixWorld),a._normalMatrix.getNormalMatrix(a._modelViewMatrix),a=o.object.material,a.transparent?(o.transparent=a,o.opaque=null):(o.opaque=a,o.transparent=null));e.overrideMaterial?(r=e.overrideMaterial,this.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst),this.setDepthTest(r.depthTest),this.setDepthWrite(r.depthWrite),w(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),p(e.__webglObjects,!1,"",t,h,c,!0,r),f(e.__webglObjectsImmediate,"",t,h,c,!1,r)):(r=null,this.setBlending(THREE.NoBlending),p(e.__webglObjects,!0,"opaque",t,h,c,!1,r),f(e.__webglObjectsImmediate,"opaque",t,h,c,!1,r),p(e.__webglObjects,!1,"transparent",t,h,c,!0,r),f(e.__webglObjectsImmediate,"transparent",t,h,c,!0,r)),u(this.renderPluginsPost,e,t),i&&i.generateMipmaps&&i.minFilter!==THREE.NearestFilter&&i.minFilter!==THREE.LinearFilter&&(i instanceof THREE.WebGLRenderTargetCube?(G.bindTexture(G.TEXTURE_CUBE_MAP,i.__webglTexture),G.generateMipmap(G.TEXTURE_CUBE_MAP),G.bindTexture(G.TEXTURE_CUBE_MAP,null)):(G.bindTexture(G.TEXTURE_2D,i.__webglTexture),G.generateMipmap(G.TEXTURE_2D),G.bindTexture(G.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)}},this.renderImmediateObject=function(e,t,i,r,n){var o=R(e,t,i,r,n);et=-1,Y.setMaterialFaces(r),n.immediateRenderCallback?n.immediateRenderCallback(o,G,xt):n.render(function(e){Y.renderBufferImmediate(e,o,r)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;)d(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)T(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,a=e.__webglObjects.length;a>t;t++){var s=e.__webglObjects[t].object;void 0===s.__webglInit&&(void 0!==s.__webglActive&&T(s,e),d(s,e));var h=s,l=h.geometry,u=void 0,p=void 0,f=void 0;if(l instanceof THREE.BufferGeometry){var E=G.DYNAMIC_DRAW,v=l.attributes,y=void 0,R=void 0;for(y in v)R=v[y],R.needsUpdate&&("index"===y?(G.bindBuffer(G.ELEMENT_ARRAY_BUFFER,R.buffer),G.bufferData(G.ELEMENT_ARRAY_BUFFER,R.array,E)):(G.bindBuffer(G.ARRAY_BUFFER,R.buffer),G.bufferData(G.ARRAY_BUFFER,R.array,E)),R.needsUpdate=!1)}else if(h instanceof THREE.Mesh){for(var x=0,H=l.geometryGroupsList.length;H>x;x++)if(u=l.geometryGroupsList[x],f=r(h,u),l.buffersNeedUpdate&&i(u,h),p=f.attributes&&m(f),l.verticesNeedUpdate||l.morphTargetsNeedUpdate||l.elementsNeedUpdate||l.uvsNeedUpdate||l.normalsNeedUpdate||l.colorsNeedUpdate||l.tangentsNeedUpdate||p){var _=u,b=h,w=G.DYNAMIC_DRAW,M=!l.dynamic,S=f;if(_.__inittedArrays){var A=n(S),C=S.vertexColors?S.vertexColors:!1,L=o(S),P=A===THREE.SmoothShading,D=void 0,F=void 0,U=void 0,V=void 0,z=void 0,B=void 0,N=void 0,O=void 0,I=void 0,k=void 0,W=void 0,j=void 0,X=void 0,q=void 0,Y=void 0,K=void 0,Z=void 0,Q=void 0,J=void 0,$=void 0,et=void 0,tt=void 0,it=void 0,rt=void 0,nt=void 0,ot=void 0,at=void 0,st=void 0,ht=void 0,lt=void 0,ct=void 0,ut=void 0,pt=void 0,ft=void 0,dt=void 0,Et=void 0,mt=void 0,gt=void 0,Tt=void 0,vt=void 0,yt=0,Rt=0,xt=0,wt=0,Mt=0,St=0,At=0,Ct=0,Lt=0,Pt=0,Dt=0,Ft=0,Ut=void 0,Vt=_.__vertexArray,zt=_.__uvArray,Bt=_.__uv2Array,Nt=_.__normalArray,Ot=_.__tangentArray,It=_.__colorArray,kt=_.__skinIndexArray,Gt=_.__skinWeightArray,Wt=_.__morphTargetsArrays,jt=_.__morphNormalsArrays,Xt=_.__webglCustomAttributesList,qt=void 0,Yt=_.__faceArray,Kt=_.__lineArray,Zt=b.geometry,Qt=Zt.elementsNeedUpdate,Jt=Zt.uvsNeedUpdate,$t=Zt.normalsNeedUpdate,ei=Zt.tangentsNeedUpdate,ti=Zt.colorsNeedUpdate,ii=Zt.morphTargetsNeedUpdate,ri=Zt.vertices,ni=_.faces3,oi=Zt.faces,ai=Zt.faceVertexUvs[0],si=Zt.faceVertexUvs[1],hi=Zt.skinIndices,li=Zt.skinWeights,ci=Zt.morphTargets,ui=Zt.morphNormals;if(Zt.verticesNeedUpdate){for(D=0,F=ni.length;F>D;D++)V=oi[ni[D]],j=ri[V.a],X=ri[V.b],q=ri[V.c],Vt[Rt]=j.x,Vt[Rt+1]=j.y,Vt[Rt+2]=j.z,Vt[Rt+3]=X.x,Vt[Rt+4]=X.y,Vt[Rt+5]=X.z,Vt[Rt+6]=q.x,Vt[Rt+7]=q.y,Vt[Rt+8]=q.z,Rt+=9;G.bindBuffer(G.ARRAY_BUFFER,_.__webglVertexBuffer),G.bufferData(G.ARRAY_BUFFER,Vt,w)}if(ii)for(dt=0,Et=ci.length;Et>dt;dt++){for(D=Dt=0,F=ni.length;F>D;D++)Tt=ni[D],V=oi[Tt],j=ci[dt].vertices[V.a],X=ci[dt].vertices[V.b],q=ci[dt].vertices[V.c],mt=Wt[dt],mt[Dt]=j.x,mt[Dt+1]=j.y,mt[Dt+2]=j.z,mt[Dt+3]=X.x,mt[Dt+4]=X.y,mt[Dt+5]=X.z,mt[Dt+6]=q.x,mt[Dt+7]=q.y,mt[Dt+8]=q.z,S.morphNormals&&(P?(vt=ui[dt].vertexNormals[Tt],Q=vt.a,J=vt.b,$=vt.c):$=J=Q=ui[dt].faceNormals[Tt],gt=jt[dt],gt[Dt]=Q.x,gt[Dt+1]=Q.y,gt[Dt+2]=Q.z,gt[Dt+3]=J.x,gt[Dt+4]=J.y,gt[Dt+5]=J.z,gt[Dt+6]=$.x,gt[Dt+7]=$.y,gt[Dt+8]=$.z),Dt+=9;G.bindBuffer(G.ARRAY_BUFFER,_.__webglMorphTargetsBuffers[dt]),G.bufferData(G.ARRAY_BUFFER,Wt[dt],w),S.morphNormals&&(G.bindBuffer(G.ARRAY_BUFFER,_.__webglMorphNormalsBuffers[dt]),G.bufferData(G.ARRAY_BUFFER,jt[dt],w))}if(li.length){for(D=0,F=ni.length;F>D;D++)V=oi[ni[D]],rt=li[V.a],nt=li[V.b],ot=li[V.c],Gt[Pt]=rt.x,Gt[Pt+1]=rt.y,Gt[Pt+2]=rt.z,Gt[Pt+3]=rt.w,Gt[Pt+4]=nt.x,Gt[Pt+5]=nt.y,Gt[Pt+6]=nt.z,Gt[Pt+7]=nt.w,Gt[Pt+8]=ot.x,Gt[Pt+9]=ot.y,Gt[Pt+10]=ot.z,Gt[Pt+11]=ot.w,at=hi[V.a],st=hi[V.b],ht=hi[V.c],kt[Pt]=at.x,kt[Pt+1]=at.y,kt[Pt+2]=at.z,kt[Pt+3]=at.w,kt[Pt+4]=st.x,kt[Pt+5]=st.y,kt[Pt+6]=st.z,kt[Pt+7]=st.w,kt[Pt+8]=ht.x,kt[Pt+9]=ht.y,kt[Pt+10]=ht.z,kt[Pt+11]=ht.w,Pt+=12;Pt>0&&(G.bindBuffer(G.ARRAY_BUFFER,_.__webglSkinIndicesBuffer),G.bufferData(G.ARRAY_BUFFER,kt,w),G.bindBuffer(G.ARRAY_BUFFER,_.__webglSkinWeightsBuffer),G.bufferData(G.ARRAY_BUFFER,Gt,w))}if(ti&&C){for(D=0,F=ni.length;F>D;D++)V=oi[ni[D]],N=V.vertexColors,O=V.color,3===N.length&&C===THREE.VertexColors?(et=N[0],tt=N[1],it=N[2]):it=tt=et=O,It[Lt]=et.r,It[Lt+1]=et.g,It[Lt+2]=et.b,It[Lt+3]=tt.r,It[Lt+4]=tt.g,It[Lt+5]=tt.b,It[Lt+6]=it.r,It[Lt+7]=it.g,It[Lt+8]=it.b,Lt+=9;Lt>0&&(G.bindBuffer(G.ARRAY_BUFFER,_.__webglColorBuffer),G.bufferData(G.ARRAY_BUFFER,It,w))}if(ei&&Zt.hasTangents){for(D=0,F=ni.length;F>D;D++)V=oi[ni[D]],I=V.vertexTangents,Y=I[0],K=I[1],Z=I[2],Ot[At]=Y.x,Ot[At+1]=Y.y,Ot[At+2]=Y.z,Ot[At+3]=Y.w,Ot[At+4]=K.x,Ot[At+5]=K.y,Ot[At+6]=K.z,Ot[At+7]=K.w,Ot[At+8]=Z.x,Ot[At+9]=Z.y,Ot[At+10]=Z.z,Ot[At+11]=Z.w,At+=12;G.bindBuffer(G.ARRAY_BUFFER,_.__webglTangentBuffer),G.bufferData(G.ARRAY_BUFFER,Ot,w)}if($t&&A){for(D=0,F=ni.length;F>D;D++)if(V=oi[ni[D]],z=V.vertexNormals,B=V.normal,3===z.length&&P)for(lt=0;3>lt;lt++)ut=z[lt],Nt[St]=ut.x,Nt[St+1]=ut.y,Nt[St+2]=ut.z,St+=3;else for(lt=0;3>lt;lt++)Nt[St]=B.x,Nt[St+1]=B.y,Nt[St+2]=B.z,St+=3;G.bindBuffer(G.ARRAY_BUFFER,_.__webglNormalBuffer),G.bufferData(G.ARRAY_BUFFER,Nt,w)}if(Jt&&ai&&L){for(D=0,F=ni.length;F>D;D++)if(U=ni[D],k=ai[U],void 0!==k)for(lt=0;3>lt;lt++)pt=k[lt],zt[xt]=pt.x,zt[xt+1]=pt.y,xt+=2;xt>0&&(G.bindBuffer(G.ARRAY_BUFFER,_.__webglUVBuffer),G.bufferData(G.ARRAY_BUFFER,zt,w))}if(Jt&&si&&L){for(D=0,F=ni.length;F>D;D++)if(U=ni[D],W=si[U],void 0!==W)for(lt=0;3>lt;lt++)ft=W[lt],Bt[wt]=ft.x,Bt[wt+1]=ft.y,wt+=2;wt>0&&(G.bindBuffer(G.ARRAY_BUFFER,_.__webglUV2Buffer),G.bufferData(G.ARRAY_BUFFER,Bt,w))}if(Qt){for(D=0,F=ni.length;F>D;D++)Yt[Mt]=yt,Yt[Mt+1]=yt+1,Yt[Mt+2]=yt+2,Mt+=3,Kt[Ct]=yt,Kt[Ct+1]=yt+1,Kt[Ct+2]=yt,Kt[Ct+3]=yt+2,Kt[Ct+4]=yt+1,Kt[Ct+5]=yt+2,Ct+=6,yt+=3;G.bindBuffer(G.ELEMENT_ARRAY_BUFFER,_.__webglFaceBuffer),G.bufferData(G.ELEMENT_ARRAY_BUFFER,Yt,w),G.bindBuffer(G.ELEMENT_ARRAY_BUFFER,_.__webglLineBuffer),G.bufferData(G.ELEMENT_ARRAY_BUFFER,Kt,w)}if(Xt)for(lt=0,ct=Xt.length;ct>lt;lt++)if(qt=Xt[lt],qt.__original.needsUpdate){if(Ft=0,1===qt.size){if(void 0===qt.boundTo||"vertices"===qt.boundTo)for(D=0,F=ni.length;F>D;D++)V=oi[ni[D]],qt.array[Ft]=qt.value[V.a],qt.array[Ft+1]=qt.value[V.b],qt.array[Ft+2]=qt.value[V.c],Ft+=3;else if("faces"===qt.boundTo)for(D=0,F=ni.length;F>D;D++)Ut=qt.value[ni[D]],qt.array[Ft]=Ut,qt.array[Ft+1]=Ut,qt.array[Ft+2]=Ut,Ft+=3}else if(2===qt.size){if(void 0===qt.boundTo||"vertices"===qt.boundTo)for(D=0,F=ni.length;F>D;D++)V=oi[ni[D]],j=qt.value[V.a],X=qt.value[V.b],q=qt.value[V.c],qt.array[Ft]=j.x,qt.array[Ft+1]=j.y,qt.array[Ft+2]=X.x,qt.array[Ft+3]=X.y,qt.array[Ft+4]=q.x,qt.array[Ft+5]=q.y,Ft+=6;else if("faces"===qt.boundTo)for(D=0,F=ni.length;F>D;D++)q=X=j=Ut=qt.value[ni[D]],qt.array[Ft]=j.x,qt.array[Ft+1]=j.y,qt.array[Ft+2]=X.x,qt.array[Ft+3]=X.y,qt.array[Ft+4]=q.x,qt.array[Ft+5]=q.y,Ft+=6}else if(3===qt.size){var pi;if(pi="c"===qt.type?["r","g","b"]:["x","y","z"],void 0===qt.boundTo||"vertices"===qt.boundTo)for(D=0,F=ni.length;F>D;D++)V=oi[ni[D]],j=qt.value[V.a],X=qt.value[V.b],q=qt.value[V.c],qt.array[Ft]=j[pi[0]],qt.array[Ft+1]=j[pi[1]],qt.array[Ft+2]=j[pi[2]],qt.array[Ft+3]=X[pi[0]],qt.array[Ft+4]=X[pi[1]],qt.array[Ft+5]=X[pi[2]],qt.array[Ft+6]=q[pi[0]],qt.array[Ft+7]=q[pi[1]],qt.array[Ft+8]=q[pi[2]],Ft+=9;else if("faces"===qt.boundTo)for(D=0,F=ni.length;F>D;D++)q=X=j=Ut=qt.value[ni[D]],qt.array[Ft]=j[pi[0]],qt.array[Ft+1]=j[pi[1]],qt.array[Ft+2]=j[pi[2]],qt.array[Ft+3]=X[pi[0]],qt.array[Ft+4]=X[pi[1]],qt.array[Ft+5]=X[pi[2]],qt.array[Ft+6]=q[pi[0]],qt.array[Ft+7]=q[pi[1]],qt.array[Ft+8]=q[pi[2]],Ft+=9;else if("faceVertices"===qt.boundTo)for(D=0,F=ni.length;F>D;D++)Ut=qt.value[ni[D]],j=Ut[0],X=Ut[1],q=Ut[2],qt.array[Ft]=j[pi[0]],qt.array[Ft+1]=j[pi[1]],qt.array[Ft+2]=j[pi[2]],qt.array[Ft+3]=X[pi[0]],qt.array[Ft+4]=X[pi[1]],qt.array[Ft+5]=X[pi[2]],qt.array[Ft+6]=q[pi[0]],qt.array[Ft+7]=q[pi[1]],qt.array[Ft+8]=q[pi[2]],Ft+=9}else if(4===qt.size)if(void 0===qt.boundTo||"vertices"===qt.boundTo)for(D=0,F=ni.length;F>D;D++)V=oi[ni[D]],j=qt.value[V.a],X=qt.value[V.b],q=qt.value[V.c],qt.array[Ft]=j.x,qt.array[Ft+1]=j.y,qt.array[Ft+2]=j.z,qt.array[Ft+3]=j.w,qt.array[Ft+4]=X.x,qt.array[Ft+5]=X.y,qt.array[Ft+6]=X.z,qt.array[Ft+7]=X.w,qt.array[Ft+8]=q.x,qt.array[Ft+9]=q.y,qt.array[Ft+10]=q.z,qt.array[Ft+11]=q.w,Ft+=12;else if("faces"===qt.boundTo)for(D=0,F=ni.length;F>D;D++)q=X=j=Ut=qt.value[ni[D]],qt.array[Ft]=j.x,qt.array[Ft+1]=j.y,qt.array[Ft+2]=j.z,qt.array[Ft+3]=j.w,qt.array[Ft+4]=X.x,qt.array[Ft+5]=X.y,qt.array[Ft+6]=X.z,qt.array[Ft+7]=X.w,qt.array[Ft+8]=q.x,qt.array[Ft+9]=q.y,qt.array[Ft+10]=q.z,qt.array[Ft+11]=q.w,Ft+=12;else if("faceVertices"===qt.boundTo)for(D=0,F=ni.length;F>D;D++)Ut=qt.value[ni[D]],j=Ut[0],X=Ut[1],q=Ut[2],qt.array[Ft]=j.x,qt.array[Ft+1]=j.y,qt.array[Ft+2]=j.z,qt.array[Ft+3]=j.w,qt.array[Ft+4]=X.x,qt.array[Ft+5]=X.y,qt.array[Ft+6]=X.z,qt.array[Ft+7]=X.w,qt.array[Ft+8]=q.x,qt.array[Ft+9]=q.y,qt.array[Ft+10]=q.z,qt.array[Ft+11]=q.w,Ft+=12;G.bindBuffer(G.ARRAY_BUFFER,qt.buffer),G.bufferData(G.ARRAY_BUFFER,qt.array,w)}M&&(delete _.__inittedArrays,delete _.__colorArray,delete _.__normalArray,delete _.__tangentArray,delete _.__uvArray,delete _.__uv2Array,delete _.__faceArray,delete _.__vertexArray,delete _.__lineArray,delete _.__skinIndexArray,delete _.__skinWeightArray)}}l.verticesNeedUpdate=!1,l.morphTargetsNeedUpdate=!1,l.elementsNeedUpdate=!1,l.uvsNeedUpdate=!1,l.normalsNeedUpdate=!1,l.colorsNeedUpdate=!1,l.tangentsNeedUpdate=!1,l.buffersNeedUpdate=!1,f.attributes&&g(f)}else if(h instanceof THREE.Line){if(f=r(h,l),p=f.attributes&&m(f),l.verticesNeedUpdate||l.colorsNeedUpdate||l.lineDistancesNeedUpdate||p){var fi=l,di=G.DYNAMIC_DRAW,Ei=void 0,mi=void 0,gi=void 0,Ti=void 0,vi=void 0,yi=void 0,Ri=fi.vertices,xi=fi.colors,Hi=fi.lineDistances,_i=Ri.length,bi=xi.length,wi=Hi.length,Mi=fi.__vertexArray,Si=fi.__colorArray,Ai=fi.__lineDistanceArray,Ci=fi.colorsNeedUpdate,Li=fi.lineDistancesNeedUpdate,Pi=fi.__webglCustomAttributesList,Di=void 0,Fi=void 0,Ui=void 0,Vi=void 0,zi=void 0,Bi=void 0;if(fi.verticesNeedUpdate){for(Ei=0;_i>Ei;Ei++)Ti=Ri[Ei],vi=3*Ei,Mi[vi]=Ti.x,Mi[vi+1]=Ti.y,Mi[vi+2]=Ti.z;G.bindBuffer(G.ARRAY_BUFFER,fi.__webglVertexBuffer),G.bufferData(G.ARRAY_BUFFER,Mi,di)}if(Ci){for(mi=0;bi>mi;mi++)yi=xi[mi],vi=3*mi,Si[vi]=yi.r,Si[vi+1]=yi.g,Si[vi+2]=yi.b;G.bindBuffer(G.ARRAY_BUFFER,fi.__webglColorBuffer),G.bufferData(G.ARRAY_BUFFER,Si,di)}if(Li){for(gi=0;wi>gi;gi++)Ai[gi]=Hi[gi];G.bindBuffer(G.ARRAY_BUFFER,fi.__webglLineDistanceBuffer),G.bufferData(G.ARRAY_BUFFER,Ai,di)}if(Pi)for(Di=0,Fi=Pi.length;Fi>Di;Di++)if(Bi=Pi[Di],Bi.needsUpdate&&(void 0===Bi.boundTo||"vertices"===Bi.boundTo)){if(vi=0,Vi=Bi.value.length,1===Bi.size)for(Ui=0;Vi>Ui;Ui++)Bi.array[Ui]=Bi.value[Ui];else if(2===Bi.size)for(Ui=0;Vi>Ui;Ui++)zi=Bi.value[Ui],Bi.array[vi]=zi.x,Bi.array[vi+1]=zi.y,vi+=2;else if(3===Bi.size)if("c"===Bi.type)for(Ui=0;Vi>Ui;Ui++)zi=Bi.value[Ui],Bi.array[vi]=zi.r,Bi.array[vi+1]=zi.g,Bi.array[vi+2]=zi.b,vi+=3;else for(Ui=0;Vi>Ui;Ui++)zi=Bi.value[Ui],Bi.array[vi]=zi.x,Bi.array[vi+1]=zi.y,Bi.array[vi+2]=zi.z,vi+=3;else if(4===Bi.size)for(Ui=0;Vi>Ui;Ui++)zi=Bi.value[Ui],Bi.array[vi]=zi.x,Bi.array[vi+1]=zi.y,Bi.array[vi+2]=zi.z,Bi.array[vi+3]=zi.w,vi+=4;G.bindBuffer(G.ARRAY_BUFFER,Bi.buffer),G.bufferData(G.ARRAY_BUFFER,Bi.array,di)}}l.verticesNeedUpdate=!1,l.colorsNeedUpdate=!1,l.lineDistancesNeedUpdate=!1,f.attributes&&g(f)}else if(h instanceof THREE.ParticleSystem){if(f=r(h,l),p=f.attributes&&m(f),l.verticesNeedUpdate||l.colorsNeedUpdate||h.sortParticles||p){var Ni=l,Oi=G.DYNAMIC_DRAW,Ii=h,ki=void 0,Gi=void 0,Wi=void 0,ji=void 0,Xi=void 0,qi=void 0,Yi=Ni.vertices,Ki=Yi.length,Zi=Ni.colors,Qi=Zi.length,Ji=Ni.__vertexArray,$i=Ni.__colorArray,er=Ni.__sortArray,tr=Ni.verticesNeedUpdate,ir=Ni.colorsNeedUpdate,rr=Ni.__webglCustomAttributesList,nr=void 0,or=void 0,ar=void 0,sr=void 0,hr=void 0,lr=void 0;if(Ii.sortParticles){for(_t.copy(Ht),_t.multiply(Ii.matrixWorld),ki=0;Ki>ki;ki++)Wi=Yi[ki],bt.copy(Wi),bt.applyProjection(_t),er[ki]=[bt.z,ki];for(er.sort(c),ki=0;Ki>ki;ki++)Wi=Yi[er[ki][1]],ji=3*ki,Ji[ji]=Wi.x,Ji[ji+1]=Wi.y,Ji[ji+2]=Wi.z;for(Gi=0;Qi>Gi;Gi++)ji=3*Gi,qi=Zi[er[Gi][1]],$i[ji]=qi.r,$i[ji+1]=qi.g,$i[ji+2]=qi.b;if(rr)for(nr=0,or=rr.length;or>nr;nr++)if(lr=rr[nr],void 0===lr.boundTo||"vertices"===lr.boundTo)if(ji=0,sr=lr.value.length,1===lr.size)for(ar=0;sr>ar;ar++)Xi=er[ar][1],lr.array[ar]=lr.value[Xi];else if(2===lr.size)for(ar=0;sr>ar;ar++)Xi=er[ar][1],hr=lr.value[Xi],lr.array[ji]=hr.x,lr.array[ji+1]=hr.y,ji+=2;else if(3===lr.size)if("c"===lr.type)for(ar=0;sr>ar;ar++)Xi=er[ar][1],hr=lr.value[Xi],lr.array[ji]=hr.r,lr.array[ji+1]=hr.g,lr.array[ji+2]=hr.b,ji+=3;else for(ar=0;sr>ar;ar++)Xi=er[ar][1],hr=lr.value[Xi],lr.array[ji]=hr.x,lr.array[ji+1]=hr.y,lr.array[ji+2]=hr.z,ji+=3;else if(4===lr.size)for(ar=0;sr>ar;ar++)Xi=er[ar][1],hr=lr.value[Xi],lr.array[ji]=hr.x,lr.array[ji+1]=hr.y,lr.array[ji+2]=hr.z,lr.array[ji+3]=hr.w,ji+=4}else{if(tr)for(ki=0;Ki>ki;ki++)Wi=Yi[ki],ji=3*ki,Ji[ji]=Wi.x,Ji[ji+1]=Wi.y,Ji[ji+2]=Wi.z;if(ir)for(Gi=0;Qi>Gi;Gi++)qi=Zi[Gi],ji=3*Gi,$i[ji]=qi.r,$i[ji+1]=qi.g,$i[ji+2]=qi.b;if(rr)for(nr=0,or=rr.length;or>nr;nr++)if(lr=rr[nr],lr.needsUpdate&&(void 0===lr.boundTo||"vertices"===lr.boundTo))if(sr=lr.value.length,ji=0,1===lr.size)for(ar=0;sr>ar;ar++)lr.array[ar]=lr.value[ar];else if(2===lr.size)for(ar=0;sr>ar;ar++)hr=lr.value[ar],lr.array[ji]=hr.x,lr.array[ji+1]=hr.y,ji+=2;else if(3===lr.size)if("c"===lr.type)for(ar=0;sr>ar;ar++)hr=lr.value[ar],lr.array[ji]=hr.r,lr.array[ji+1]=hr.g,lr.array[ji+2]=hr.b,ji+=3;else for(ar=0;sr>ar;ar++)hr=lr.value[ar],lr.array[ji]=hr.x,lr.array[ji+1]=hr.y,lr.array[ji+2]=hr.z,ji+=3;else if(4===lr.size)for(ar=0;sr>ar;ar++)hr=lr.value[ar],lr.array[ji]=hr.x,lr.array[ji+1]=hr.y,lr.array[ji+2]=hr.z,lr.array[ji+3]=hr.w,ji+=4}if((tr||Ii.sortParticles)&&(G.bindBuffer(G.ARRAY_BUFFER,Ni.__webglVertexBuffer),G.bufferData(G.ARRAY_BUFFER,Ji,Oi)),(ir||Ii.sortParticles)&&(G.bindBuffer(G.ARRAY_BUFFER,Ni.__webglColorBuffer),G.bufferData(G.ARRAY_BUFFER,$i,Oi)),rr)for(nr=0,or=rr.length;or>nr;nr++)lr=rr[nr],(lr.needsUpdate||Ii.sortParticles)&&(G.bindBuffer(G.ARRAY_BUFFER,lr.buffer),G.bufferData(G.ARRAY_BUFFER,lr.array,Oi))}l.verticesNeedUpdate=!1,l.colorsNeedUpdate=!1,f.attributes&&g(f)}}},this.initMaterial=function(e,t,i,r){var n,o,a,s;e.addEventListener("dispose",Wt);var h,l,c,u,p;if(e instanceof THREE.MeshDepthMaterial?p="depth":e instanceof THREE.MeshNormalMaterial?p="normal":e instanceof THREE.MeshBasicMaterial?p="basic":e instanceof THREE.MeshLambertMaterial?p="lambert":e instanceof THREE.MeshPhongMaterial?p="phong":e instanceof THREE.LineBasicMaterial?p="basic":e instanceof THREE.LineDashedMaterial?p="dashed":e instanceof THREE.ParticleSystemMaterial&&(p="particle_basic"),p){var f=THREE.ShaderLib[p];e.uniforms=THREE.UniformsUtils.clone(f.uniforms),e.vertexShader=f.vertexShader,e.fragmentShader=f.fragmentShader}var d=n=0,E=0,m=f=0;for(o=t.length;o>m;m++)a=t[m],a.onlyShadow||!1===a.visible||(a instanceof THREE.DirectionalLight&&n++,a instanceof THREE.PointLight&&d++,a instanceof THREE.SpotLight&&E++,a instanceof THREE.HemisphereLight&&f++);for(o=d,a=E,s=f,E=f=0,d=t.length;d>E;E++)m=t[E],m.castShadow&&(m instanceof THREE.SpotLight&&f++,m instanceof THREE.DirectionalLight&&!m.shadowCascade&&f++);u=f,Ft&&r&&r.useVertexTexture?c=1024:(t=G.getParameter(G.MAX_VERTEX_UNIFORM_VECTORS),t=Math.floor((t-20)/4),void 0!==r&&r instanceof THREE.SkinnedMesh&&(t=Math.min(r.bones.length,t),t<r.bones.length&&console.warn("WebGLRenderer: too many bones - "+r.bones.length+", this GPU supports just "+t+" (try OpenGL instead of ANGLE)")),c=t);e:{E=e.fragmentShader,d=e.vertexShader,f=e.uniforms,t=e.attributes,m=e.defines,i={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:i,useFog:e.fog,fogExp:i instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:c,useVertexTexture:Ft&&r&&r.useVertexTexture,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:n,maxPointLights:o,maxSpotLights:a,maxHemiLights:s,maxShadows:u,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow&&u>0,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},r=e.index0AttributeName;var g,T,v;n=[],p?n.push(p):(n.push(E),n.push(d));for(T in m)n.push(T),n.push(m[T]);for(g in i)n.push(g),n.push(i[g]);for(p=n.join(),g=0,T=K.length;T>g;g++)if(n=K[g],n.code===p){n.usedTimes++,l=n.program;break e}g="SHADOWMAP_TYPE_BASIC",i.shadowMapType===THREE.PCFShadowMap?g="SHADOWMAP_TYPE_PCF":i.shadowMapType===THREE.PCFSoftShadowMap&&(g="SHADOWMAP_TYPE_PCF_SOFT"),T=[];for(v in m)n=m[v],!1!==n&&(n="#define "+v+" "+n,T.push(n));n=T.join("\n"),v=G.createProgram(),T=["precision "+U+" float;","precision "+U+" int;",n,Dt?"#define VERTEX_TEXTURES":"",Y.gammaInput?"#define GAMMA_INPUT":"",Y.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,"#define MAX_BONES "+i.maxBones,i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.vertexColors?"#define USE_COLOR":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals?"#define USE_MORPHNORMALS":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+g:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n"),g=["precision "+U+" float;","precision "+U+" int;",i.bumpMap||i.normalMap?"#extension GL_OES_standard_derivatives : enable":"",n,"#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"",Y.gammaInput?"#define GAMMA_INPUT":"",Y.gammaOutput?"#define GAMMA_OUTPUT":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.vertexColors?"#define USE_COLOR":"",i.metal?"#define METAL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+g:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"),T=S("vertex",T+d),g=S("fragment",g+E),G.attachShader(v,T),G.attachShader(v,g),void 0!==r&&G.bindAttribLocation(v,0,r),G.linkProgram(v),!1===G.getProgramParameter(v,G.LINK_STATUS)&&(console.error("Could not initialise shader"),console.error("gl.VALIDATE_STATUS",G.getProgramParameter(v,G.VALIDATE_STATUS)),console.error("gl.getError()",G.getError())),""!==G.getProgramInfoLog(v)&&console.error("gl.getProgramInfoLog()",G.getProgramInfoLog(v)),G.deleteShader(g),G.deleteShader(T),v.uniforms={},v.attributes={};var y;g="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" "),i.useVertexTexture?(g.push("boneTexture"),g.push("boneTextureWidth"),g.push("boneTextureHeight")):g.push("boneGlobalMatrices");for(y in f)g.push(y);for(y=g,g=0,T=y.length;T>g;g++)f=y[g],v.uniforms[f]=G.getUniformLocation(v,f);for(g="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" "),y=0;y<i.maxMorphTargets;y++)g.push("morphTarget"+y);for(y=0;y<i.maxMorphNormals;y++)g.push("morphNormal"+y);for(l in t)g.push(l);for(l=g,y=0,t=l.length;t>y;y++)g=l[y],v.attributes[g]=G.getAttribLocation(v,g);v.id=Z++,K.push({program:v,code:p,usedTimes:1}),Y.info.memory.programs=K.length,l=v}if(e.program=l,y=e.program.attributes,e.morphTargets)for(e.numSupportedMorphTargets=0,t="morphTarget",l=0;l<this.maxMorphTargets;l++)v=t+l,0<=y[v]&&e.numSupportedMorphTargets++;if(e.morphNormals)for(e.numSupportedMorphNormals=0,t="morphNormal",l=0;l<this.maxMorphNormals;l++)v=t+l,0<=y[v]&&e.numSupportedMorphNormals++;e.uniformsList=[];for(h in e.uniforms)e.uniformsList.push([e.uniforms[h],h])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?G.disable(G.CULL_FACE):(t===THREE.FrontFaceDirectionCW?G.frontFace(G.CW):G.frontFace(G.CCW),e===THREE.CullFaceBack?G.cullFace(G.BACK):e===THREE.CullFaceFront?G.cullFace(G.FRONT):G.cullFace(G.FRONT_AND_BACK),G.enable(G.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide;e=e.side===THREE.BackSide,rt!==t&&(t?G.disable(G.CULL_FACE):G.enable(G.CULL_FACE),rt=t),nt!==e&&(e?G.frontFace(G.CW):G.frontFace(G.CCW),nt=e)},this.setDepthTest=function(e){lt!==e&&(e?G.enable(G.DEPTH_TEST):G.disable(G.DEPTH_TEST),lt=e)},this.setDepthWrite=function(e){ct!==e&&(G.depthMask(e),ct=e)},this.setBlending=function(e,t,i,r){e!==ot&&(e===THREE.NoBlending?G.disable(G.BLEND):e===THREE.AdditiveBlending?(G.enable(G.BLEND),G.blendEquation(G.FUNC_ADD),G.blendFunc(G.SRC_ALPHA,G.ONE)):e===THREE.SubtractiveBlending?(G.enable(G.BLEND),G.blendEquation(G.FUNC_ADD),G.blendFunc(G.ZERO,G.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(G.enable(G.BLEND),G.blendEquation(G.FUNC_ADD),G.blendFunc(G.ZERO,G.SRC_COLOR)):e===THREE.CustomBlending?G.enable(G.BLEND):(G.enable(G.BLEND),G.blendEquationSeparate(G.FUNC_ADD,G.FUNC_ADD),G.blendFuncSeparate(G.SRC_ALPHA,G.ONE_MINUS_SRC_ALPHA,G.ONE,G.ONE_MINUS_SRC_ALPHA)),ot=e),e===THREE.CustomBlending?(t!==at&&(G.blendEquation(P(t)),at=t),(i!==st||r!==ht)&&(G.blendFunc(P(i),P(r)),st=i,ht=r)):ht=st=at=null},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",kt),e.__webglTexture=G.createTexture(),Y.info.memory.textures++),G.activeTexture(G.TEXTURE0+t),G.bindTexture(G.TEXTURE_2D,e.__webglTexture),G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,e.flipY),G.pixelStorei(G.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),G.pixelStorei(G.UNPACK_ALIGNMENT,e.unpackAlignment);var i=e.image,r=THREE.Math.isPowerOfTwo(i.width)&&THREE.Math.isPowerOfTwo(i.height),n=P(e.format),o=P(e.type);A(G.TEXTURE_2D,e,r);var a=e.mipmaps;if(e instanceof THREE.DataTexture)if(0<a.length&&r){for(var s=0,h=a.length;h>s;s++)i=a[s],G.texImage2D(G.TEXTURE_2D,s,n,i.width,i.height,0,n,o,i.data);e.generateMipmaps=!1}else G.texImage2D(G.TEXTURE_2D,0,n,i.width,i.height,0,n,o,i.data);else if(e instanceof THREE.CompressedTexture)for(s=0,h=a.length;h>s;s++)i=a[s],e.format!==THREE.RGBAFormat?G.compressedTexImage2D(G.TEXTURE_2D,s,n,i.width,i.height,0,i.data):G.texImage2D(G.TEXTURE_2D,s,n,i.width,i.height,0,n,o,i.data);else if(0<a.length&&r){for(s=0,h=a.length;h>s;s++)i=a[s],G.texImage2D(G.TEXTURE_2D,s,n,n,o,i);e.generateMipmaps=!1}else G.texImage2D(G.TEXTURE_2D,0,n,n,o,e.image);e.generateMipmaps&&r&&G.generateMipmap(G.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else G.activeTexture(G.TEXTURE0+t),G.bindTexture(G.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",Gt),e.__webglTexture=G.createTexture(),Y.info.memory.textures++;var i=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height),r=P(e.format),n=P(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],G.bindTexture(G.TEXTURE_CUBE_MAP,e.__webglTexture),A(G.TEXTURE_CUBE_MAP,e,i);for(var o=0;6>o;o++){e.__webglFramebuffer[o]=G.createFramebuffer(),e.__webglRenderbuffer[o]=G.createRenderbuffer(),G.texImage2D(G.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,r,e.width,e.height,0,r,n,null);var a=e,s=G.TEXTURE_CUBE_MAP_POSITIVE_X+o;G.bindFramebuffer(G.FRAMEBUFFER,e.__webglFramebuffer[o]),G.framebufferTexture2D(G.FRAMEBUFFER,G.COLOR_ATTACHMENT0,s,a.__webglTexture,0),C(e.__webglRenderbuffer[o],e)}i&&G.generateMipmap(G.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=G.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:G.createRenderbuffer(),G.bindTexture(G.TEXTURE_2D,e.__webglTexture),A(G.TEXTURE_2D,e,i),G.texImage2D(G.TEXTURE_2D,0,r,e.width,e.height,0,r,n,null),r=G.TEXTURE_2D,G.bindFramebuffer(G.FRAMEBUFFER,e.__webglFramebuffer),G.framebufferTexture2D(G.FRAMEBUFFER,G.COLOR_ATTACHMENT0,r,e.__webglTexture,0),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?G.framebufferRenderbuffer(G.FRAMEBUFFER,G.DEPTH_ATTACHMENT,G.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&G.framebufferRenderbuffer(G.FRAMEBUFFER,G.DEPTH_STENCIL_ATTACHMENT,G.RENDERBUFFER,e.__webglRenderbuffer):C(e.__webglRenderbuffer,e),i&&G.generateMipmap(G.TEXTURE_2D);t?G.bindTexture(G.TEXTURE_CUBE_MAP,null):G.bindTexture(G.TEXTURE_2D,null),G.bindRenderbuffer(G.RENDERBUFFER,null),G.bindFramebuffer(G.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,i=e.width,e=e.height,n=r=0):(t=null,i=gt,e=Tt,r=Et,n=mt),t!==J&&(G.bindFramebuffer(G.FRAMEBUFFER,t),G.viewport(r,n,i,e),J=t),vt=i,yt=e},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,i){this.width=e,this.height=t,i=i||{},this.wrapS=void 0!==i.wrapS?i.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i.wrapT?i.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==i.magFilter?i.magFilter:THREE.LinearFilter,this.minFilter=void 0!==i.minFilter?i.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==i.format?i.format:THREE.RGBAFormat,this.type=void 0!==i.type?i.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==i.depthBuffer?i.depthBuffer:!0,this.stencilBuffer=void 0!==i.stencilBuffer?i.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,i){THREE.WebGLRenderTarget.call(this,e,t,i),this.activeCubeFace=0
},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.material=this.color=null,this.uvs=[[]],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.rotation=this.z=this.y=this.x=0,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(e,t,i){var r,n,o=e.vertices.length,a=t instanceof THREE.Mesh?t.geometry:t,s=e.vertices,h=a.vertices,l=e.faces,c=a.faces;e=e.faceVertexUvs[0],a=a.faceVertexUvs[0],void 0===i&&(i=0),t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,n=(new THREE.Matrix3).getNormalMatrix(r)),t=0;for(var u=h.length;u>t;t++){var p=h[t].clone();r&&p.applyMatrix4(r),s.push(p)}for(t=0,u=c.length;u>t;t++){var f,d,p=c[t],E=p.vertexNormals,m=p.vertexColors;for(f=new THREE.Face3(p.a+o,p.b+o,p.c+o),f.normal.copy(p.normal),n&&f.normal.applyMatrix3(n).normalize(),s=0,h=E.length;h>s;s++)d=E[s].clone(),n&&d.applyMatrix3(n).normalize(),f.vertexNormals.push(d);for(f.color.copy(p.color),s=0,h=m.length;h>s;s++)d=m[s],f.vertexColors.push(d.clone());f.materialIndex=p.materialIndex+i,f.centroid.copy(p.centroid),r&&f.centroid.applyMatrix4(r),l.push(f)}for(t=0,u=a.length;u>t;t++){for(i=a[t],r=[],s=0,h=i.length;h>s;s++)r.push(new THREE.Vector2(i[s].x,i[s].y));e.push(r)}},randomPointInTriangle:function(){var e=new THREE.Vector3;return function(t,i,r){var n=new THREE.Vector3,o=THREE.Math.random16(),a=THREE.Math.random16();o+a>1&&(o=1-o,a=1-a);var s=1-o-a;return n.copy(t),n.multiplyScalar(o),e.copy(i),e.multiplyScalar(a),n.add(e),e.copy(r),e.multiplyScalar(s),n.add(e),n}}(),randomPointInFace:function(e,t){return THREE.GeometryUtils.randomPointInTriangle(t.vertices[e.a],t.vertices[e.b],t.vertices[e.c])},randomPointsInGeometry:function(e,t){function i(e){function t(i,r){if(i>r)return i;var n=i+Math.floor((r-i)/2);return p[n]>e?t(i,n-1):p[n]<e?t(n+1,r):n}return t(0,p.length-1)}var r,n,o,a,s,h=e.faces,l=e.vertices,c=h.length,u=0,p=[];for(n=0;c>n;n++)r=h[n],o=l[r.a],a=l[r.b],s=l[r.c],r._area=THREE.GeometryUtils.triangleArea(o,a,s),u+=r._area,p[n]=u;for(r=[],n=0;t>n;n++)l=THREE.Math.random16()*u,l=i(l),r[n]=THREE.GeometryUtils.randomPointInFace(h[l],e,!0);return r},triangleArea:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r,n){return e.subVectors(r,i),t.subVectors(n,i),e.cross(t),.5*e.length()}}(),center:function(e){e.computeBoundingBox();var t=e.boundingBox,i=new THREE.Vector3;return i.addVectors(t.min,t.max),i.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(i.x,i.y,i.z)),e.computeBoundingBox(),i},triangulateQuads:function(e){var t,i,r,n,o=[],a=[];for(t=0,i=e.faceVertexUvs.length;i>t;t++)a[t]=[];for(t=0,i=e.faces.length;i>t;t++)for(o.push(e.faces[t]),r=0,n=e.faceVertexUvs.length;n>r;r++)a[r].push(e.faceVertexUvs[r][t]);e.faces=o,e.faceVertexUvs=a,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(e,t,i,r){r=new THREE.ImageLoader,r.crossOrigin=this.crossOrigin;var n=new THREE.Texture(void 0,t);return t=r.load(e,function(){n.needsUpdate=!0,i&&i(n)}),n.image=t,n.sourceFile=e,n},loadCompressedTexture:function(e,t,i,r){var n=new THREE.CompressedTexture;n.mapping=t;var o=new XMLHttpRequest;return o.onload=function(){var e=THREE.ImageUtils.parseDDS(o.response,!0);n.format=e.format,n.mipmaps=e.mipmaps,n.image.width=e.width,n.image.height=e.height,n.generateMipmaps=!1,n.needsUpdate=!0,i&&i(n)},o.onerror=r,o.open("GET",e,!0),o.responseType="arraybuffer",o.send(null),n},loadTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.Texture;o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1,t=0;for(var a=e.length;a>t;++t){var s=new Image;n[t]=s,s.onload=function(){n.loadCount+=1,6===n.loadCount&&(o.needsUpdate=!0,i&&i(o))},s.onerror=r,s.crossOrigin=this.crossOrigin,s.src=e[t]}return o},loadCompressedTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.CompressedTexture;if(o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1,o.generateMipmaps=!1,t=function(e,t){return function(){var r=THREE.ImageUtils.parseDDS(e.response,!0);t.format=r.format,t.mipmaps=r.mipmaps,t.width=r.width,t.height=r.height,n.loadCount+=1,6===n.loadCount&&(o.format=r.format,o.needsUpdate=!0,i&&i(o))}},e instanceof Array)for(var a=0,s=e.length;s>a;++a){var h={};n[a]=h;var l=new XMLHttpRequest;l.onload=t(l,h),l.onerror=r,h=e[a],l.open("GET",h,!0),l.responseType="arraybuffer",l.send(null)}else l=new XMLHttpRequest,l.onload=function(){var e=THREE.ImageUtils.parseDDS(l.response,!0);if(e.isCubemap){for(var t=e.mipmaps.length/e.mipmapCount,r=0;t>r;r++){n[r]={mipmaps:[]};for(var a=0;a<e.mipmapCount;a++)n[r].mipmaps.push(e.mipmaps[r*e.mipmapCount+a]),n[r].format=e.format,n[r].width=e.width,n[r].height=e.height}o.format=e.format,o.needsUpdate=!0,i&&i(o)}},l.onerror=r,l.open("GET",e,!0),l.responseType="arraybuffer",l.send(null);return o},loadDDSTexture:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.CompressedTexture;o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1,o.generateMipmaps=!1;var a=new XMLHttpRequest;return a.onload=function(){var e=THREE.ImageUtils.parseDDS(a.response,!0);if(e.isCubemap)for(var t=e.mipmaps.length/e.mipmapCount,r=0;t>r;r++){n[r]={mipmaps:[]};for(var s=0;s<e.mipmapCount;s++)n[r].mipmaps.push(e.mipmaps[r*e.mipmapCount+s]),n[r].format=e.format,n[r].width=e.width,n[r].height=e.height}else o.image.width=e.width,o.image.height=e.height,o.mipmaps=e.mipmaps;o.format=e.format,o.needsUpdate=!0,i&&i(o)},a.onerror=r,a.open("GET",e,!0),a.responseType="arraybuffer",a.send(null),o},parseDDS:function(e,t){function i(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function r(e,t,i,r){var n=i*r*4;e=new Uint8Array(e,t,n);for(var n=new Uint8Array(n),o=t=0,a=0;r>a;a++)for(var s=0;i>s;s++){var h=e[o];o++;var l=e[o];o++;var c=e[o];o++;var u=e[o];o++,n[t]=c,t++,n[t]=l,t++,n[t]=h,t++,n[t]=u,t++}return n}var n={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},o=i("DXT1"),a=i("DXT3"),s=i("DXT5"),h=new Int32Array(e,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),n;if(4&!h[20])return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),n;var l=h[21],c=!1;switch(l){case o:o=8,n.format=THREE.RGB_S3TC_DXT1_Format;break;case a:o=16,n.format=THREE.RGBA_S3TC_DXT3_Format;break;case s:o=16,n.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(!(32==h[22]&&16711680&h[23]&&65280&h[24]&&255&h[25]&&4278190080&h[26]))return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(255&l,l>>8&255,l>>16&255,l>>24&255)),n;c=!0,o=64,n.format=THREE.RGBAFormat}n.mipmapCount=1,131072&h[2]&&!1!==t&&(n.mipmapCount=Math.max(1,h[7])),n.isCubemap=512&h[28]?!0:!1,n.width=h[4],n.height=h[3];for(var h=h[1]+4,a=n.width,s=n.height,l=n.isCubemap?6:1,u=0;l>u;u++){for(var p=0;p<n.mipmapCount;p++){if(c)var f=r(e,h,a,s),d=f.length;else d=Math.max(4,a)/4*Math.max(4,s)/4*o,f=new Uint8Array(e,h,d);n.mipmaps.push({data:f,width:a,height:s}),h+=d,a=Math.max(.5*a,1),s=Math.max(.5*s,1)}a=n.width,s=n.height}return n},getNormalMap:function(e,t){var i=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t|=1;var r=e.width,n=e.height,o=document.createElement("canvas");o.width=r,o.height=n;var a=o.getContext("2d");a.drawImage(e,0,0);for(var s=a.getImageData(0,0,r,n).data,h=a.createImageData(r,n),l=h.data,c=0;r>c;c++)for(var u=0;n>u;u++){var p=0>u-1?0:u-1,f=u+1>n-1?n-1:u+1,d=0>c-1?0:c-1,E=c+1>r-1?r-1:c+1,m=[],g=[0,0,s[4*(u*r+c)]/255*t];for(m.push([-1,0,s[4*(u*r+d)]/255*t]),m.push([-1,-1,s[4*(p*r+d)]/255*t]),m.push([0,-1,s[4*(p*r+c)]/255*t]),m.push([1,-1,s[4*(p*r+E)]/255*t]),m.push([1,0,s[4*(u*r+E)]/255*t]),m.push([1,1,s[4*(f*r+E)]/255*t]),m.push([0,1,s[4*(f*r+c)]/255*t]),m.push([-1,1,s[4*(f*r+d)]/255*t]),p=[],d=m.length,f=0;d>f;f++){var E=m[f],T=m[(f+1)%d],E=[E[0]-g[0],E[1]-g[1],E[2]-g[2]],T=[T[0]-g[0],T[1]-g[1],T[2]-g[2]];p.push(i([E[1]*T[2]-E[2]*T[1],E[2]*T[0]-E[0]*T[2],E[0]*T[1]-E[1]*T[0]]))}for(m=[0,0,0],f=0;f<p.length;f++)m[0]+=p[f][0],m[1]+=p[f][1],m[2]+=p[f][2];m[0]/=p.length,m[1]/=p.length,m[2]/=p.length,g=4*(u*r+c),l[g]=(m[0]+1)/2*255|0,l[g+1]=(m[1]+1)/2*255|0,l[g+2]=255*m[2]|0,l[g+3]=255}return a.putImageData(h,0,0),o},generateDataTexture:function(e,t,i){var r=e*t,n=new Uint8Array(3*r),o=Math.floor(255*i.r),a=Math.floor(255*i.g);i=Math.floor(255*i.b);for(var s=0;r>s;s++)n[3*s]=o,n[3*s+1]=a,n[3*s+2]=i;return e=new THREE.DataTexture(n,e,t,THREE.RGBFormat),e.needsUpdate=!0,e}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var i=new THREE.Object3D,r=0,n=t.length;n>r;r++)i.add(new THREE.Mesh(e,t[r]));return i},detach:function(e,t,i){e.applyMatrix(t.matrixWorld),t.remove(e),i.add(e)},attach:function(e,t,i){var r=new THREE.Matrix4;r.getInverse(i.matrixWorld),e.applyMatrix(r),t.remove(e),i.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();return this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e,this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){var t=this.getFace(),i=this.size/t.resolution,r=0,n=String(e).split(""),o=n.length,a=[];for(e=0;o>e;e++){var s=new THREE.Path,s=this.extractGlyphPoints(n[e],t,i,r,s),r=r+s.offset;a.push(s.path)}return{paths:a,offset:r/2}},extractGlyphPoints:function(e,t,i,r,n){var o,a,s,h,l,c,u,p,f,d,E,m=[],g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o)for(t=g._cachedOutline||(g._cachedOutline=g.o.split(" ")),h=t.length,e=0;h>e;)switch(s=t[e++]){case"m":s=t[e++]*i+r,l=t[e++]*i,n.moveTo(s,l);break;case"l":s=t[e++]*i+r,l=t[e++]*i,n.lineTo(s,l);break;case"q":if(s=t[e++]*i+r,l=t[e++]*i,p=t[e++]*i+r,f=t[e++]*i,n.quadraticCurveTo(p,f,s,l),o=m[m.length-1])for(c=o.x,u=o.y,o=1,a=this.divisions;a>=o;o++){var T=o/a;THREE.Shape.Utils.b2(T,c,p,s),THREE.Shape.Utils.b2(T,u,f,l)}break;case"b":if(s=t[e++]*i+r,l=t[e++]*i,p=t[e++]*i+r,f=t[e++]*-i,d=t[e++]*i+r,E=t[e++]*-i,n.bezierCurveTo(s,l,p,f,d,E),o=m[m.length-1])for(c=o.x,u=o.y,o=1,a=this.divisions;a>=o;o++)T=o/a,THREE.Shape.Utils.b3(T,c,p,d,s),THREE.Shape.Utils.b3(T,u,f,E,l)}return{offset:g.ha*i,path:n}}}},THREE.FontUtils.generateShapes=function(e,t){t=t||{};var i=void 0!==t.curveSegments?t.curveSegments:4,r=void 0!==t.font?t.font:"helvetiker",n=void 0!==t.weight?t.weight:"normal",o=void 0!==t.style?t.style:"normal";for(THREE.FontUtils.size=void 0!==t.size?t.size:100,THREE.FontUtils.divisions=i,THREE.FontUtils.face=r,THREE.FontUtils.weight=n,THREE.FontUtils.style=o,i=THREE.FontUtils.drawText(e).paths,r=[],n=0,o=i.length;o>n;n++)Array.prototype.push.apply(r,i[n].toShapes());return r},function(e){var t=function(e){for(var t=e.length,i=0,r=t-1,n=0;t>n;r=n++)i+=e[r].x*e[n].y-e[n].x*e[r].y;return.5*i};return e.Triangulate=function(e,i){var r=e.length;if(3>r)return null;var n,o,a,s=[],h=[],l=[];if(0<t(e))for(o=0;r>o;o++)h[o]=o;else for(o=0;r>o;o++)h[o]=r-1-o;var c=2*r;for(o=r-1;r>2;){if(0>=c--){console.log("Warning, unable to triangulate polygon!");break}n=o,n>=r&&(n=0),o=n+1,o>=r&&(o=0),a=o+1,a>=r&&(a=0);var u;e:{var p=u=void 0,f=void 0,d=void 0,E=void 0,m=void 0,g=void 0,T=void 0,v=void 0,p=e[h[n]].x,f=e[h[n]].y,d=e[h[o]].x,E=e[h[o]].y,m=e[h[a]].x,g=e[h[a]].y;if(1e-10>(d-p)*(g-f)-(E-f)*(m-p))u=!1;else{var y=void 0,R=void 0,x=void 0,H=void 0,_=void 0,b=void 0,w=void 0,M=void 0,S=void 0,A=void 0,S=M=w=v=T=void 0,y=m-d,R=g-E,x=p-m,H=f-g,_=d-p,b=E-f;for(u=0;r>u;u++)if(T=e[h[u]].x,v=e[h[u]].y,!(T===p&&v===f||T===d&&v===E||T===m&&v===g)&&(w=T-p,M=v-f,S=T-d,A=v-E,T-=m,v-=g,S=y*A-R*S,w=_*M-b*w,M=x*v-H*T,S>=-1e-10&&M>=-1e-10&&w>=-1e-10)){u=!1;break e}u=!0}}if(u){for(s.push([e[h[n]],e[h[o]],e[h[a]]]),l.push([h[n],h[o],h[a]]),n=o,a=o+1;r>a;n++,a++)h[n]=h[a];r--,c=2*r}}return i?l:s},e.Triangulate.area=t,e}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){return e=this.getUtoTmapping(e),this.getPoint(e)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,i=[];for(t=0;e>=t;t++)i.push(this.getPoint(t/e));return i},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,i=[];for(t=0;e>=t;t++)i.push(this.getPointAt(t/e));return i},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,i,r=[],n=this.getPoint(0),o=0;for(r.push(0),i=1;e>=i;i++)t=this.getPoint(i/e),o+=t.distanceTo(n),r.push(o),n=t;return this.cacheArcLengths=r},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var i,r=this.getLengths(),n=0,o=r.length;i=t?t:e*r[o-1];for(var a,s=0,h=o-1;h>=s;)if(n=Math.floor(s+(h-s)/2),a=r[n]-i,0>a)s=n+1;else{if(!(a>0)){h=n;break}h=n-1}return n=h,r[n]==i?n/(o-1):(s=r[n],r=(n+(i-s)/(r[n+1]-s))/(o-1))},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4;return e+=1e-4,0>t&&(t=0),e>1&&(e=1),t=this.getPoint(t),this.getPoint(e).clone().sub(t).normalize()},THREE.Curve.prototype.getTangentAt=function(e){return e=this.getUtoTmapping(e),this.getTangent(e)},THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,i,r){return 2*(1-e)*(i-t)+2*e*(r-i)},tangentCubicBezier:function(e,t,i,r,n){return-3*t*(1-e)*(1-e)+3*i*(1-e)*(1-e)-6*e*i*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*n},tangentSpline:function(e){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,i,r,n){e=.5*(i-e),r=.5*(r-t);var o=n*n;return(2*t-2*i+e+r)*n*o+(-3*t+3*i-2*e-r)*o+e*n+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){var t=e*this.getLength(),i=this.getCurveLengths();for(e=0;e<i.length;){if(i[e]>=t)return t=i[e]-t,e=this.curves[e],t=1-t/e.getLength(),e.getPointAt(t);e++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],i=0,r=this.curves.length;for(e=0;r>e;e++)i+=this.curves[e].getLength(),t.push(i);return this.cacheLengths=t},THREE.CurvePath.prototype.getBoundingBox=function(){var e,t,i,r,n,o,a=this.getPoints();e=t=Number.NEGATIVE_INFINITY,r=n=Number.POSITIVE_INFINITY;var s,h,l,c,u=a[0]instanceof THREE.Vector3;for(c=u?new THREE.Vector3:new THREE.Vector2,h=0,l=a.length;l>h;h++)s=a[h],s.x>e?e=s.x:s.x<r&&(r=s.x),s.y>t?t=s.y:s.y<n&&(n=s.y),u&&(s.z>i?i=s.z:s.z<o&&(o=s.z)),c.add(s);return a={minX:r,minY:n,maxX:e,maxY:t,centroid:c.divideScalar(l)},u&&(a.maxZ=i,a.minZ=o),a},THREE.CurvePath.prototype.createPointsGeometry=function(e){return e=this.getPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){return e=this.getSpacedPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,i=0;i<e.length;i++)t.vertices.push(new THREE.Vector3(e[i].x,e[i].y,e[i].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var i,r,n=this.getPoints(e);for(t||(t=this.bends),i=0,r=t.length;r>i;i++)n=this.getWrapPoints(n,t[i]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var i,r,n=this.getSpacedPoints(e);for(t||(t=this.bends),i=0,r=t.length;r>i;i++)n=this.getWrapPoints(n,t[i]);return n},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var i,r,n,o,a,s,h=this.getBoundingBox();for(i=0,r=e.length;r>i;i++)n=e[i],o=n.x,a=n.y,s=o/h.maxX,s=t.getUtoTmapping(s,o),o=t.getPoint(s),s=t.getTangent(s),s.set(-s.y,s.x).multiplyScalar(a),n.x=o.x+s.x,n.y=o.y+s.y;return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;i>t;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,i=e.length;i>t;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(){var e=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:e})},THREE.Path.prototype.lineTo=function(e,t){var i=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=new THREE.LineCurve(new THREE.Vector2(r[r.length-2],r[r.length-1]),new THREE.Vector2(e,t));this.curves.push(r),this.actions.push({action:THREE.PathActions.LINE_TO,args:i})},THREE.Path.prototype.quadraticCurveTo=function(e,t,i,r){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args,o=new THREE.QuadraticBezierCurve(new THREE.Vector2(o[o.length-2],o[o.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r));this.curves.push(o),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(e,t,i,r,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r),new THREE.Vector2(n,o));this.curves.push(s),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=[new THREE.Vector2(i[i.length-2],i[i.length-1])];Array.prototype.push.apply(i,e),i=new THREE.SplineCurve(i),this.curves.push(i),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,i,r,n,o){var a=this.actions[this.actions.length-1].args;this.absarc(e+a[a.length-2],t+a[a.length-1],i,r,n,o)},THREE.Path.prototype.absarc=function(e,t,i,r,n,o){this.absellipse(e,t,i,i,r,n,o)},THREE.Path.prototype.ellipse=function(e,t,i,r,n,o,a){var s=this.actions[this.actions.length-1].args;this.absellipse(e+s[s.length-2],t+s[s.length-1],i,r,n,o,a)},THREE.Path.prototype.absellipse=function(e,t,i,r,n,o,a){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,i,r,n,o,a);this.curves.push(h),h=h.getPoint(1),s.push(h.x),s.push(h.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],i=0;e>i;i++)t.push(this.getPoint(i/e));return t},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var i,r,n,o,a,s,h,l,c,u,p,f,d,E=[];for(i=0,r=this.actions.length;r>i;i++)switch(n=this.actions[i],o=n.action,n=n.args,o){case THREE.PathActions.MOVE_TO:E.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.LINE_TO:E.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(a=n[2],s=n[3],c=n[0],u=n[1],0<E.length?(o=E[E.length-1],p=o.x,f=o.y):(o=this.actions[i-1].args,p=o[o.length-2],f=o[o.length-1]),n=1;e>=n;n++)d=n/e,o=THREE.Shape.Utils.b2(d,p,c,a),d=THREE.Shape.Utils.b2(d,f,u,s),E.push(new THREE.Vector2(o,d));break;case THREE.PathActions.BEZIER_CURVE_TO:for(a=n[4],s=n[5],c=n[0],u=n[1],h=n[2],l=n[3],0<E.length?(o=E[E.length-1],p=o.x,f=o.y):(o=this.actions[i-1].args,p=o[o.length-2],f=o[o.length-1]),n=1;e>=n;n++)d=n/e,o=THREE.Shape.Utils.b3(d,p,c,h,a),d=THREE.Shape.Utils.b3(d,f,u,l,s),E.push(new THREE.Vector2(o,d));break;case THREE.PathActions.CSPLINE_THRU:for(o=this.actions[i-1].args,d=[new THREE.Vector2(o[o.length-2],o[o.length-1])],o=e*n[0].length,d=d.concat(n[0]),d=new THREE.SplineCurve(d),n=1;o>=n;n++)E.push(d.getPointAt(n/o));break;case THREE.PathActions.ARC:for(a=n[0],s=n[1],u=n[2],h=n[3],o=n[4],c=!!n[5],p=o-h,f=2*e,n=1;f>=n;n++)d=n/f,c||(d=1-d),d=h+d*p,o=a+u*Math.cos(d),d=s+u*Math.sin(d),E.push(new THREE.Vector2(o,d));break;case THREE.PathActions.ELLIPSE:for(a=n[0],s=n[1],u=n[2],l=n[3],h=n[4],o=n[5],c=!!n[6],p=o-h,f=2*e,n=1;f>=n;n++)d=n/f,c||(d=1-d),d=h+d*p,o=a+u*Math.cos(d),d=s+l*Math.sin(d),E.push(new THREE.Vector2(o,d))}return i=E[E.length-1],1e-10>Math.abs(i.x-E[0].x)&&1e-10>Math.abs(i.y-E[0].y)&&E.splice(E.length-1,1),t&&E.push(E[0]),E},THREE.Path.prototype.toShapes=function(e){function t(e,t){for(var i=t.length,r=!1,n=i-1,o=0;i>o;n=o++){var a=t[n],s=t[o],h=s.x-a.x,l=s.y-a.y;if(1e-10<Math.abs(l)){if(0>l&&(a=t[o],h=-h,s=t[n],l=-l),!(e.y<a.y||e.y>s.y))if(e.y==a.y){if(e.x==a.x)return!0}else{if(n=l*(e.x-a.x)-h*(e.y-a.y),0==n)return!0;0>n||(r=!r)}}else if(e.y==a.y&&(s.x<=e.x&&e.x<=a.x||a.x<=e.x&&e.x<=s.x))return!0}return r}var i,r,n,o,a=[],s=new THREE.Path;for(i=0,r=this.actions.length;r>i;i++)n=this.actions[i],o=n.args,n=n.action,n==THREE.PathActions.MOVE_TO&&0!=s.actions.length&&(a.push(s),s=new THREE.Path),s[n].apply(s,o);if(0!=s.actions.length&&a.push(s),0==a.length)return[];var h,l,c;if(o=[],1==a.length)return l=a[0],c=new THREE.Shape,c.actions=l.actions,c.curves=l.curves,o.push(c),o;var u=!THREE.Shape.Utils.isClockWise(a[0].getPoints()),u=e?!u:u;c=[],s=[],n=[];var p,f=0;for(s[f]=void 0,n[f]=[],i=0,r=a.length;r>i;i++)l=a[i],p=l.getPoints(),h=THREE.Shape.Utils.isClockWise(p),(h=e?!h:h)?(!u&&s[f]&&f++,s[f]={s:new THREE.Shape,p:p},s[f].s.actions=l.actions,s[f].s.curves=l.curves,u&&f++,n[f]=[]):n[f].push({h:l,p:p[0]});if(1<s.length){for(i=!1,r=[],e=0,a=s.length;a>e;e++)c[e]=[];for(e=0,a=s.length;a>e;e++)for(l=n[e],h=0;h<l.length;h++){for(u=l[h],f=!0,p=0;p<s.length;p++)t(u.p,s[p].p)&&(e!=p&&r.push({froms:e,tos:p,hole:h}),f?(f=!1,c[p].push(u)):i=!0);f&&c[e].push(u)}0<r.length&&(i||(n=c))}for(i=0,r=s.length;r>i;i++)for(c=s[i].s,o.push(c),e=n[i],a=0,l=e.length;l>a;a++)c.holes.push(e[a].h);return o},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,i=this.holes.length,r=[];for(t=0;i>t;t++)r[t]=this.holes[t].getTransformedPoints(e,this.bends);return r},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,i=this.holes.length,r=[];for(t=0;i>t;t++)r[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return r},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={triangulateShape:function(e,t){function i(e,t,i){return e.x!=t.x?e.x<t.x?e.x<=i.x&&i.x<=t.x:t.x<=i.x&&i.x<=e.x:e.y<t.y?e.y<=i.y&&i.y<=t.y:t.y<=i.y&&i.y<=e.y}function r(e,t,r,n,o){var a=t.x-e.x,s=t.y-e.y,h=n.x-r.x,l=n.y-r.y,c=e.x-r.x,u=e.y-r.y,p=s*h-a*l,f=s*c-a*u;if(1e-10<Math.abs(p)){if(p>0){if(0>f||f>p)return[];if(h=l*c-h*u,0>h||h>p)return[]}else{if(f>0||p>f)return[];if(h=l*c-h*u,h>0||p>h)return[]}return 0==h?!o||0!=f&&f!=p?[e]:[]:h==p?!o||0!=f&&f!=p?[t]:[]:0==f?[r]:f==p?[n]:(o=h/p,[{x:e.x+o*a,y:e.y+o*s}])}return 0!=f||l*c!=h*u?[]:(s=0==a&&0==s,h=0==h&&0==l,s&&h?e.x!=r.x||e.y!=r.y?[]:[e]:s?i(r,n,e)?[e]:[]:h?i(e,t,r)?[r]:[]:(0!=a?(e.x<t.x?(a=e,h=e.x,s=t,e=t.x):(a=t,h=t.x,s=e,e=e.x),r.x<n.x?(t=r,p=r.x,l=n,r=n.x):(t=n,p=n.x,l=r,r=r.x)):(e.y<t.y?(a=e,h=e.y,s=t,e=t.y):(a=t,h=t.y,s=e,e=e.y),r.y<n.y?(t=r,p=r.y,l=n,r=n.y):(t=n,p=n.y,l=r,r=r.y)),p>=h?p>e?[]:e==p?o?[]:[t]:r>=e?[t,s]:[t,l]:h>r?[]:h==r?o?[]:[a]:r>=e?[a,s]:[a,l]))}function n(e,t,i,r){var n=t.x-e.x,o=t.y-e.y;t=i.x-e.x,i=i.y-e.y;var a=r.x-e.x;return r=r.y-e.y,e=n*i-o*t,n=n*r-o*a,1e-10<Math.abs(e)?(t=a*i-r*t,e>0?n>=0&&t>=0:n>=0||t>=0):n>0}var o,a,s,h,l,c={};for(s=e.concat(),o=0,a=t.length;a>o;o++)Array.prototype.push.apply(s,t[o]);for(o=0,a=s.length;a>o;o++)l=s[o].x+":"+s[o].y,void 0!==c[l]&&console.log("Duplicate point",l),c[l]=o;o=function(e,t){function i(e,t){var i=m.length-1,r=e-1;0>r&&(r=i);var o=e+1;return o>i&&(o=0),(i=n(m[e],m[r],m[o],s[t]))?(i=s.length-1,r=t-1,0>r&&(r=i),o=t+1,o>i&&(o=0),(i=n(s[t],s[r],s[o],m[e]))?!0:!1):!1}function o(e,t){var i,n;for(i=0;i<m.length;i++)if(n=i+1,n%=m.length,n=r(e,t,m[i],m[n],!0),0<n.length)return!0;return!1}function a(e,i){var n,o,a,s;for(n=0;n<g.length;n++)for(o=t[g[n]],a=0;a<o.length;a++)if(s=a+1,s%=o.length,s=r(e,i,o[a],o[s],!0),0<s.length)return!0;return!1}var s,h,l,c,u,p,f,d,E,m=e.concat(),g=[],T=[],v=0;for(h=t.length;h>v;v++)g.push(v);for(var y=2*g.length;0<g.length;){if(y--,0>y){console.log("Infinite Loop! Holes left:"+g.length+", Probably Hole outside Shape!");break}for(l=0;l<m.length;l++){for(c=m[l],h=-1,v=0;v<g.length;v++)if(u=g[v],p=c.x+":"+c.y+":"+u,void 0===T[p]){for(s=t[u],f=0;f<s.length;f++)if(u=s[f],i(l,f)&&!o(c,u)&&!a(c,u)){h=f,g.splice(v,1),u=m.slice(0,l+1),f=m.slice(l),d=s.slice(h),E=s.slice(0,h+1),m=u.concat(d).concat(E).concat(f);break}if(h>=0)break;T[p]=!0}if(h>=0)break}}return m}(e,t);var u=THREE.FontUtils.Triangulate(o,!1);for(o=0,a=u.length;a>o;o++)for(h=u[o],s=0;3>s;s++)l=h[s].x+":"+h[s].y,l=c[l],void 0!==l&&(h[s]=l);return u.concat()},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var i=1-e;return i*i*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,i,r){return this.b2p0(e,t)+this.b2p1(e,i)+this.b2p2(e,r)},b3p0:function(e,t){var i=1-e;return i*i*i*t},b3p1:function(e,t){var i=1-e;return 3*i*i*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,i,r,n){return this.b3p0(e,t)+this.b3p1(e,i)+this.b3p2(e,r)+this.b3p3(e,n)}},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,i){this.v0=e,this.v1=t,this.v2=i},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,e)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.CubicBezierCurve=function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,e)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t,i=new THREE.Vector2,r=[],n=this.points;return t=(n.length-1)*e,e=Math.floor(t),t-=e,r[0]=0==e?e:e-1,r[1]=e,r[2]=e>n.length-2?n.length-1:e+1,r[3]=e>n.length-3?n.length-1:e+2,i.x=THREE.Curve.Utils.interpolate(n[r[0]].x,n[r[1]].x,n[r[2]].x,n[r[3]].x,t),i.y=THREE.Curve.Utils.interpolate(n[r[0]].y,n[r[1]].y,n[r[2]].y,n[r[3]].y,t),i},THREE.EllipseCurve=function(e,t,i,r,n,o,a){this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t;return t=this.aEndAngle-this.aStartAngle,0>t&&(t+=2*Math.PI),t>2*Math.PI&&(t-=2*Math.PI),t=!0===this.aClockwise?this.aEndAngle+(1-e)*(2*Math.PI-t):this.aStartAngle+e*t,e=this.aX+this.xRadius*Math.cos(t),t=this.aY+this.yRadius*Math.sin(t),new THREE.Vector2(e,t)},THREE.ArcCurve=function(e,t,i,r,n,o){THREE.EllipseCurve.call(this,e,t,i,i,r,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,i){this.v0=e,this.v1=t,this.v2=i
},function(e){var t,i;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),i=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,i,e)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},function(e){var t,i;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),i=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,i,e)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,i=new THREE.Vector3,r=[],n=this.points;e*=n.length-1,t=Math.floor(e),e-=t,r[0]=0==t?t:t-1,r[1]=t,r[2]=t>n.length-2?n.length-1:t+1,r[3]=t>n.length-3?n.length-1:t+2,t=n[r[0]];var o=n[r[1]],a=n[r[2]],r=n[r[3]];return i.x=THREE.Curve.Utils.interpolate(t.x,o.x,a.x,r.x,e),i.y=THREE.Curve.Utils.interpolate(t.y,o.y,a.y,r.y,e),i.z=THREE.Curve.Utils.interpolate(t.z,o.z,a.z,r.z,e),i}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,i=new THREE.Vector3,r=[],n=this.points;return t=(n.length-0)*e,e=Math.floor(t),t-=e,e+=e>0?0:(Math.floor(Math.abs(e)/n.length)+1)*n.length,r[0]=(e-1)%n.length,r[1]=e%n.length,r[2]=(e+1)%n.length,r[3]=(e+2)%n.length,i.x=THREE.Curve.Utils.interpolate(n[r[0]].x,n[r[1]].x,n[r[2]].x,n[r[3]].x,t),i.y=THREE.Curve.Utils.interpolate(n[r[0]].y,n[r[1]].y,n[r[2]].y,n[r[3]].y,t),i.z=THREE.Curve.Utils.interpolate(n[r[0]].z,n[r[1]].z,n[r[2]].z,n[r[3]].z,t),i}),THREE.AnimationHandler=function(){var e=[],t={},i={update:function(t){for(var i=0;i<e.length;i++)e[i].update(t)},addToUpdate:function(t){-1===e.indexOf(t)&&e.push(t)},removeFromUpdate:function(t){t=e.indexOf(t),-1!==t&&e.splice(t,1)},add:function(e){if(void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e,!0!==e.initialized){for(var i=0;i<e.hierarchy.length;i++){for(var r=0;r<e.hierarchy[i].keys.length;r++)if(0>e.hierarchy[i].keys[r].time&&(e.hierarchy[i].keys[r].time=0),void 0!==e.hierarchy[i].keys[r].rot&&!(e.hierarchy[i].keys[r].rot instanceof THREE.Quaternion)){var n=e.hierarchy[i].keys[r].rot;e.hierarchy[i].keys[r].rot=new THREE.Quaternion(n[0],n[1],n[2],n[3])}if(e.hierarchy[i].keys.length&&void 0!==e.hierarchy[i].keys[0].morphTargets){for(n={},r=0;r<e.hierarchy[i].keys.length;r++)for(var o=0;o<e.hierarchy[i].keys[r].morphTargets.length;o++){var a=e.hierarchy[i].keys[r].morphTargets[o];n[a]=-1}for(e.hierarchy[i].usedMorphTargets=n,r=0;r<e.hierarchy[i].keys.length;r++){var s={};for(a in n){for(o=0;o<e.hierarchy[i].keys[r].morphTargets.length;o++)if(e.hierarchy[i].keys[r].morphTargets[o]===a){s[a]=e.hierarchy[i].keys[r].morphTargetsInfluences[o];break}o===e.hierarchy[i].keys[r].morphTargets.length&&(s[a]=0)}e.hierarchy[i].keys[r].morphTargetsInfluences=s}}for(r=1;r<e.hierarchy[i].keys.length;r++)e.hierarchy[i].keys[r].time===e.hierarchy[i].keys[r-1].time&&(e.hierarchy[i].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[i].keys.length;r++)e.hierarchy[i].keys[r].index=r}e.initialized=!0}},get:function(e){return"string"==typeof e?t[e]?t[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null):void 0},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var i=0;i<e.bones.length;i++)t.push(e.bones[i]);else r(e,t);return t}},r=function(e,t){t.push(e);for(var i=0;i<e.children.length;i++)r(e.children[i],t)};return i.LINEAR=0,i.CATMULLROM=1,i.CATMULLROM_FORWARD=2,i}(),THREE.Animation=function(e,t){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=this.isPaused=!0,this.interpolationType=THREE.AnimationHandler.LINEAR},THREE.Animation.prototype.play=function(e){this.currentTime=void 0!==e?e:0,!1===this.isPlaying&&(this.isPlaying=!0,this.reset(),this.update(0)),this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.reset=function(){for(var e=0,t=this.hierarchy.length;t>e;e++){var i=this.hierarchy[e];i.matrixAutoUpdate=!0,void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey={pos:0,rot:0,scl:0},i.animationCache.nextKey={pos:0,rot:0,scl:0},i.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix);var r=i.animationCache.prevKey,i=i.animationCache.nextKey;r.pos=this.data.hierarchy[e].keys[0],r.rot=this.data.hierarchy[e].keys[0],r.scl=this.data.hierarchy[e].keys[0],i.pos=this.getNextKeyWith("pos",e,1),i.rot=this.getNextKeyWith("rot",e,1),i.scl=this.getNextKeyWith("scl",e,1)}},THREE.Animation.prototype.update=function(){var e=[],t=new THREE.Vector3,i=function(e,t){var i,n,o,a,s,h,l=[],c=[];return i=(e.length-1)*t,n=Math.floor(i),i-=n,l[0]=0===n?n:n-1,l[1]=n,l[2]=n>e.length-2?n:n+1,l[3]=n>e.length-3?n:n+2,n=e[l[0]],a=e[l[1]],s=e[l[2]],h=e[l[3]],l=i*i,o=i*l,c[0]=r(n[0],a[0],s[0],h[0],i,l,o),c[1]=r(n[1],a[1],s[1],h[1],i,l,o),c[2]=r(n[2],a[2],s[2],h[2],i,l,o),c},r=function(e,t,i,r,n,o,a){return e=.5*(i-e),r=.5*(r-t),(2*(t-i)+e+r)*a+(-3*(t-i)-2*e-r)*o+e*n+t};return function(r){if(!1!==this.isPlaying){this.currentTime+=r*this.timeScale;var n;r=["pos","rot","scl"];var o=this.data.length;if(!0===this.loop&&this.currentTime>o)this.currentTime%=o,this.reset();else if(!1===this.loop&&this.currentTime>o)return this.stop(),void 0;this.currentTime=Math.min(this.currentTime,o);for(var o=0,a=this.hierarchy.length;a>o;o++)for(var s=this.hierarchy[o],h=s.animationCache,l=0;3>l;l++){n=r[l];var c=h.prevKey[n],u=h.nextKey[n];if(u.time<=this.currentTime){for(c=this.data.hierarchy[o].keys[0],u=this.getNextKeyWith(n,o,1);u.time<this.currentTime&&u.index>c.index;)c=u,u=this.getNextKeyWith(n,o,u.index+1);h.prevKey[n]=c,h.nextKey[n]=u}s.matrixAutoUpdate=!0,s.matrixWorldNeedsUpdate=!0;var p=(this.currentTime-c.time)/(u.time-c.time),f=c[n],d=u[n];0>p&&(p=0),p>1&&(p=1),"pos"===n?(n=s.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(n.x=f[0]+(d[0]-f[0])*p,n.y=f[1]+(d[1]-f[1])*p,n.z=f[2]+(d[2]-f[2])*p):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(e[0]=this.getPrevKeyWith("pos",o,c.index-1).pos,e[1]=f,e[2]=d,e[3]=this.getNextKeyWith("pos",o,u.index+1).pos,p=.33*p+.33,c=i(e,p),n.x=c[0],n.y=c[1],n.z=c[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(p=i(e,1.01*p),t.set(p[0],p[1],p[2]),t.sub(n),t.y=0,t.normalize(),n=Math.atan2(t.x,t.z),s.rotation.set(0,n,0)))):"rot"===n?THREE.Quaternion.slerp(f,d,s.quaternion,p):"scl"===n&&(n=s.scale,n.x=f[0]+(d[0]-f[0])*p,n.y=f[1]+(d[1]-f[1])*p,n.z=f[2]+(d[2]-f[2])*p)}}}}(),THREE.Animation.prototype.getNextKeyWith=function(e,t,i){var r=this.data.hierarchy[t].keys;for(i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i<r.length-1?i:r.length-1:i%r.length;i<r.length;i++)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,i){var r=this.data.hierarchy[t].keys;for(i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i>0?i:0:i>=0?i:i+r.length;i>=0;i--)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[r.length-1]},THREE.KeyFrameAnimation=function(e,t){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0;for(var i=0,r=this.hierarchy.length;r>i;i++){var n=this.data.hierarchy[i].sids,o=this.hierarchy[i];if(this.data.hierarchy[i].keys.length&&n){for(var a=0;a<n.length;a++){var s=n[a],h=this.getNextKeyWith(s,i,0);h&&h.apply(s)}o.matrixAutoUpdate=!1,this.data.hierarchy[i].node.updateMatrix(),o.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e){if(this.currentTime=void 0!==e?e:0,!1===this.isPlaying){this.isPlaying=!0;var t,i,r=this.hierarchy.length;for(e=0;r>e;e++)t=this.hierarchy[e],i=this.data.hierarchy[e],void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey=null,i.animationCache.nextKey=null,i.animationCache.originalMatrix=t instanceof THREE.Bone?t.skinMatrix:t.matrix),t=this.data.hierarchy[e].keys,t.length&&(i.animationCache.prevKey=t[0],i.animationCache.nextKey=t[1],this.startTime=Math.min(t[0].time,this.startTime),this.endTime=Math.max(t[t.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],i=this.data.hierarchy[e];if(void 0!==i.animationCache){var r=i.animationCache.originalMatrix;t instanceof THREE.Bone?(r.copy(t.skinMatrix),t.skinMatrix=r):(r.copy(t.matrix),t.matrix=r),delete i.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(!1!==this.isPlaying){this.currentTime+=e*this.timeScale,e=this.data.length,!0===this.loop&&this.currentTime>e&&(this.currentTime%=e),this.currentTime=Math.min(this.currentTime,e),e=0;for(var t=this.hierarchy.length;t>e;e++){var i=this.hierarchy[e],r=this.data.hierarchy[e],n=r.keys,r=r.animationCache;if(n.length){var o=r.prevKey,a=r.nextKey;if(a.time<=this.currentTime){for(;a.time<this.currentTime&&a.index>o.index;)o=a,a=n[o.index+1];r.prevKey=o,r.nextKey=a}a.time>=this.currentTime?o.interpolate(a,this.currentTime):o.interpolate(a,a.time),this.data.hierarchy[e].node.updateMatrix(),i.matrixWorldNeedsUpdate=!0}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,i){for(t=this.data.hierarchy[t].keys,i%=t.length;i<t.length;i++)if(t[i].hasTarget(e))return t[i];return t[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,i){for(t=this.data.hierarchy[t].keys,i=i>=0?i:i+t.length;i>=0;i--)if(t[i].hasTarget(e))return t[i];return t[t.length-1]},THREE.MorphAnimation=function(e){this.mesh=e,this.frames=e.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.isPlaying=!1},THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var e=0,t=0;return function(i){if(!1!==this.isPlaying){this.currentTime+=i,!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration),i=this.duration/this.frames;var r=Math.floor(this.currentTime/i);r!=t&&(this.mesh.morphTargetInfluences[e]=0,this.mesh.morphTargetInfluences[t]=1,this.mesh.morphTargetInfluences[r]=0,e=t,t=r),this.mesh.morphTargetInfluences[r]=this.currentTime%i/i,this.mesh.morphTargetInfluences[e]=1-this.mesh.morphTargetInfluences[r]}}}()},THREE.CubeCamera=function(e,t,i){THREE.Object3D.call(this);var r=new THREE.PerspectiveCamera(90,1,e,t);r.up.set(0,-1,0),r.lookAt(new THREE.Vector3(1,0,0)),this.add(r);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(-1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,1),o.lookAt(new THREE.Vector3(0,1,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,-1),a.lookAt(new THREE.Vector3(0,-1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(i,i,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var i=this.renderTarget,l=i.generateMipmaps;i.generateMipmaps=!1,i.activeCubeFace=0,e.render(t,r,i),i.activeCubeFace=1,e.render(t,n,i),i.activeCubeFace=2,e.render(t,o,i),i.activeCubeFace=3,e.render(t,a,i),i.activeCubeFace=4,e.render(t,s,i),i.generateMipmaps=l,i.activeCubeFace=5,e.render(t,h,i)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,i,r,n,o,a){THREE.Camera.call(this),this.fov=i,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,o,a),this.cameraP=new THREE.PerspectiveCamera(i,e/t,r,n),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.cameraP.aspect,t=(this.cameraP.near+this.cameraP.far)/2,t=Math.tan(this.fov/2)*t,e=2*t*e/2,t=t/this.zoom,e=e/this.zoom;this.cameraO.left=-e,this.cameraO.right=e,this.cameraO.top=t,this.cameraO.bottom=-t,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var i=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(i),i},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.BoxGeometry=function(e,t,i,r,n,o){function a(e,t,i,r,n,o,a,h){var l,c=s.widthSegments,u=s.heightSegments,p=n/2,f=o/2,d=s.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?l="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(l="y",u=s.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(l="x",c=s.depthSegments);var E=c+1,m=u+1,g=n/c,T=o/u,v=new THREE.Vector3;for(v[l]=a>0?1:-1,n=0;m>n;n++)for(o=0;E>o;o++){var y=new THREE.Vector3;y[e]=(o*g-p)*i,y[t]=(n*T-f)*r,y[l]=a,s.vertices.push(y)}for(n=0;u>n;n++)for(o=0;c>o;o++)f=o+E*n,e=o+E*(n+1),t=o+1+E*(n+1),i=o+1+E*n,r=new THREE.Vector2(o/c,1-n/u),a=new THREE.Vector2(o/c,1-(n+1)/u),l=new THREE.Vector2((o+1)/c,1-(n+1)/u),p=new THREE.Vector2((o+1)/c,1-n/u),f=new THREE.Face3(f+d,e+d,i+d),f.normal.copy(v),f.vertexNormals.push(v.clone(),v.clone(),v.clone()),f.materialIndex=h,s.faces.push(f),s.faceVertexUvs[0].push([r,a,p]),f=new THREE.Face3(e+d,t+d,i+d),f.normal.copy(v),f.vertexNormals.push(v.clone(),v.clone(),v.clone()),f.materialIndex=h,s.faces.push(f),s.faceVertexUvs[0].push([a.clone(),l,p.clone()])}THREE.Geometry.call(this);var s=this;this.width=e,this.height=t,this.depth=i,this.widthSegments=r||1,this.heightSegments=n||1,this.depthSegments=o||1,e=this.width/2,t=this.height/2,i=this.depth/2,a("z","y",-1,-1,this.depth,this.height,e,0),a("z","y",1,-1,this.depth,this.height,-e,1),a("x","z",1,1,this.width,this.depth,t,2),a("x","z",1,-1,this.width,this.depth,-t,3),a("x","y",1,-1,this.width,this.height,i,4),a("x","y",-1,-1,this.width,this.height,-i,5),this.computeCentroids(),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(e,t,i,r){THREE.Geometry.call(this),this.radius=e=e||50,this.segments=t=void 0!==t?Math.max(3,t):8,this.thetaStart=i=void 0!==i?i:0,this.thetaLength=r=void 0!==r?r:2*Math.PI;var n,o=[];n=new THREE.Vector3;var a=new THREE.Vector2(.5,.5);for(this.vertices.push(n),o.push(a),n=0;t>=n;n++){var s=new THREE.Vector3,h=i+n/t*r;s.x=e*Math.cos(h),s.y=e*Math.sin(h),this.vertices.push(s),o.push(new THREE.Vector2((s.x/e+1)/2,(s.y/e+1)/2))}for(i=new THREE.Vector3(0,0,1),n=1;t>=n;n++)this.faces.push(new THREE.Face3(n,n+1,0,[i.clone(),i.clone(),i.clone()])),this.faceVertexUvs[0].push([o[n].clone(),o[n+1].clone(),a.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=THREE.BoxGeometry,THREE.CylinderGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this),this.radiusTop=e=void 0!==e?e:20,this.radiusBottom=t=void 0!==t?t:20,this.height=i=void 0!==i?i:100,this.radialSegments=r=r||8,this.heightSegments=n=n||1,this.openEnded=o=void 0!==o?o:!1;var a,s,h=i/2,l=[],c=[];for(s=0;n>=s;s++){var u=[],p=[],f=s/n,d=f*(t-e)+e;for(a=0;r>=a;a++){var E=a/r,m=new THREE.Vector3;m.x=d*Math.sin(E*Math.PI*2),m.y=-f*i+h,m.z=d*Math.cos(E*Math.PI*2),this.vertices.push(m),u.push(this.vertices.length-1),p.push(new THREE.Vector2(E,1-f))}l.push(u),c.push(p)}for(i=(t-e)/i,a=0;r>a;a++)for(0!==e?(u=this.vertices[l[0][a]].clone(),p=this.vertices[l[0][a+1]].clone()):(u=this.vertices[l[1][a]].clone(),p=this.vertices[l[1][a+1]].clone()),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*i).normalize(),p.setY(Math.sqrt(p.x*p.x+p.z*p.z)*i).normalize(),s=0;n>s;s++){var f=l[s][a],d=l[s+1][a],E=l[s+1][a+1],m=l[s][a+1],g=u.clone(),T=u.clone(),v=p.clone(),y=p.clone(),R=c[s][a].clone(),x=c[s+1][a].clone(),H=c[s+1][a+1].clone(),_=c[s][a+1].clone();this.faces.push(new THREE.Face3(f,d,m,[g,T,y])),this.faceVertexUvs[0].push([R,x,_]),this.faces.push(new THREE.Face3(d,E,m,[T.clone(),v,y.clone()])),this.faceVertexUvs[0].push([x.clone(),H,_.clone()])}if(!1===o&&e>0)for(this.vertices.push(new THREE.Vector3(0,h,0)),a=0;r>a;a++)f=l[0][a],d=l[0][a+1],E=this.vertices.length-1,g=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),R=c[0][a].clone(),x=c[0][a+1].clone(),H=new THREE.Vector2(x.x,0),this.faces.push(new THREE.Face3(f,d,E,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);if(!1===o&&t>0)for(this.vertices.push(new THREE.Vector3(0,-h,0)),a=0;r>a;a++)f=l[s][a+1],d=l[s][a],E=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),T=new THREE.Vector3(0,-1,0),v=new THREE.Vector3(0,-1,0),R=c[s][a+1].clone(),x=c[s][a].clone(),H=new THREE.Vector2(x.x,1),this.faces.push(new THREE.Face3(f,d,E,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){"undefined"!=typeof e&&(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var i=e.length,r=0;i>r;r++)this.addShape(e[r],t)},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function i(e,t,i){return t||console.log("die"),t.clone().multiplyScalar(i).add(e)}function r(e,t,i){var r=THREE.Math.sign,n=1,n=e.x-t.x,o=e.y-t.y,a=i.x-e.x,s=i.y-e.y,h=n*n+o*o;if(1e-10<Math.abs(n*s-o*a)){var l=Math.sqrt(h),r=Math.sqrt(a*a+s*s),h=t.x-o/l;if(t=t.y+n/l,a=((i.x-s/r-h)*s-(i.y+a/r-t)*a)/(n*s-o*a),i=h+n*a-e.x,e=t+o*a-e.y,n=i*i+e*e,2>=n)return new THREE.Vector2(i,e);n=Math.sqrt(n/2)}else e=!1,n>1e-10?a>1e-10&&(e=!0):-1e-10>n?-1e-10>a&&(e=!0):r(o)==r(s)&&(e=!0),e?(i=-o,e=n,n=Math.sqrt(h)):(i=n,e=o,n=Math.sqrt(h/2));return new THREE.Vector2(i/n,e/n)}function n(i,r){var n,o;for(O=i.length;0<=--O;){n=O,o=O-1,0>o&&(o=i.length-1);for(var a=0,s=T+2*E,a=0;s>a;a++){var h=B*a,l=B*(a+1),c=r+n+h,h=r+o+h,u=r+o+l,l=r+n+l,p=i,f=a,d=s,m=n,g=o,c=c+S,h=h+S,u=u+S,l=l+S;M.faces.push(new THREE.Face3(c,h,l,null,null,x)),M.faces.push(new THREE.Face3(h,u,l,null,null,x)),c=H.generateSideWallUV(M,e,p,t,c,h,u,l,f,d,m,g),M.faceVertexUvs[0].push([c[0],c[1],c[3]]),M.faceVertexUvs[0].push([c[1],c[2],c[3]])}}}function o(e,t,i){M.vertices.push(new THREE.Vector3(e,t,i))}function a(i,r,n,o){i+=S,r+=S,n+=S,M.faces.push(new THREE.Face3(i,r,n,null,null,R)),i=o?H.generateBottomUV(M,e,t,i,r,n):H.generateTopUV(M,e,t,i,r,n),M.faceVertexUvs[0].push(i)}var s,h,l,c,u,p=void 0!==t.amount?t.amount:100,f=void 0!==t.bevelThickness?t.bevelThickness:6,d=void 0!==t.bevelSize?t.bevelSize:f-2,E=void 0!==t.bevelSegments?t.bevelSegments:3,m=void 0!==t.bevelEnabled?t.bevelEnabled:!0,g=void 0!==t.curveSegments?t.curveSegments:12,T=void 0!==t.steps?t.steps:1,v=t.extrudePath,y=!1,R=t.material,x=t.extrudeMaterial,H=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;v&&(s=v.getSpacedPoints(T),y=!0,m=!1,h=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(v,T,!1),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3),m||(d=f=E=0);var _,b,w,M=this,S=this.vertices.length,v=e.extractPoints(g),g=v.shape,A=v.holes;if(v=!THREE.Shape.Utils.isClockWise(g)){for(g=g.reverse(),b=0,w=A.length;w>b;b++)_=A[b],THREE.Shape.Utils.isClockWise(_)&&(A[b]=_.reverse());v=!1}var C=THREE.Shape.Utils.triangulateShape(g,A),L=g;for(b=0,w=A.length;w>b;b++)_=A[b],g=g.concat(_);var P,D,F,U,V,z,B=g.length,N=C.length,v=[],O=0;for(F=L.length,P=F-1,D=O+1;F>O;O++,P++,D++)P===F&&(P=0),D===F&&(D=0),v[O]=r(L[O],L[P],L[D]);var I,k=[],G=v.concat();for(b=0,w=A.length;w>b;b++){for(_=A[b],I=[],O=0,F=_.length,P=F-1,D=O+1;F>O;O++,P++,D++)P===F&&(P=0),D===F&&(D=0),I[O]=r(_[O],_[P],_[D]);k.push(I),G=G.concat(I)}for(P=0;E>P;P++){for(F=P/E,U=f*(1-F),D=d*Math.sin(F*Math.PI/2),O=0,F=L.length;F>O;O++)V=i(L[O],v[O],D),o(V.x,V.y,-U);for(b=0,w=A.length;w>b;b++)for(_=A[b],I=k[b],O=0,F=_.length;F>O;O++)V=i(_[O],I[O],D),o(V.x,V.y,-U)}for(D=d,O=0;B>O;O++)V=m?i(g[O],G[O],D):g[O],y?(c.copy(h.normals[0]).multiplyScalar(V.x),l.copy(h.binormals[0]).multiplyScalar(V.y),u.copy(s[0]).add(c).add(l),o(u.x,u.y,u.z)):o(V.x,V.y,0);for(F=1;T>=F;F++)for(O=0;B>O;O++)V=m?i(g[O],G[O],D):g[O],y?(c.copy(h.normals[F]).multiplyScalar(V.x),l.copy(h.binormals[F]).multiplyScalar(V.y),u.copy(s[F]).add(c).add(l),o(u.x,u.y,u.z)):o(V.x,V.y,p/T*F);for(P=E-1;P>=0;P--){for(F=P/E,U=f*(1-F),D=d*Math.sin(F*Math.PI/2),O=0,F=L.length;F>O;O++)V=i(L[O],v[O],D),o(V.x,V.y,p+U);for(b=0,w=A.length;w>b;b++)for(_=A[b],I=k[b],O=0,F=_.length;F>O;O++)V=i(_[O],I[O],D),y?o(V.x,V.y+s[T-1].y,s[T-1].x+U):o(V.x,V.y,p+U)}!function(){if(m){var e;for(e=0*B,O=0;N>O;O++)z=C[O],a(z[2]+e,z[1]+e,z[0]+e,!0);for(e=T+2*E,e*=B,O=0;N>O;O++)z=C[O],a(z[0]+e,z[1]+e,z[2]+e,!1)}else{for(O=0;N>O;O++)z=C[O],a(z[2],z[1],z[0],!0);for(O=0;N>O;O++)z=C[O],a(z[0]+B*T,z[1]+B*T,z[2]+B*T,!1)}}(),function(){var e=0;for(n(L,e),e+=L.length,b=0,w=A.length;w>b;b++)_=A[b],n(_,e),e+=_.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,i,r,n,o){return t=e.vertices[n].x,n=e.vertices[n].y,i=e.vertices[o].x,o=e.vertices[o].y,[new THREE.Vector2(e.vertices[r].x,e.vertices[r].y),new THREE.Vector2(t,n),new THREE.Vector2(i,o)]},generateBottomUV:function(e,t,i,r,n,o){return this.generateTopUV(e,t,i,r,n,o)},generateSideWallUV:function(e,t,i,r,n,o,a,s,h,l,c,u){t=e.vertices[n].x,i=e.vertices[n].y,n=e.vertices[n].z,r=e.vertices[o].x,h=e.vertices[o].y,o=e.vertices[o].z,l=e.vertices[a].x,c=e.vertices[a].y,a=e.vertices[a].z,u=e.vertices[s].x;var p=e.vertices[s].y;return e=e.vertices[s].z,.01>Math.abs(i-h)?[new THREE.Vector2(t,1-n),new THREE.Vector2(r,1-o),new THREE.Vector2(l,1-a),new THREE.Vector2(u,1-e)]:[new THREE.Vector2(i,1-n),new THREE.Vector2(h,1-o),new THREE.Vector2(c,1-a),new THREE.Vector2(p,1-e)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),!1==e instanceof Array&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var i=0,r=e.length;r>i;i++)this.addShape(e[i],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var i,r,n,o=t.material,a=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,s=this.vertices.length;i=e.extractPoints(void 0!==t.curveSegments?t.curveSegments:12);var h=i.shape,l=i.holes;if(!THREE.Shape.Utils.isClockWise(h))for(h=h.reverse(),i=0,r=l.length;r>i;i++)n=l[i],THREE.Shape.Utils.isClockWise(n)&&(l[i]=n.reverse());var c=THREE.Shape.Utils.triangulateShape(h,l);for(i=0,r=l.length;r>i;i++)n=l[i],h=h.concat(n);for(l=h.length,r=c.length,i=0;l>i;i++)n=h[i],this.vertices.push(new THREE.Vector3(n.x,n.y,0));for(i=0;r>i;i++)l=c[i],h=l[0]+s,n=l[1]+s,l=l[2]+s,this.faces.push(new THREE.Face3(h,n,l,null,null,o)),this.faceVertexUvs[0].push(a.generateBottomUV(this,e,t,h,n,l))},THREE.LatheGeometry=function(e,t,i,r){THREE.Geometry.call(this),t=t||12,i=i||0,r=r||2*Math.PI;for(var n=1/(e.length-1),o=1/t,a=0,s=t;s>=a;a++)for(var h=i+a*o*r,l=Math.cos(h),c=Math.sin(h),h=0,u=e.length;u>h;h++){var p=e[h],f=new THREE.Vector3;f.x=l*p.x-c*p.y,f.y=c*p.x+l*p.y,f.z=p.z,this.vertices.push(f)}for(i=e.length,a=0,s=t;s>a;a++)for(h=0,u=e.length-1;u>h;h++){t=c=h+i*a,r=c+i;var l=c+1+i,c=c+1,p=a*o,f=h*n,d=p+o,E=f+n;this.faces.push(new THREE.Face3(t,r,c)),this.faceVertexUvs[0].push([new THREE.Vector2(p,f),new THREE.Vector2(d,f),new THREE.Vector2(p,E)]),this.faces.push(new THREE.Face3(r,l,c)),this.faceVertexUvs[0].push([new THREE.Vector2(d,f),new THREE.Vector2(d,E),new THREE.Vector2(p,E)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,i,r){THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=i||1,this.heightSegments=r||1;var n=e/2,o=t/2;i=this.widthSegments,r=this.heightSegments;var a=i+1,s=r+1,h=this.width/i,l=this.height/r,c=new THREE.Vector3(0,0,1);for(e=0;s>e;e++)for(t=0;a>t;t++)this.vertices.push(new THREE.Vector3(t*h-n,-(e*l-o),0));for(e=0;r>e;e++)for(t=0;i>t;t++){var u=t+a*e,n=t+a*(e+1),o=t+1+a*(e+1),s=t+1+a*e,h=new THREE.Vector2(t/i,1-e/r),l=new THREE.Vector2(t/i,1-(e+1)/r),p=new THREE.Vector2((t+1)/i,1-(e+1)/r),f=new THREE.Vector2((t+1)/i,1-e/r),u=new THREE.Face3(u,n,s);u.normal.copy(c),u.vertexNormals.push(c.clone(),c.clone(),c.clone()),this.faces.push(u),this.faceVertexUvs[0].push([h,l,f]),u=new THREE.Face3(n,o,s),u.normal.copy(c),u.vertexNormals.push(c.clone(),c.clone(),c.clone()),this.faces.push(u),this.faceVertexUvs[0].push([l.clone(),p,f.clone()])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this),e=e||0,t=t||50,n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI,i=void 0!==i?Math.max(3,i):8,r=void 0!==r?Math.max(3,r):8;var a,s=[],h=e,l=(t-e)/r;for(e=0;r>=e;e++){for(a=0;i>=a;a++){var c=new THREE.Vector3,u=n+a/i*o;c.x=h*Math.cos(u),c.y=h*Math.sin(u),this.vertices.push(c),s.push(new THREE.Vector2((c.x/t+1)/2,(c.y/t+1)/2))}h+=l}for(t=new THREE.Vector3(0,0,1),e=0;r>e;e++)for(n=e*i,a=0;i>=a;a++)u=a+n,o=u+e,l=u+i+e,c=u+i+1+e,this.faces.push(new THREE.Face3(o,l,c,[t.clone(),t.clone(),t.clone()])),this.faceVertexUvs[0].push([s[o].clone(),s[l].clone(),s[c].clone()]),o=u+e,l=u+i+1+e,c=u+1+e,this.faces.push(new THREE.Face3(o,l,c,[t.clone(),t.clone(),t.clone()])),this.faceVertexUvs[0].push([s[o].clone(),s[l].clone(),s[c].clone()]);this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,h)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,i,r,n,o,a){THREE.Geometry.call(this),this.radius=e=e||50,this.widthSegments=t=Math.max(3,Math.floor(t)||8),this.heightSegments=i=Math.max(2,Math.floor(i)||6),this.phiStart=r=void 0!==r?r:0,this.phiLength=n=void 0!==n?n:2*Math.PI,this.thetaStart=o=void 0!==o?o:0,this.thetaLength=a=void 0!==a?a:Math.PI;var s,h,l=[],c=[];for(h=0;i>=h;h++){var u=[],p=[];for(s=0;t>=s;s++){var f=s/t,d=h/i,E=new THREE.Vector3;E.x=-e*Math.cos(r+f*n)*Math.sin(o+d*a),E.y=e*Math.cos(o+d*a),E.z=e*Math.sin(r+f*n)*Math.sin(o+d*a),this.vertices.push(E),u.push(this.vertices.length-1),p.push(new THREE.Vector2(f,1-d))}l.push(u),c.push(p)}for(h=0;h<this.heightSegments;h++)for(s=0;s<this.widthSegments;s++){t=l[h][s+1],i=l[h][s],r=l[h+1][s],n=l[h+1][s+1],o=this.vertices[t].clone().normalize(),a=this.vertices[i].clone().normalize();var u=this.vertices[r].clone().normalize(),p=this.vertices[n].clone().normalize(),f=c[h][s+1].clone(),d=c[h][s].clone(),E=c[h+1][s].clone(),m=c[h+1][s+1].clone();Math.abs(this.vertices[t].y)===this.radius?(f.x=(f.x+d.x)/2,this.faces.push(new THREE.Face3(t,r,n,[o,u,p])),this.faceVertexUvs[0].push([f,E,m])):Math.abs(this.vertices[r].y)===this.radius?(E.x=(E.x+m.x)/2,this.faces.push(new THREE.Face3(t,i,r,[o,a,u])),this.faceVertexUvs[0].push([f,d,E])):(this.faces.push(new THREE.Face3(t,i,n,[o,a,p])),this.faceVertexUvs[0].push([f,d,m]),this.faces.push(new THREE.Face3(i,r,n,[a.clone(),u,p.clone()])),this.faceVertexUvs[0].push([d.clone(),E,m.clone()]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){t=t||{};var i=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,i,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,i,r,n){for(THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=i||8,this.tubularSegments=r||6,this.arc=n||2*Math.PI,n=new THREE.Vector3,e=[],t=[],i=0;i<=this.radialSegments;i++)for(r=0;r<=this.tubularSegments;r++){var o=r/this.tubularSegments*this.arc,a=i/this.radialSegments*Math.PI*2;n.x=this.radius*Math.cos(o),n.y=this.radius*Math.sin(o);var s=new THREE.Vector3;s.x=(this.radius+this.tube*Math.cos(a))*Math.cos(o),s.y=(this.radius+this.tube*Math.cos(a))*Math.sin(o),s.z=this.tube*Math.sin(a),this.vertices.push(s),e.push(new THREE.Vector2(r/this.tubularSegments,i/this.radialSegments)),t.push(s.clone().sub(n).normalize())}for(i=1;i<=this.radialSegments;i++)for(r=1;r<=this.tubularSegments;r++){n=(this.tubularSegments+1)*i+r-1;
var o=(this.tubularSegments+1)*(i-1)+r-1,a=(this.tubularSegments+1)*(i-1)+r,s=(this.tubularSegments+1)*i+r,h=new THREE.Face3(n,o,s,[t[n].clone(),t[o].clone(),t[s].clone()]);this.faces.push(h),this.faceVertexUvs[0].push([e[n].clone(),e[o].clone(),e[s].clone()]),h=new THREE.Face3(o,a,s,[t[o].clone(),t[a].clone(),t[s].clone()]),this.faces.push(h),this.faceVertexUvs[0].push([e[o].clone(),e[a].clone(),e[s].clone()])}this.computeCentroids(),this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,i,r,n,o,a){function s(e,t,i,r,n){var o=Math.cos(e),a=Math.sin(e);return e*=t/i,t=Math.cos(e),o*=r*(2+t)*.5,a=r*(2+t)*a*.5,r=n*r*Math.sin(e)*.5,new THREE.Vector3(o,a,r)}for(THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=i||64,this.tubularSegments=r||8,this.p=n||2,this.q=o||3,this.heightScale=a||1,this.grid=Array(this.radialSegments),i=new THREE.Vector3,r=new THREE.Vector3,n=new THREE.Vector3,e=0;e<this.radialSegments;++e)for(this.grid[e]=Array(this.tubularSegments),t=e/this.radialSegments*2*this.p*Math.PI,o=s(t,this.q,this.p,this.radius,this.heightScale),t=s(t+.01,this.q,this.p,this.radius,this.heightScale),i.subVectors(t,o),r.addVectors(t,o),n.crossVectors(i,r),r.crossVectors(n,i),n.normalize(),r.normalize(),t=0;t<this.tubularSegments;++t){var h=t/this.tubularSegments*2*Math.PI;a=-this.tube*Math.cos(h);var h=this.tube*Math.sin(h),l=new THREE.Vector3;l.x=o.x+a*r.x+h*n.x,l.y=o.y+a*r.y+h*n.y,l.z=o.z+a*r.z+h*n.z,this.grid[e][t]=this.vertices.push(l)-1}for(e=0;e<this.radialSegments;++e)for(t=0;t<this.tubularSegments;++t){n=(e+1)%this.radialSegments,o=(t+1)%this.tubularSegments,i=this.grid[e][t],r=this.grid[n][t],n=this.grid[n][o],o=this.grid[e][o],a=new THREE.Vector2(e/this.radialSegments,t/this.tubularSegments);var h=new THREE.Vector2((e+1)/this.radialSegments,t/this.tubularSegments),l=new THREE.Vector2((e+1)/this.radialSegments,(t+1)/this.tubularSegments),c=new THREE.Vector2(e/this.radialSegments,(t+1)/this.tubularSegments);this.faces.push(new THREE.Face3(i,r,o)),this.faceVertexUvs[0].push([a,h,c]),this.faces.push(new THREE.Face3(r,n,o)),this.faceVertexUvs[0].push([h.clone(),l,c.clone()])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,i,r,n){THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=i||1,this.radialSegments=r||8,this.closed=n||!1,this.grid=[];var o,a;r=this.segments+1;var s,h,l;n=new THREE.Vector3;var c,u;for(t=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),c=t.normals,u=t.binormals,this.tangents=t.tangents,this.normals=c,this.binormals=u,t=0;r>t;t++)for(this.grid[t]=[],i=t/(r-1),l=e.getPointAt(i),o=c[t],a=u[t],i=0;i<this.radialSegments;i++)s=i/this.radialSegments*2*Math.PI,h=-this.radius*Math.cos(s),s=this.radius*Math.sin(s),n.copy(l),n.x+=h*o.x+s*a.x,n.y+=h*o.y+s*a.y,n.z+=h*o.z+s*a.z,this.grid[t][i]=this.vertices.push(new THREE.Vector3(n.x,n.y,n.z))-1;for(t=0;t<this.segments;t++)for(i=0;i<this.radialSegments;i++)n=this.closed?(t+1)%this.segments:t+1,c=(i+1)%this.radialSegments,e=this.grid[t][i],r=this.grid[n][i],n=this.grid[n][c],c=this.grid[t][c],u=new THREE.Vector2(t/this.segments,i/this.radialSegments),o=new THREE.Vector2((t+1)/this.segments,i/this.radialSegments),a=new THREE.Vector2((t+1)/this.segments,(i+1)/this.radialSegments),h=new THREE.Vector2(t/this.segments,(i+1)/this.radialSegments),this.faces.push(new THREE.Face3(e,r,c)),this.faceVertexUvs[0].push([u,o,h]),this.faces.push(new THREE.Face3(r,n,c)),this.faceVertexUvs[0].push([o.clone(),a,h.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,i){new THREE.Vector3;var r=new THREE.Vector3;new THREE.Vector3;var n=[],o=[],a=[],s=new THREE.Vector3,h=new THREE.Matrix4;t+=1;var l,c,u;for(this.tangents=n,this.normals=o,this.binormals=a,l=0;t>l;l++)c=l/(t-1),n[l]=e.getTangentAt(c),n[l].normalize();for(o[0]=new THREE.Vector3,a[0]=new THREE.Vector3,e=Number.MAX_VALUE,l=Math.abs(n[0].x),c=Math.abs(n[0].y),u=Math.abs(n[0].z),e>=l&&(e=l,r.set(1,0,0)),e>=c&&(e=c,r.set(0,1,0)),e>=u&&r.set(0,0,1),s.crossVectors(n[0],r).normalize(),o[0].crossVectors(n[0],s),a[0].crossVectors(n[0],o[0]),l=1;t>l;l++)o[l]=o[l-1].clone(),a[l]=a[l-1].clone(),s.crossVectors(n[l-1],n[l]),1e-4<s.length()&&(s.normalize(),r=Math.acos(THREE.Math.clamp(n[l-1].dot(n[l]),-1,1)),o[l].applyMatrix4(h.makeRotationAxis(s,r))),a[l].crossVectors(n[l],o[l]);if(i)for(r=Math.acos(THREE.Math.clamp(o[0].dot(o[t-1]),-1,1)),r/=t-1,0<n[0].dot(s.crossVectors(o[0],o[t-1]))&&(r=-r),l=1;t>l;l++)o[l].applyMatrix4(h.makeRotationAxis(n[l],r*l)),a[l].crossVectors(n[l],o[l])},THREE.PolyhedronGeometry=function(e,t,i,r){function n(e){var t=e.normalize().clone();t.index=h.vertices.push(t)-1;var i=Math.atan2(e.z,-e.x)/2/Math.PI+.5;return e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5,t.uv=new THREE.Vector2(i,1-e),t}function o(e,t,i){var r=new THREE.Face3(e.index,t.index,i.index,[e.clone(),t.clone(),i.clone()]);r.centroid.add(e).add(t).add(i).divideScalar(3),h.faces.push(r),r=r.centroid,r=Math.atan2(r.z,-r.x),h.faceVertexUvs[0].push([s(e.uv,e,r),s(t.uv,t,r),s(i.uv,i,r)])}function a(e,t){var i=Math.pow(2,t);Math.pow(4,t);for(var r=n(h.vertices[e.a]),a=n(h.vertices[e.b]),s=n(h.vertices[e.c]),l=[],c=0;i>=c;c++){l[c]=[];for(var u=n(r.clone().lerp(s,c/i)),p=n(a.clone().lerp(s,c/i)),f=i-c,d=0;f>=d;d++)l[c][d]=0==d&&c==i?u:n(u.clone().lerp(p,d/f))}for(c=0;i>c;c++)for(d=0;2*(i-c)-1>d;d++)r=Math.floor(d/2),0==d%2?o(l[c][r+1],l[c+1][r],l[c][r]):o(l[c][r+1],l[c+1][r+1],l[c+1][r])}function s(e,t,i){return 0>i&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(i/2/Math.PI+.5,e.y)),e.clone()}THREE.Geometry.call(this),i=i||1,r=r||0;for(var h=this,l=0,c=e.length;c>l;l++)n(new THREE.Vector3(e[l][0],e[l][1],e[l][2]));e=this.vertices;for(var u=[],l=0,c=t.length;c>l;l++){var p=e[t[l][0]],f=e[t[l][1]],d=e[t[l][2]];u[l]=new THREE.Face3(p.index,f.index,d.index,[p.clone(),f.clone(),d.clone()])}for(l=0,c=u.length;c>l;l++)a(u[l],r);for(l=0,c=this.faceVertexUvs[0].length;c>l;l++)t=this.faceVertexUvs[0][l],r=t[0].x,e=t[1].x,u=t[2].x,p=Math.max(r,Math.max(e,u)),f=Math.min(r,Math.min(e,u)),p>.9&&.1>f&&(.2>r&&(t[0].x+=1),.2>e&&(t[1].x+=1),.2>u&&(t[2].x+=1));for(l=0,c=this.vertices.length;c>l;l++)this.vertices[l].multiplyScalar(i);this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,i)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){this.radius=e,this.detail=t;var i=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,i,0],[1,i,0],[-1,-i,0],[1,-i,0],[0,-1,i],[0,1,i],[0,-1,-i],[0,1,-i],[i,0,-1],[i,0,1],[-i,0,-1],[-i,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,i){THREE.Geometry.call(this);var r,n,o,a,s=this.vertices,h=this.faces,l=this.faceVertexUvs[0],c=t+1;for(r=0;i>=r;r++)for(a=r/i,n=0;t>=n;n++)o=n/t,o=e(o,a),s.push(o);var u,p,f,d;for(r=0;i>r;r++)for(n=0;t>n;n++)e=r*c+n,s=r*c+n+1,a=(r+1)*c+n+1,o=(r+1)*c+n,u=new THREE.Vector2(n/t,r/i),p=new THREE.Vector2((n+1)/t,r/i),f=new THREE.Vector2((n+1)/t,(r+1)/i),d=new THREE.Vector2(n/t,(r+1)/i),h.push(new THREE.Face3(e,s,o)),l.push([u,p,d]),h.push(new THREE.Face3(s,a,o)),l.push([p.clone(),f,d.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){e=e||1;var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e,0,0),new THREE.Vector3,new THREE.Vector3(0,e,0),new THREE.Vector3,new THREE.Vector3(0,0,e)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775)),e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.Line.call(this,t,e,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,i,r,n,o){THREE.Object3D.call(this),void 0===r&&(r=16776960),void 0===i&&(i=1),void 0===n&&(n=.2*i),void 0===o&&(o=.2*n),this.position=t,t=new THREE.Geometry,t.vertices.push(new THREE.Vector3(0,0,0)),t.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(t,new THREE.LineBasicMaterial({color:r})),this.line.matrixAutoUpdate=!1,this.add(this.line),t=new THREE.CylinderGeometry(0,.5,1,5,1),t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:r})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,n,o)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var e,t=new THREE.Vector3;return function(i){.99999<i.y?this.quaternion.set(0,0,0,1):-.99999>i.y?this.quaternion.set(1,0,0,0):(t.set(i.z,0,-i.x).normalize(),e=Math.acos(i.y),this.quaternion.setFromAxisAngle(t,e))}}(),THREE.ArrowHelper.prototype.setLength=function(e,t,i){void 0===t&&(t=.2*e),void 0===i&&(i=.2*t),this.line.scale.set(1,e,1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.BoxHelper=function(e){var t=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=t;var i=new THREE.Geometry;i.vertices.push(t[0],t[1],t[1],t[2],t[2],t[3],t[3],t[0],t[4],t[5],t[5],t[6],t[6],t[7],t[7],t[4],t[0],t[4],t[1],t[5],t[2],t[6],t[3],t[7]),THREE.Line.call(this,i,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==e&&this.update(e)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;null===t.boundingBox&&t.computeBoundingBox();var i=t.boundingBox.min,t=t.boundingBox.max,r=this.vertices;r[0].set(t.x,t.y,t.z),r[1].set(i.x,t.y,t.z),r[2].set(i.x,i.y,t.z),r[3].set(t.x,i.y,t.z),r[4].set(t.x,t.y,i.z),r[5].set(i.x,t.y,i.z),r[6].set(i.x,i.y,i.z),r[7].set(t.x,i.y,i.z),this.geometry.computeBoundingSphere(),this.geometry.verticesNeedUpdate=!0,this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.BoundingBoxHelper=function(e,t){var i=void 0!==t?t:8947848;this.object=e,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:i,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(e){function t(e,t,r){i(e,r),i(t,r)}function i(e,t){r.vertices.push(new THREE.Vector3),r.colors.push(new THREE.Color(t)),void 0===o[e]&&(o[e]=[]),o[e].push(r.vertices.length-1)}var r=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),o={};t("n1","n2",16755200),t("n2","n4",16755200),t("n4","n3",16755200),t("n3","n1",16755200),t("f1","f2",16755200),t("f2","f4",16755200),t("f4","f3",16755200),t("f3","f1",16755200),t("n1","f1",16755200),t("n2","f2",16755200),t("n3","f3",16755200),t("n4","f4",16755200),t("p","n1",16711680),t("p","n2",16711680),t("p","n3",16711680),t("p","n4",16711680),t("u1","u2",43775),t("u2","u3",43775),t("u3","u1",43775),t("c","t",16777215),t("p","c",3355443),t("cn1","cn2",3355443),t("cn3","cn4",3355443),t("cf1","cf2",3355443),t("cf3","cf4",3355443),THREE.Line.call(this,r,n,THREE.LinePieces),this.camera=e,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Camera,i=new THREE.Projector;return function(){function r(r,o,a,s){if(e.set(o,a,s),i.unprojectVector(e,t),r=n.pointMap[r],void 0!==r)for(o=0,a=r.length;a>o;o++)n.geometry.vertices[r[o]].copy(e)}var n=this;t.projectionMatrix.copy(this.camera.projectionMatrix),r("c",0,0,-1),r("t",0,0,1),r("n1",-1,-1,-1),r("n2",1,-1,-1),r("n3",-1,1,-1),r("n4",1,1,-1),r("f1",-1,-1,1),r("f2",1,-1,1),r("f3",-1,1,1),r("f4",1,1,1),r("u1",.7,1.1,-1),r("u2",-.7,1.1,-1),r("u3",0,2,-1),r("cf1",-1,0,1),r("cf2",1,0,1),r("cf3",0,-1,1),r("cf4",0,1,1),r("cn1",-1,0,-1),r("cn2",1,0,-1),r("cn3",0,-1,-1),r("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,t=t||1;var i=new THREE.PlaneGeometry(t,t),r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Mesh(i,r),this.add(this.lightPlane),i=new THREE.Geometry,i.vertices.push(new THREE.Vector3),i.vertices.push(new THREE.Vector3),r=new THREE.LineBasicMaterial({fog:!1}),r.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(i,r),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),i.subVectors(t,e),this.lightPlane.lookAt(i),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(i),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(e,t){var i=void 0!==t?t:16777215,r=[0,0],n={},o=function(e,t){return e-t},a=["a","b","c"],s=new THREE.BufferGeometry,h=e.geometry.clone();h.mergeVertices(),h.computeFaceNormals();for(var l=h.vertices,h=h.faces,c=0,u=0,p=h.length;p>u;u++)for(var f=h[u],d=0;3>d;d++){r[0]=f[a[d]],r[1]=f[a[(d+1)%3]],r.sort(o);var E=r.toString();void 0===n[E]?(n[E]={vert1:r[0],vert2:r[1],face1:u,face2:void 0},c++):n[E].face2=u}s.addAttribute("position",Float32Array,2*c,3),r=s.attributes.position.array,o=0;for(E in n)a=n[E],(void 0===a.face2||.9999>h[a.face1].normal.dot(h[a.face2].normal))&&(c=l[a.vert1],r[o++]=c.x,r[o++]=c.y,r[o++]=c.z,c=l[a.vert2],r[o++]=c.x,r[o++]=c.y,r[o++]=c.z);THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper=function(e,t,i,r){this.object=e,this.size=void 0!==t?t:1,e=void 0!==i?i:16776960,r=void 0!==r?r:1,t=new THREE.Geometry,i=0;for(var n=this.object.geometry.faces.length;n>i;i++)t.vertices.push(new THREE.Vector3),t.vertices.push(new THREE.Vector3);THREE.Line.call(this,t,new THREE.LineBasicMaterial({color:e,linewidth:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(){var e=new THREE.Vector3;return function(t){this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld),t=this.geometry.vertices;for(var i=this.object.geometry.faces,r=this.object.matrixWorld,n=0,o=i.length;o>n;n++){var a=i[n];e.copy(a.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var s=2*n;t[s].copy(a.centroid).applyMatrix4(r),t[s+1].addVectors(t[s],e)}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.GridHelper=function(e,t){var i=new THREE.Geometry,r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var n=-e;e>=n;n+=t){i.vertices.push(new THREE.Vector3(-e,0,n),new THREE.Vector3(e,0,n),new THREE.Vector3(n,0,-e),new THREE.Vector3(n,0,e));var o=0===n?this.color1:this.color2;i.colors.push(o,o,o,o)}THREE.Line.call(this,i,r,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t){for(THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color],e=new THREE.SphereGeometry(t,4,2),e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2)),t=0;8>t;t++)e.faces[t].color=this.colors[4>t?0:1];t=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0}),this.lightSphere=new THREE.Mesh(e,t),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var i=new THREE.SphereGeometry(t,4,2),r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,i,r),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SpotLightHelper=function(e){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,e=new THREE.CylinderGeometry(0,1,1,8,1,!0),e.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var t=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(e,t),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var i=this.light.distance?this.light.distance:1e4,r=i*Math.tan(this.light.angle);this.cone.scale.set(r,r,i),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(e,t,i,r){this.object=e,this.size=void 0!==t?t:1,t=void 0!==i?i:16711680,r=void 0!==r?r:1,i=new THREE.Geometry,e=e.geometry.faces;for(var n=0,o=e.length;o>n;n++)for(var a=0,s=e[n].vertexNormals.length;s>a;a++)i.vertices.push(new THREE.Vector3),i.vertices.push(new THREE.Vector3);THREE.Line.call(this,i,new THREE.LineBasicMaterial({color:t,linewidth:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(){var e=new THREE.Vector3;return function(t){t=["a","b","c","d"],this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var i=this.geometry.vertices,r=this.object.geometry.vertices,n=this.object.geometry.faces,o=this.object.matrixWorld,a=0,s=0,h=n.length;h>s;s++)for(var l=n[s],c=0,u=l.vertexNormals.length;u>c;c++){var p=l.vertexNormals[c];i[a].copy(r[l[t[c]]]).applyMatrix4(o),e.copy(p).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),e.add(i[a]),a+=1,i[a].copy(e),a+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(e,t,i,r){this.object=e,this.size=void 0!==t?t:1,t=void 0!==i?i:255,r=void 0!==r?r:1,i=new THREE.Geometry,e=e.geometry.faces;for(var n=0,o=e.length;o>n;n++)for(var a=0,s=e[n].vertexTangents.length;s>a;a++)i.vertices.push(new THREE.Vector3),i.vertices.push(new THREE.Vector3);THREE.Line.call(this,i,new THREE.LineBasicMaterial({color:t,linewidth:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(){var e=new THREE.Vector3;return function(t){t=["a","b","c","d"],this.object.updateMatrixWorld(!0);for(var i=this.geometry.vertices,r=this.object.geometry.vertices,n=this.object.geometry.faces,o=this.object.matrixWorld,a=0,s=0,h=n.length;h>s;s++)for(var l=n[s],c=0,u=l.vertexTangents.length;u>c;c++){var p=l.vertexTangents[c];i[a].copy(r[l[t[c]]]).applyMatrix4(o),e.copy(p).transformDirection(o).multiplyScalar(this.size),e.add(i[a]),a+=1,i[a].copy(e),a+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(e,t){var i=void 0!==t?t:16777215,r=[0,0],n={},o=function(e,t){return e-t},a=["a","b","c"],s=new THREE.BufferGeometry;if(e.geometry instanceof THREE.Geometry){for(var h=e.geometry.vertices,l=e.geometry.faces,c=0,u=new Uint32Array(6*l.length),p=0,f=l.length;f>p;p++)for(var d=l[p],E=0;3>E;E++){r[0]=d[a[E]],r[1]=d[a[(E+1)%3]],r.sort(o);var m=r.toString();void 0===n[m]&&(u[2*c]=r[0],u[2*c+1]=r[1],n[m]=!0,c++)}for(s.addAttribute("position",Float32Array,2*c,3),r=s.attributes.position.array,p=0,f=c;f>p;p++)for(E=0;2>E;E++)c=h[u[2*p+E]],a=6*p+3*E,r[a+0]=c.x,r[a+1]=c.y,r[a+2]=c.z}else if(e.geometry instanceof THREE.BufferGeometry&&void 0!==e.geometry.attributes.index){for(var h=e.geometry.attributes.position.array,f=e.geometry.attributes.index.array,l=e.geometry.offsets,c=0,u=new Uint32Array(2*f.length),d=0,g=l.length;g>d;++d)for(var E=l[d].start,m=l[d].count,a=l[d].index,p=E,T=E+m;T>p;p+=3)for(E=0;3>E;E++)r[0]=a+f[p+E],r[1]=a+f[p+(E+1)%3],r.sort(o),m=r.toString(),void 0===n[m]&&(u[2*c]=r[0],u[2*c+1]=r[1],n[m]=!0,c++);for(s.addAttribute("position",Float32Array,2*c,3),r=s.attributes.position.array,p=0,f=c;f>p;p++)for(E=0;2>E;E++)a=6*p+3*E,c=3*u[2*p+E],r[a+0]=h[c],r[a+1]=h[c+1],r[a+2]=h[c+2]}else if(e.geometry instanceof THREE.BufferGeometry)for(h=e.geometry.attributes.position.array,c=h.length/3,u=c/3,s.addAttribute("position",Float32Array,2*c,3),r=s.attributes.position.array,p=0,f=u;f>p;p++)for(E=0;3>E;E++)a=18*p+6*E,u=9*p+3*E,r[a+0]=h[u],r[a+1]=h[u+1],r[a+2]=h[u+2],c=9*p+(E+1)%3*3,r[a+3]=h[c],r[a+4]=h[c+1],r[a+5]=h[c+2];THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,i,r,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,i,r,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,i,r,n,o){void 0===t&&(t=-1),void 0===i&&(i=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===r&&(r=THREE.NormalBlending),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:e,size:t,distance:i,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:r})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,i=this.lensFlares.length,r=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(e=0;i>e;e++)t=this.lensFlares[e],t.x=this.positionScreen.x+r*t.distance,t.y=this.positionScreen.y+n*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var i=this.geometry.morphTargets.length;this.createAnimation("__default",0,i-1,i/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,i,r){t={startFrame:t,endFrame:i,length:i-t+1,fps:r,duration:(i-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[e]=t,this.animationsList.push(t)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,i=/([a-z]+)(\d+)/,r={},n=this.geometry,o=0,a=n.morphTargets.length;a>o;o++){var s=n.morphTargets[o].name.match(i);if(s&&1<s.length){var h=s[1];r[h]||(r[h]={start:1/0,end:-1/0}),s=r[h],o<s.start&&(s.start=o),o>s.end&&(s.end=o),t||(t=h)}}for(h in r)s=r[h],this.createAnimation(h,s.start,s.end,e);this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){(e=this.animationsMap[e])&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){(e=this.animationsMap[e])&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var i=this.animationsMap[e];i&&(i.fps=t,i.duration=(i.end-i.start)/i.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var i=this.animationsMap[e];i&&(i.duration=t,i.fps=(i.end-i.start)/i.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var i=this.animationsMap[e];i&&(i.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var i=this.animationsMap[e];i&&(i.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;return(e=this.animationsMap[e])&&(t=e.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;return(e=this.animationsMap[e])&&(t=e.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){(e=this.animationsMap[e])&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,i=this.animationsList.length;i>t;t++){var r=this.animationsList[t];if(r.active){var n=r.duration/r.length;r.time+=r.direction*e,r.mirroredLoop?(r.time>r.duration||0>r.time)&&(r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),0>r.time&&(r.time=0,r.directionBackwards=!1)):(r.time%=r.duration,0>r.time&&(r.time+=r.duration));var o=r.startFrame+THREE.Math.clamp(Math.floor(r.time/n),0,r.length-1),a=r.weight;o!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*a,this.morphTargetInfluences[o]=0,r.lastFrame=r.currentFrame,r.currentFrame=o),n=r.time%n/n,r.directionBackwards&&(n=1-n),this.morphTargetInfluences[r.currentFrame]=n*a,this.morphTargetInfluences[r.lastFrame]=(1-n)*a}}},THREE.LensFlarePlugin=function(){function e(e,i){var r=t.createProgram(),n=t.createShader(t.FRAGMENT_SHADER),o=t.createShader(t.VERTEX_SHADER),a="precision "+i+" float;\n";return t.shaderSource(n,a+e.fragmentShader),t.shaderSource(o,a+e.vertexShader),t.compileShader(n),t.compileShader(o),t.attachShader(r,n),t.attachShader(r,o),t.linkProgram(r),r}var t,i,r,n,o,a,s,h,l,c,u,p,f;this.init=function(d){t=d.context,i=d,r=d.getPrecision(),n=new Float32Array(16),o=new Uint16Array(6),d=0,n[d++]=-1,n[d++]=-1,n[d++]=0,n[d++]=0,n[d++]=1,n[d++]=-1,n[d++]=1,n[d++]=0,n[d++]=1,n[d++]=1,n[d++]=1,n[d++]=1,n[d++]=-1,n[d++]=1,n[d++]=0,n[d++]=1,d=0,o[d++]=0,o[d++]=1,o[d++]=2,o[d++]=0,o[d++]=2,o[d++]=3,a=t.createBuffer(),s=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,a),t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.bufferData(t.ELEMENT_ARRAY_BUFFER,o,t.STATIC_DRAW),h=t.createTexture(),l=t.createTexture(),t.bindTexture(t.TEXTURE_2D,h),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,l),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),0>=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(c=!1,u=e(THREE.ShaderFlares.lensFlare,r)):(c=!0,u=e(THREE.ShaderFlares.lensFlareVertexTexture,r)),p={},f={},p.vertex=t.getAttribLocation(u,"position"),p.uv=t.getAttribLocation(u,"uv"),f.renderType=t.getUniformLocation(u,"renderType"),f.map=t.getUniformLocation(u,"map"),f.occlusionMap=t.getUniformLocation(u,"occlusionMap"),f.opacity=t.getUniformLocation(u,"opacity"),f.color=t.getUniformLocation(u,"color"),f.scale=t.getUniformLocation(u,"scale"),f.rotation=t.getUniformLocation(u,"rotation"),f.screenPosition=t.getUniformLocation(u,"screenPosition")},this.render=function(e,r,n,o){e=e.__webglFlares;var d=e.length;if(d){var E=new THREE.Vector3,m=o/n,g=.5*n,T=.5*o,v=16/o,y=new THREE.Vector2(v*m,v),R=new THREE.Vector3(1,1,0),x=new THREE.Vector2(1,1),H=f,v=p;t.useProgram(u),t.enableVertexAttribArray(p.vertex),t.enableVertexAttribArray(p.uv),t.uniform1i(H.occlusionMap,0),t.uniform1i(H.map,1),t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(v.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(v.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.disable(t.CULL_FACE),t.depthMask(!1);var _,b,w,M,S;for(_=0;d>_;_++)if(v=16/o,y.set(v*m,v),M=e[_],E.set(M.matrixWorld.elements[12],M.matrixWorld.elements[13],M.matrixWorld.elements[14]),E.applyMatrix4(r.matrixWorldInverse),E.applyProjection(r.projectionMatrix),R.copy(E),x.x=R.x*g+g,x.y=R.y*T+T,c||0<x.x&&x.x<n&&0<x.y&&x.y<o)for(t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,h),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,x.x-8,x.y-8,16,16,0),t.uniform1i(H.renderType,0),t.uniform2f(H.scale,y.x,y.y),t.uniform3f(H.screenPosition,R.x,R.y,R.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,l),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,x.x-8,x.y-8,16,16,0),t.uniform1i(H.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,h),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),M.positionScreen.copy(R),M.customUpdateCallback?M.customUpdateCallback(M):M.updateLensFlares(),t.uniform1i(H.renderType,2),t.enable(t.BLEND),b=0,w=M.lensFlares.length;w>b;b++)S=M.lensFlares[b],.001<S.opacity&&.001<S.scale&&(R.x=S.x,R.y=S.y,R.z=S.z,v=S.size*S.scale/o,y.x=v*m,y.y=v,t.uniform3f(H.screenPosition,R.x,R.y,R.z),t.uniform2f(H.scale,y.x,y.y),t.uniform1f(H.rotation,S.rotation),t.uniform1f(H.opacity,S.opacity),t.uniform3f(H.color,S.color.r,S.color.g,S.color.b),i.setBlending(S.blending,S.blendEquation,S.blendSrc,S.blendDst),i.setTexture(S.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));
t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var e,t,i,r,n,o,a=new THREE.Frustum,s=new THREE.Matrix4,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3;this.init=function(a){e=a.context,t=a,a=THREE.ShaderLib.depthRGBA;var s=THREE.UniformsUtils.clone(a.uniforms);i=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s}),r=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0}),n=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,skinning:!0}),o=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0,skinning:!0}),i._shadowPass=!0,r._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0},this.render=function(e,i){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,i)},this.update=function(u,p){var f,d,E,m,g,T,v,y,R,x=[];for(m=0,e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),t.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),t.setDepthTest(!0),f=0,d=u.__lights.length;d>f;f++)if(E=u.__lights[f],E.castShadow)if(E instanceof THREE.DirectionalLight&&E.shadowCascade)for(g=0;g<E.shadowCascadeCount;g++){var H;if(E.shadowCascadeArray[g])H=E.shadowCascadeArray[g];else{R=E,v=g,H=new THREE.DirectionalLight,H.isVirtual=!0,H.onlyShadow=!0,H.castShadow=!0,H.shadowCameraNear=R.shadowCameraNear,H.shadowCameraFar=R.shadowCameraFar,H.shadowCameraLeft=R.shadowCameraLeft,H.shadowCameraRight=R.shadowCameraRight,H.shadowCameraBottom=R.shadowCameraBottom,H.shadowCameraTop=R.shadowCameraTop,H.shadowCameraVisible=R.shadowCameraVisible,H.shadowDarkness=R.shadowDarkness,H.shadowBias=R.shadowCascadeBias[v],H.shadowMapWidth=R.shadowCascadeWidth[v],H.shadowMapHeight=R.shadowCascadeHeight[v],H.pointsWorld=[],H.pointsFrustum=[],y=H.pointsWorld,T=H.pointsFrustum;for(var _=0;8>_;_++)y[_]=new THREE.Vector3,T[_]=new THREE.Vector3;y=R.shadowCascadeNearZ[v],R=R.shadowCascadeFarZ[v],T[0].set(-1,-1,y),T[1].set(1,-1,y),T[2].set(-1,1,y),T[3].set(1,1,y),T[4].set(-1,-1,R),T[5].set(1,-1,R),T[6].set(-1,1,R),T[7].set(1,1,R),H.originalCamera=p,T=new THREE.Gyroscope,T.position=E.shadowCascadeOffset,T.add(H),T.add(H.target),p.add(T),E.shadowCascadeArray[g]=H,console.log("Created virtualLight",H)}v=E,y=g,R=v.shadowCascadeArray[y],R.position.copy(v.position),R.target.position.copy(v.target.position),R.lookAt(R.target),R.shadowCameraVisible=v.shadowCameraVisible,R.shadowDarkness=v.shadowDarkness,R.shadowBias=v.shadowCascadeBias[y],T=v.shadowCascadeNearZ[y],v=v.shadowCascadeFarZ[y],R=R.pointsFrustum,R[0].z=T,R[1].z=T,R[2].z=T,R[3].z=T,R[4].z=v,R[5].z=v,R[6].z=v,R[7].z=v,x[m]=H,m++}else x[m]=E,m++;for(f=0,d=x.length;d>f;f++){if(E=x[f],E.shadowMap||(g=THREE.LinearFilter,t.shadowMapType===THREE.PCFSoftShadowMap&&(g=THREE.NearestFilter),E.shadowMap=new THREE.WebGLRenderTarget(E.shadowMapWidth,E.shadowMapHeight,{minFilter:g,magFilter:g,format:THREE.RGBAFormat}),E.shadowMapSize=new THREE.Vector2(E.shadowMapWidth,E.shadowMapHeight),E.shadowMatrix=new THREE.Matrix4),!E.shadowCamera){if(E instanceof THREE.SpotLight)E.shadowCamera=new THREE.PerspectiveCamera(E.shadowCameraFov,E.shadowMapWidth/E.shadowMapHeight,E.shadowCameraNear,E.shadowCameraFar);else{if(!(E instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}E.shadowCamera=new THREE.OrthographicCamera(E.shadowCameraLeft,E.shadowCameraRight,E.shadowCameraTop,E.shadowCameraBottom,E.shadowCameraNear,E.shadowCameraFar)}u.add(E.shadowCamera),!0===u.autoUpdate&&u.updateMatrixWorld()}if(E.shadowCameraVisible&&!E.cameraHelper&&(E.cameraHelper=new THREE.CameraHelper(E.shadowCamera),E.shadowCamera.add(E.cameraHelper)),E.isVirtual&&H.originalCamera==p){for(g=p,m=E.shadowCamera,T=E.pointsFrustum,R=E.pointsWorld,h.set(1/0,1/0,1/0),l.set(-1/0,-1/0,-1/0),v=0;8>v;v++)y=R[v],y.copy(T[v]),THREE.ShadowMapPlugin.__projector.unprojectVector(y,g),y.applyMatrix4(m.matrixWorldInverse),y.x<h.x&&(h.x=y.x),y.x>l.x&&(l.x=y.x),y.y<h.y&&(h.y=y.y),y.y>l.y&&(l.y=y.y),y.z<h.z&&(h.z=y.z),y.z>l.z&&(l.z=y.z);m.left=h.x,m.right=l.x,m.top=l.y,m.bottom=h.y,m.updateProjectionMatrix()}for(m=E.shadowMap,T=E.shadowMatrix,g=E.shadowCamera,g.position.setFromMatrixPosition(E.matrixWorld),c.setFromMatrixPosition(E.target.matrixWorld),g.lookAt(c),g.updateMatrixWorld(),g.matrixWorldInverse.getInverse(g.matrixWorld),E.cameraHelper&&(E.cameraHelper.visible=E.shadowCameraVisible),E.shadowCameraVisible&&E.cameraHelper.update(),T.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),T.multiply(g.projectionMatrix),T.multiply(g.matrixWorldInverse),s.multiplyMatrices(g.projectionMatrix,g.matrixWorldInverse),a.setFromMatrix(s),t.setRenderTarget(m),t.clear(),R=u.__webglObjects,E=0,m=R.length;m>E;E++)v=R[E],T=v.object,v.render=!1,!T.visible||!T.castShadow||(T instanceof THREE.Mesh||T instanceof THREE.ParticleSystem)&&T.frustumCulled&&!a.intersectsObject(T)||(T._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,T.matrixWorld),v.render=!0);for(E=0,m=R.length;m>E;E++)v=R[E],v.render&&(T=v.object,v=v.buffer,_=T.material instanceof THREE.MeshFaceMaterial?T.material.materials[0]:T.material,y=void 0!==T.geometry.morphTargets&&0<T.geometry.morphTargets.length&&_.morphTargets,_=T instanceof THREE.SkinnedMesh&&_.skinning,y=T.customDepthMaterial?T.customDepthMaterial:_?y?o:n:y?r:i,v instanceof THREE.BufferGeometry?t.renderBufferDirect(g,u.__lights,null,y,v,T):t.renderBuffer(g,u.__lights,null,y,v,T));for(R=u.__webglObjectsImmediate,E=0,m=R.length;m>E;E++)v=R[E],T=v.object,T.visible&&T.castShadow&&(T._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,T.matrixWorld),t.renderImmediateObject(g,u.__lights,null,i,T))}f=t.getClearColor(),d=t.getClearAlpha(),e.clearColor(f.r,f.g,f.b,d),e.enable(e.BLEND),t.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var t,i,r,n,o,a,s,h,l,c,u,p,f,d,E,m,g,T,v,y,R,x,H,_,b;this.init=function(e){T=e.context,v=e,R=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),x=new Uint16Array([0,1,2,0,2,3]),H=T.createBuffer(),_=T.createBuffer(),T.bindBuffer(T.ARRAY_BUFFER,H),T.bufferData(T.ARRAY_BUFFER,R,T.STATIC_DRAW),T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,_),T.bufferData(T.ELEMENT_ARRAY_BUFFER,x,T.STATIC_DRAW),e=T.createProgram();var w=T.createShader(T.VERTEX_SHADER),M=T.createShader(T.FRAGMENT_SHADER);T.shaderSource(w,["precision "+v.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")),T.shaderSource(M,["precision "+v.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")),T.compileShader(w),T.compileShader(M),T.attachShader(e,w),T.attachShader(e,M),T.linkProgram(e),b=e,m=T.getAttribLocation(b,"position"),g=T.getAttribLocation(b,"uv"),t=T.getUniformLocation(b,"uvOffset"),i=T.getUniformLocation(b,"uvScale"),r=T.getUniformLocation(b,"rotation"),n=T.getUniformLocation(b,"scale"),o=T.getUniformLocation(b,"color"),a=T.getUniformLocation(b,"map"),s=T.getUniformLocation(b,"opacity"),h=T.getUniformLocation(b,"modelViewMatrix"),l=T.getUniformLocation(b,"projectionMatrix"),c=T.getUniformLocation(b,"fogType"),u=T.getUniformLocation(b,"fogDensity"),p=T.getUniformLocation(b,"fogNear"),f=T.getUniformLocation(b,"fogFar"),d=T.getUniformLocation(b,"fogColor"),E=T.getUniformLocation(b,"alphaTest"),e=document.createElement("canvas"),e.width=8,e.height=8,w=e.getContext("2d"),w.fillStyle="#ffffff",w.fillRect(0,0,e.width,e.height),y=new THREE.Texture(e),y.needsUpdate=!0},this.render=function(R,x,w,M){if(w=R.__webglSprites,M=w.length){T.useProgram(b),T.enableVertexAttribArray(m),T.enableVertexAttribArray(g),T.disable(T.CULL_FACE),T.enable(T.BLEND),T.bindBuffer(T.ARRAY_BUFFER,H),T.vertexAttribPointer(m,2,T.FLOAT,!1,16,0),T.vertexAttribPointer(g,2,T.FLOAT,!1,16,8),T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,_),T.uniformMatrix4fv(l,!1,x.projectionMatrix.elements),T.activeTexture(T.TEXTURE0),T.uniform1i(a,0);var S=0,A=0,C=R.fog;C?(T.uniform3f(d,C.color.r,C.color.g,C.color.b),C instanceof THREE.Fog?(T.uniform1f(p,C.near),T.uniform1f(f,C.far),T.uniform1i(c,1),A=S=1):C instanceof THREE.FogExp2&&(T.uniform1f(u,C.density),T.uniform1i(c,2),A=S=2)):(T.uniform1i(c,0),A=S=0);for(var L,P=[],C=0;M>C;C++)L=w[C],!1!==L.visible&&(L._modelViewMatrix.multiplyMatrices(x.matrixWorldInverse,L.matrixWorld),L.z=-L._modelViewMatrix.elements[14]);for(w.sort(e),C=0;M>C;C++)L=w[C],!1!==L.visible&&(x=L.material,T.uniform1f(E,x.alphaTest),T.uniformMatrix4fv(h,!1,L._modelViewMatrix.elements),P[0]=L.scale.x,P[1]=L.scale.y,L=R.fog&&x.fog?A:0,S!==L&&(T.uniform1i(c,L),S=L),null!==x.map?(T.uniform2f(t,x.map.offset.x,x.map.offset.y),T.uniform2f(i,x.map.repeat.x,x.map.repeat.y)):(T.uniform2f(t,0,0),T.uniform2f(i,1,1)),T.uniform1f(s,x.opacity),T.uniform3f(o,x.color.r,x.color.g,x.color.b),T.uniform1f(r,x.rotation),T.uniform2fv(n,P),v.setBlending(x.blending,x.blendEquation,x.blendSrc,x.blendDst),v.setDepthTest(x.depthTest),v.setDepthWrite(x.depthWrite),x.map&&x.map.image&&x.map.image.width?v.setTexture(x.map,0):v.setTexture(y,0),T.drawElements(T.TRIANGLES,6,T.UNSIGNED_SHORT,0));T.enable(T.CULL_FACE)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var e,t,i,r,n,o,a=new THREE.Frustum,s=new THREE.Matrix4;this.init=function(a){e=a.context,t=a,a=THREE.ShaderLib.depthRGBA;var s=THREE.UniformsUtils.clone(a.uniforms);i=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s}),r=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0}),n=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,skinning:!0}),o=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0,skinning:!0}),i._shadowPass=!0,r._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(h,l){var c,u,p,f,d,E;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),t.setDepthTest(!0),!0===h.autoUpdate&&h.updateMatrixWorld(),l.matrixWorldInverse.getInverse(l.matrixWorld),s.multiplyMatrices(l.projectionMatrix,l.matrixWorldInverse),a.setFromMatrix(s),t.setRenderTarget(this.renderTarget),t.clear(),E=h.__webglObjects,c=0,u=E.length;u>c;c++)p=E[c],d=p.object,p.render=!1,!d.visible||(d instanceof THREE.Mesh||d instanceof THREE.ParticleSystem)&&d.frustumCulled&&!a.intersectsObject(d)||(d._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,d.matrixWorld),p.render=!0);var m;for(c=0,u=E.length;u>c;c++)p=E[c],p.render&&(d=p.object,p=p.buffer,d instanceof THREE.ParticleSystem&&!d.customDepthMaterial||((m=d.material instanceof THREE.MeshFaceMaterial?d.material.materials[0]:d.material)&&t.setMaterialFaces(d.material),f=0<d.geometry.morphTargets.length&&m.morphTargets,m=d instanceof THREE.SkinnedMesh&&m.skinning,f=d.customDepthMaterial?d.customDepthMaterial:m?f?o:n:f?r:i,p instanceof THREE.BufferGeometry?t.renderBufferDirect(l,h.__lights,null,f,p,d):t.renderBuffer(l,h.__lights,null,f,p,d)));for(E=h.__webglObjectsImmediate,c=0,u=E.length;u>c;c++)p=E[c],d=p.object,d.visible&&(d._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,d.matrixWorld),t.renderImmediateObject(l,h.__lights,null,i,d));c=t.getClearColor(),u=t.getClearAlpha(),e.clearColor(c.r,c.g,c.b,u),e.enable(e.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};